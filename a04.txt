    t.squarekg = 0x338f;
            t.squarekm = 0x339e;
            t.squarekmcapital = 0x33ce;
            t.squareln = 0x33d1;
            t.squarelog = 0x33d2;
            t.squaremg = 0x338e;
            t.squaremil = 0x33d5;
            t.squaremm = 0x339c;
            t.squaremsquared = 0x33a1;
            t.squareorthogonalcrosshatchfill = 0x25a6;
            t.squareupperlefttolowerrightfill = 0x25a7;
            t.squareupperrighttolowerleftfill = 0x25a8;
            t.squareverticalfill = 0x25a5;
            t.squarewhitewithsmallblack = 0x25a3;
            t.srsquare = 0x33db;
            t.ssabengali = 0x09b7;
            t.ssadeva = 0x0937;
            t.ssagujarati = 0x0ab7;
            t.ssangcieuckorean = 0x3149;
            t.ssanghieuhkorean = 0x3185;
            t.ssangieungkorean = 0x3180;
            t.ssangkiyeokkorean = 0x3132;
            t.ssangnieunkorean = 0x3165;
            t.ssangpieupkorean = 0x3143;
            t.ssangsioskorean = 0x3146;
            t.ssangtikeutkorean = 0x3138;
            t.ssuperior = 0xf6f2;
            t.sterling = 0x00a3;
            t.sterlingmonospace = 0xffe1;
            t.strokelongoverlaycmb = 0x0336;
            t.strokeshortoverlaycmb = 0x0335;
            t.subset = 0x2282;
            t.subsetnotequal = 0x228a;
            t.subsetorequal = 0x2286;
            t.succeeds = 0x227b;
            t.suchthat = 0x220b;
            t.suhiragana = 0x3059;
            t.sukatakana = 0x30b9;
            t.sukatakanahalfwidth = 0xff7d;
            t.sukunarabic = 0x0652;
            t.summation = 0x2211;
            t.sun = 0x263c;
            t.superset = 0x2283;
            t.supersetnotequal = 0x228b;
            t.supersetorequal = 0x2287;
            t.svsquare = 0x33dc;
            t.syouwaerasquare = 0x337c;
            t.t = 0x0074;
            t.tabengali = 0x09a4;
            t.tackdown = 0x22a4;
            t.tackleft = 0x22a3;
            t.tadeva = 0x0924;
            t.tagujarati = 0x0aa4;
            t.tagurmukhi = 0x0a24;
            t.taharabic = 0x0637;
            t.tahfinalarabic = 0xfec2;
            t.tahinitialarabic = 0xfec3;
            t.tahiragana = 0x305f;
            t.tahmedialarabic = 0xfec4;
            t.taisyouerasquare = 0x337d;
            t.takatakana = 0x30bf;
            t.takatakanahalfwidth = 0xff80;
            t.tatweelarabic = 0x0640;
            t.tau = 0x03c4;
            t.tav = 0x05ea;
            t.tavdages = 0xfb4a;
            t.tavdagesh = 0xfb4a;
            t.tavdageshhebrew = 0xfb4a;
            t.tavhebrew = 0x05ea;
            t.tbar = 0x0167;
            t.tbopomofo = 0x310a;
            t.tcaron = 0x0165;
            t.tccurl = 0x02a8;
            t.tcedilla = 0x0163;
            t.tcheharabic = 0x0686;
            t.tchehfinalarabic = 0xfb7b;
            t.tchehinitialarabic = 0xfb7c;
            t.tchehmedialarabic = 0xfb7d;
            t.tcircle = 0x24e3;
            t.tcircumflexbelow = 0x1e71;
            t.tcommaaccent = 0x0163;
            t.tdieresis = 0x1e97;
            t.tdotaccent = 0x1e6b;
            t.tdotbelow = 0x1e6d;
            t.tecyrillic = 0x0442;
            t.tedescendercyrillic = 0x04ad;
            t.teharabic = 0x062a;
            t.tehfinalarabic = 0xfe96;
            t.tehhahinitialarabic = 0xfca2;
            t.tehhahisolatedarabic = 0xfc0c;
            t.tehinitialarabic = 0xfe97;
            t.tehiragana = 0x3066;
            t.tehjeeminitialarabic = 0xfca1;
            t.tehjeemisolatedarabic = 0xfc0b;
            t.tehmarbutaarabic = 0x0629;
            t.tehmarbutafinalarabic = 0xfe94;
            t.tehmedialarabic = 0xfe98;
            t.tehmeeminitialarabic = 0xfca4;
            t.tehmeemisolatedarabic = 0xfc0e;
            t.tehnoonfinalarabic = 0xfc73;
            t.tekatakana = 0x30c6;
            t.tekatakanahalfwidth = 0xff83;
            t.telephone = 0x2121;
            t.telephoneblack = 0x260e;
            t.telishagedolahebrew = 0x05a0;
            t.telishaqetanahebrew = 0x05a9;
            t.tencircle = 0x2469;
            t.tenideographicparen = 0x3229;
            t.tenparen = 0x247d;
            t.tenperiod = 0x2491;
            t.tenroman = 0x2179;
            t.tesh = 0x02a7;
            t.tet = 0x05d8;
            t.tetdagesh = 0xfb38;
            t.tetdageshhebrew = 0xfb38;
            t.tethebrew = 0x05d8;
            t.tetsecyrillic = 0x04b5;
            t.tevirhebrew = 0x059b;
            t.tevirlefthebrew = 0x059b;
            t.thabengali = 0x09a5;
            t.thadeva = 0x0925;
            t.thagujarati = 0x0aa5;
            t.thagurmukhi = 0x0a25;
            t.thalarabic = 0x0630;
            t.thalfinalarabic = 0xfeac;
            t.thanthakhatlowleftthai = 0xf898;
            t.thanthakhatlowrightthai = 0xf897;
            t.thanthakhatthai = 0x0e4c;
            t.thanthakhatupperleftthai = 0xf896;
            t.theharabic = 0x062b;
            t.thehfinalarabic = 0xfe9a;
            t.thehinitialarabic = 0xfe9b;
            t.thehmedialarabic = 0xfe9c;
            t.thereexists = 0x2203;
            t.therefore = 0x2234;
            t.theta = 0x03b8;
            t.theta1 = 0x03d1;
            t.thetasymbolgreek = 0x03d1;
            t.thieuthacirclekorean = 0x3279;
            t.thieuthaparenkorean = 0x3219;
            t.thieuthcirclekorean = 0x326b;
            t.thieuthkorean = 0x314c;
            t.thieuthparenkorean = 0x320b;
            t.thirteencircle = 0x246c;
            t.thirteenparen = 0x2480;
            t.thirteenperiod = 0x2494;
            t.thonangmonthothai = 0x0e11;
            t.thook = 0x01ad;
            t.thophuthaothai = 0x0e12;
            t.thorn = 0x00fe;
            t.thothahanthai = 0x0e17;
            t.thothanthai = 0x0e10;
            t.thothongthai = 0x0e18;
            t.thothungthai = 0x0e16;
            t.thousandcyrillic = 0x0482;
            t.thousandsseparatorarabic = 0x066c;
            t.thousandsseparatorpersian = 0x066c;
            t.three = 0x0033;
            t.threearabic = 0x0663;
            t.threebengali = 0x09e9;
            t.threecircle = 0x2462;
            t.threecircleinversesansserif = 0x278c;
            t.threedeva = 0x0969;
            t.threeeighths = 0x215c;
            t.threegujarati = 0x0ae9;
            t.threegurmukhi = 0x0a69;
            t.threehackarabic = 0x0663;
            t.threehangzhou = 0x3023;
            t.threeideographicparen = 0x3222;
            t.threeinferior = 0x2083;
            t.threemonospace = 0xff13;
            t.threenumeratorbengali = 0x09f6;
            t.threeoldstyle = 0xf733;
            t.threeparen = 0x2476;
            t.threeperiod = 0x248a;
            t.threepersian = 0x06f3;
            t.threequarters = 0x00be;
            t.threequartersemdash = 0xf6de;
            t.threeroman = 0x2172;
            t.threesuperior = 0x00b3;
            t.threethai = 0x0e53;
            t.thzsquare = 0x3394;
            t.tihiragana = 0x3061;
            t.tikatakana = 0x30c1;
            t.tikatakanahalfwidth = 0xff81;
            t.tikeutacirclekorean = 0x3270;
            t.tikeutaparenkorean = 0x3210;
            t.tikeutcirclekorean = 0x3262;
            t.tikeutkorean = 0x3137;
            t.tikeutparenkorean = 0x3202;
            t.tilde = 0x02dc;
            t.tildebelowcmb = 0x0330;
            t.tildecmb = 0x0303;
            t.tildecomb = 0x0303;
            t.tildedoublecmb = 0x0360;
            t.tildeoperator = 0x223c;
            t.tildeoverlaycmb = 0x0334;
            t.tildeverticalcmb = 0x033e;
            t.timescircle = 0x2297;
            t.tipehahebrew = 0x0596;
            t.tipehalefthebrew = 0x0596;
            t.tippigurmukhi = 0x0a70;
            t.titlocyrilliccmb = 0x0483;
            t.tiwnarmenian = 0x057f;
            t.tlinebelow = 0x1e6f;
            t.tmonospace = 0xff54;
            t.toarmenian = 0x0569;
            t.tohiragana = 0x3068;
            t.tokatakana = 0x30c8;
            t.tokatakanahalfwidth = 0xff84;
            t.tonebarextrahighmod = 0x02e5;
            t.tonebarextralowmod = 0x02e9;
            t.tonebarhighmod = 0x02e6;
            t.tonebarlowmod = 0x02e8;
            t.tonebarmidmod = 0x02e7;
            t.tonefive = 0x01bd;
            t.tonesix = 0x0185;
            t.tonetwo = 0x01a8;
            t.tonos = 0x0384;
            t.tonsquare = 0x3327;
            t.topatakthai = 0x0e0f;
            t.tortoiseshellbracketleft = 0x3014;
            t.tortoiseshellbracketleftsmall = 0xfe5d;
            t.tortoiseshellbracketleftvertical = 0xfe39;
            t.tortoiseshellbracketright = 0x3015;
            t.tortoiseshellbracketrightsmall = 0xfe5e;
            t.tortoiseshellbracketrightvertical = 0xfe3a;
            t.totaothai = 0x0e15;
            t.tpalatalhook = 0x01ab;
            t.tparen = 0x24af;
            t.trademark = 0x2122;
            t.trademarksans = 0xf8ea;
            t.trademarkserif = 0xf6db;
            t.tretroflexhook = 0x0288;
            t.triagdn = 0x25bc;
            t.triaglf = 0x25c4;
            t.triagrt = 0x25ba;
            t.triagup = 0x25b2;
            t.ts = 0x02a6;
            t.tsadi = 0x05e6;
            t.tsadidagesh = 0xfb46;
            t.tsadidageshhebrew = 0xfb46;
            t.tsadihebrew = 0x05e6;
            t.tsecyrillic = 0x0446;
            t.tsere = 0x05b5;
            t.tsere12 = 0x05b5;
            t.tsere1e = 0x05b5;
            t.tsere2b = 0x05b5;
            t.tserehebrew = 0x05b5;
            t.tserenarrowhebrew = 0x05b5;
            t.tserequarterhebrew = 0x05b5;
            t.tserewidehebrew = 0x05b5;
            t.tshecyrillic = 0x045b;
            t.tsuperior = 0xf6f3;
            t.ttabengali = 0x099f;
            t.ttadeva = 0x091f;
            t.ttagujarati = 0x0a9f;
            t.ttagurmukhi = 0x0a1f;
            t.tteharabic = 0x0679;
            t.ttehfinalarabic = 0xfb67;
            t.ttehinitialarabic = 0xfb68;
            t.ttehmedialarabic = 0xfb69;
            t.tthabengali = 0x09a0;
            t.tthadeva = 0x0920;
            t.tthagujarati = 0x0aa0;
            t.tthagurmukhi = 0x0a20;
            t.tturned = 0x0287;
            t.tuhiragana = 0x3064;
            t.tukatakana = 0x30c4;
            t.tukatakanahalfwidth = 0xff82;
            t.tusmallhiragana = 0x3063;
            t.tusmallkatakana = 0x30c3;
            t.tusmallkatakanahalfwidth = 0xff6f;
            t.twelvecircle = 0x246b;
            t.twelveparen = 0x247f;
            t.twelveperiod = 0x2493;
            t.twelveroman = 0x217b;
            t.twentycircle = 0x2473;
            t.twentyhangzhou = 0x5344;
            t.twentyparen = 0x2487;
            t.twentyperiod = 0x249b;
            t.two = 0x0032;
            t.twoarabic = 0x0662;
            t.twobengali = 0x09e8;
            t.twocircle = 0x2461;
            t.twocircleinversesansserif = 0x278b;
            t.twodeva = 0x0968;
            t.twodotenleader = 0x2025;
            t.twodotleader = 0x2025;
            t.twodotleadervertical = 0xfe30;
            t.twogujarati = 0x0ae8;
            t.twogurmukhi = 0x0a68;
            t.twohackarabic = 0x0662;
            t.twohangzhou = 0x3022;
            t.twoideographicparen = 0x3221;
            t.twoinferior = 0x2082;
            t.twomonospace = 0xff12;
            t.twonumeratorbengali = 0x09f5;
            t.twooldstyle = 0xf732;
            t.twoparen = 0x2475;
            t.twoperiod = 0x2489;
            t.twopersian = 0x06f2;
            t.tworoman = 0x2171;
            t.twostroke = 0x01bb;
            t.twosuperior = 0x00b2;
            t.twothai = 0x0e52;
            t.twothirds = 0x2154;
            t.u = 0x0075;
            t.uacute = 0x00fa;
            t.ubar = 0x0289;
            t.ubengali = 0x0989;
            t.ubopomofo = 0x3128;
            t.ubreve = 0x016d;
            t.ucaron = 0x01d4;
            t.ucircle = 0x24e4;
            t.ucircumflex = 0x00fb;
            t.ucircumflexbelow = 0x1e77;
            t.ucyrillic = 0x0443;
            t.udattadeva = 0x0951;
            t.udblacute = 0x0171;
            t.udblgrave = 0x0215;
            t.udeva = 0x0909;
            t.udieresis = 0x00fc;
            t.udieresisacute = 0x01d8;
            t.udieresisbelow = 0x1e73;
            t.udieresiscaron = 0x01da;
            t.udieresiscyrillic = 0x04f1;
            t.udieresisgrave = 0x01dc;
            t.udieresismacron = 0x01d6;
            t.udotbelow = 0x1ee5;
            t.ugrave = 0x00f9;
            t.ugujarati = 0x0a89;
            t.ugurmukhi = 0x0a09;
            t.uhiragana = 0x3046;
            t.uhookabove = 0x1ee7;
            t.uhorn = 0x01b0;
            t.uhornacute = 0x1ee9;
            t.uhorndotbelow = 0x1ef1;
            t.uhorngrave = 0x1eeb;
            t.uhornhookabove = 0x1eed;
            t.uhorntilde = 0x1eef;
            t.uhungarumlaut = 0x0171;
            t.uhungarumlautcyrillic = 0x04f3;
            t.uinvertedbreve = 0x0217;
            t.ukatakana = 0x30a6;
            t.ukatakanahalfwidth = 0xff73;
            t.ukcyrillic = 0x0479;
            t.ukorean = 0x315c;
            t.umacron = 0x016b;
            t.umacroncyrillic = 0x04ef;
            t.umacrondieresis = 0x1e7b;
            t.umatragurmukhi = 0x0a41;
            t.umonospace = 0xff55;
            t.underscore = 0x005f;
            t.underscoredbl = 0x2017;
            t.underscoremonospace = 0xff3f;
            t.underscorevertical = 0xfe33;
            t.underscorewavy = 0xfe4f;
            t.union = 0x222a;
            t.universal = 0x2200;
            t.uogonek = 0x0173;
            t.uparen = 0x24b0;
            t.upblock = 0x2580;
            t.upperdothebrew = 0x05c4;
            t.upsilon = 0x03c5;
            t.upsilondieresis = 0x03cb;
            t.upsilondieresistonos = 0x03b0;
            t.upsilonlatin = 0x028a;
            t.upsilontonos = 0x03cd;
            t.uptackbelowcmb = 0x031d;
            t.uptackmod = 0x02d4;
            t.uragurmukhi = 0x0a73;
            t.uring = 0x016f;
            t.ushortcyrillic = 0x045e;
            t.usmallhiragana = 0x3045;
            t.usmallkatakana = 0x30a5;
            t.usmallkatakanahalfwidth = 0xff69;
            t.ustraightcyrillic = 0x04af;
            t.ustraightstrokecyrillic = 0x04b1;
            t.utilde = 0x0169;
            t.utildeacute = 0x1e79;
            t.utildebelow = 0x1e75;
            t.uubengali = 0x098a;
            t.uudeva = 0x090a;
            t.uugujarati = 0x0a8a;
            t.uugurmukhi = 0x0a0a;
            t.uumatragurmukhi = 0x0a42;
            t.uuvowelsignbengali = 0x09c2;
            t.uuvowelsigndeva = 0x0942;
            t.uuvowelsigngujarati = 0x0ac2;
            t.uvowelsignbengali = 0x09c1;
            t.uvowelsigndeva = 0x0941;
            t.uvowelsigngujarati = 0x0ac1;
            t.v = 0x0076;
            t.vadeva = 0x0935;
            t.vagujarati = 0x0ab5;
            t.vagurmukhi = 0x0a35;
            t.vakatakana = 0x30f7;
            t.vav = 0x05d5;
            t.vavdagesh = 0xfb35;
            t.vavdagesh65 = 0xfb35;
            t.vavdageshhebrew = 0xfb35;
            t.vavhebrew = 0x05d5;
            t.vavholam = 0xfb4b;
            t.vavholamhebrew = 0xfb4b;
            t.vavvavhebrew = 0x05f0;
            t.vavyodhebrew = 0x05f1;
            t.vcircle = 0x24e5;
            t.vdotbelow = 0x1e7f;
            t.vecyrillic = 0x0432;
            t.veharabic = 0x06a4;
            t.vehfinalarabic = 0xfb6b;
            t.vehinitialarabic = 0xfb6c;
            t.vehmedialarabic = 0xfb6d;
            t.vekatakana = 0x30f9;
            t.venus = 0x2640;
            t.verticalbar = 0x007c;
            t.verticallineabovecmb = 0x030d;
            t.verticallinebelowcmb = 0x0329;
            t.verticallinelowmod = 0x02cc;
            t.verticallinemod = 0x02c8;
            t.vewarmenian = 0x057e;
            t.vhook = 0x028b;
            t.vikatakana = 0x30f8;
            t.viramabengali = 0x09cd;
            t.viramadeva = 0x094d;
            t.viramagujarati = 0x0acd;
            t.visargabengali = 0x0983;
            t.visargadeva = 0x0903;
            t.visargagujarati = 0x0a83;
            t.vmonospace = 0xff56;
            t.voarmenian = 0x0578;
            t.voicediterationhiragana = 0x309e;
            t.voicediterationkatakana = 0x30fe;
            t.voicedmarkkana = 0x309b;
            t.voicedmarkkanahalfwidth = 0xff9e;
            t.vokatakana = 0x30fa;
            t.vparen = 0x24b1;
            t.vtilde = 0x1e7d;
            t.vturned = 0x028c;
            t.vuhiragana = 0x3094;
            t.vukatakana = 0x30f4;
            t.w = 0x0077;
            t.wacute = 0x1e83;
            t.waekorean = 0x3159;
            t.wahiragana = 0x308f;
            t.wakatakana = 0x30ef;
            t.wakatakanahalfwidth = 0xff9c;
            t.wakorean = 0x3158;
            t.wasmallhiragana = 0x308e;
            t.wasmallkatakana = 0x30ee;
            t.wattosquare = 0x3357;
            t.wavedash = 0x301c;
            t.wavyunderscorevertical = 0xfe34;
            t.wawarabic = 0x0648;
            t.wawfinalarabic = 0xfeee;
            t.wawhamzaabovearabic = 0x0624;
            t.wawhamzaabovefinalarabic = 0xfe86;
            t.wbsquare = 0x33dd;
            t.wcircle = 0x24e6;
            t.wcircumflex = 0x0175;
            t.wdieresis = 0x1e85;
            t.wdotaccent = 0x1e87;
            t.wdotbelow = 0x1e89;
            t.wehiragana = 0x3091;
            t.weierstrass = 0x2118;
            t.wekatakana = 0x30f1;
            t.wekorean = 0x315e;
            t.weokorean = 0x315d;
            t.wgrave = 0x1e81;
            t.whitebullet = 0x25e6;
            t.whitecircle = 0x25cb;
            t.whitecircleinverse = 0x25d9;
            t.whitecornerbracketleft = 0x300e;
            t.whitecornerbracketleftvertical = 0xfe43;
            t.whitecornerbracketright = 0x300f;
            t.whitecornerbracketrightvertical = 0xfe44;
            t.whitediamond = 0x25c7;
            t.whitediamondcontainingblacksmalldiamond = 0x25c8;
            t.whitedownpointingsmalltriangle = 0x25bf;
            t.whitedownpointingtriangle = 0x25bd;
            t.whiteleftpointingsmalltriangle = 0x25c3;
            t.whiteleftpointingtriangle = 0x25c1;
            t.whitelenticularbracketleft = 0x3016;
            t.whitelenticularbracketright = 0x3017;
            t.whiterightpointingsmalltriangle = 0x25b9;
            t.whiterightpointingtriangle = 0x25b7;
            t.whitesmallsquare = 0x25ab;
            t.whitesmilingface = 0x263a;
            t.whitesquare = 0x25a1;
            t.whitestar = 0x2606;
            t.whitetelephone = 0x260f;
            t.whitetortoiseshellbracketleft = 0x3018;
            t.whitetortoiseshellbracketright = 0x3019;
            t.whiteuppointingsmalltriangle = 0x25b5;
            t.whiteuppointingtriangle = 0x25b3;
            t.wihiragana = 0x3090;
            t.wikatakana = 0x30f0;
            t.wikorean = 0x315f;
            t.wmonospace = 0xff57;
            t.wohiragana = 0x3092;
            t.wokatakana = 0x30f2;
            t.wokatakanahalfwidth = 0xff66;
            t.won = 0x20a9;
            t.wonmonospace = 0xffe6;
            t.wowaenthai = 0x0e27;
            t.wparen = 0x24b2;
            t.wring = 0x1e98;
            t.wsuperior = 0x02b7;
            t.wturned = 0x028d;
            t.wynn = 0x01bf;
            t.x = 0x0078;
            t.xabovecmb = 0x033d;
            t.xbopomofo = 0x3112;
            t.xcircle = 0x24e7;
            t.xdieresis = 0x1e8d;
            t.xdotaccent = 0x1e8b;
            t.xeharmenian = 0x056d;
            t.xi = 0x03be;
            t.xmonospace = 0xff58;
            t.xparen = 0x24b3;
            t.xsuperior = 0x02e3;
            t.y = 0x0079;
            t.yaadosquare = 0x334e;
            t.yabengali = 0x09af;
            t.yacute = 0x00fd;
            t.yadeva = 0x092f;
            t.yaekorean = 0x3152;
            t.yagujarati = 0x0aaf;
            t.yagurmukhi = 0x0a2f;
            t.yahiragana = 0x3084;
            t.yakatakana = 0x30e4;
            t.yakatakanahalfwidth = 0xff94;
            t.yakorean = 0x3151;
            t.yamakkanthai = 0x0e4e;
            t.yasmallhiragana = 0x3083;
            t.yasmallkatakana = 0x30e3;
            t.yasmallkatakanahalfwidth = 0xff6c;
            t.yatcyrillic = 0x0463;
            t.ycircle = 0x24e8;
            t.ycircumflex = 0x0177;
            t.ydieresis = 0x00ff;
            t.ydotaccent = 0x1e8f;
            t.ydotbelow = 0x1ef5;
            t.yeharabic = 0x064a;
            t.yehbarreearabic = 0x06d2;
            t.yehbarreefinalarabic = 0xfbaf;
            t.yehfinalarabic = 0xfef2;
            t.yehhamzaabovearabic = 0x0626;
            t.yehhamzaabovefinalarabic = 0xfe8a;
            t.yehhamzaaboveinitialarabic = 0xfe8b;
            t.yehhamzaabovemedialarabic = 0xfe8c;
            t.yehinitialarabic = 0xfef3;
            t.yehmedialarabic = 0xfef4;
            t.yehmeeminitialarabic = 0xfcdd;
            t.yehmeemisolatedarabic = 0xfc58;
            t.yehnoonfinalarabic = 0xfc94;
            t.yehthreedotsbelowarabic = 0x06d1;
            t.yekorean = 0x3156;
            t.yen = 0x00a5;
            t.yenmonospace = 0xffe5;
            t.yeokorean = 0x3155;
            t.yeorinhieuhkorean = 0x3186;
            t.yerahbenyomohebrew = 0x05aa;
            t.yerahbenyomolefthebrew = 0x05aa;
            t.yericyrillic = 0x044b;
            t.yerudieresiscyrillic = 0x04f9;
            t.yesieungkorean = 0x3181;
            t.yesieungpansioskorean = 0x3183;
            t.yesieungsioskorean = 0x3182;
            t.yetivhebrew = 0x059a;
            t.ygrave = 0x1ef3;
            t.yhook = 0x01b4;
            t.yhookabove = 0x1ef7;
            t.yiarmenian = 0x0575;
            t.yicyrillic = 0x0457;
            t.yikorean = 0x3162;
            t.yinyang = 0x262f;
            t.yiwnarmenian = 0x0582;
            t.ymonospace = 0xff59;
            t.yod = 0x05d9;
            t.yoddagesh = 0xfb39;
            t.yoddageshhebrew = 0xfb39;
            t.yodhebrew = 0x05d9;
            t.yodyodhebrew = 0x05f2;
            t.yodyodpatahhebrew = 0xfb1f;
            t.yohiragana = 0x3088;
            t.yoikorean = 0x3189;
            t.yokatakana = 0x30e8;
            t.yokatakanahalfwidth = 0xff96;
            t.yokorean = 0x315b;
            t.yosmallhiragana = 0x3087;
            t.yosmallkatakana = 0x30e7;
            t.yosmallkatakanahalfwidth = 0xff6e;
            t.yotgreek = 0x03f3;
            t.yoyaekorean = 0x3188;
            t.yoyakorean = 0x3187;
            t.yoyakthai = 0x0e22;
            t.yoyingthai = 0x0e0d;
            t.yparen = 0x24b4;
            t.ypogegrammeni = 0x037a;
            t.ypogegrammenigreekcmb = 0x0345;
            t.yr = 0x01a6;
            t.yring = 0x1e99;
            t.ysuperior = 0x02b8;
            t.ytilde = 0x1ef9;
            t.yturned = 0x028e;
            t.yuhiragana = 0x3086;
            t.yuikorean = 0x318c;
            t.yukatakana = 0x30e6;
            t.yukatakanahalfwidth = 0xff95;
            t.yukorean = 0x3160;
            t.yusbigcyrillic = 0x046b;
            t.yusbigiotifiedcyrillic = 0x046d;
            t.yuslittlecyrillic = 0x0467;
            t.yuslittleiotifiedcyrillic = 0x0469;
            t.yusmallhiragana = 0x3085;
            t.yusmallkatakana = 0x30e5;
            t.yusmallkatakanahalfwidth = 0xff6d;
            t.yuyekorean = 0x318b;
            t.yuyeokorean = 0x318a;
            t.yyabengali = 0x09df;
            t.yyadeva = 0x095f;
            t.z = 0x007a;
            t.zaarmenian = 0x0566;
            t.zacute = 0x017a;
            t.zadeva = 0x095b;
            t.zagurmukhi = 0x0a5b;
            t.zaharabic = 0x0638;
            t.zahfinalarabic = 0xfec6;
            t.zahinitialarabic = 0xfec7;
            t.zahiragana = 0x3056;
            t.zahmedialarabic = 0xfec8;
            t.zainarabic = 0x0632;
            t.zainfinalarabic = 0xfeb0;
            t.zakatakana = 0x30b6;
            t.zaqefgadolhebrew = 0x0595;
            t.zaqefqatanhebrew = 0x0594;
            t.zarqahebrew = 0x0598;
            t.zayin = 0x05d6;
            t.zayindagesh = 0xfb36;
            t.zayindageshhebrew = 0xfb36;
            t.zayinhebrew = 0x05d6;
            t.zbopomofo = 0x3117;
            t.zcaron = 0x017e;
            t.zcircle = 0x24e9;
            t.zcircumflex = 0x1e91;
            t.zcurl = 0x0291;
            t.zdot = 0x017c;
            t.zdotaccent = 0x017c;
            t.zdotbelow = 0x1e93;
            t.zecyrillic = 0x0437;
            t.zedescendercyrillic = 0x0499;
            t.zedieresiscyrillic = 0x04df;
            t.zehiragana = 0x305c;
            t.zekatakana = 0x30bc;
            t.zero = 0x0030;
            t.zeroarabic = 0x0660;
            t.zerobengali = 0x09e6;
            t.zerodeva = 0x0966;
            t.zerogujarati = 0x0ae6;
            t.zerogurmukhi = 0x0a66;
            t.zerohackarabic = 0x0660;
            t.zeroinferior = 0x2080;
            t.zeromonospace = 0xff10;
            t.zerooldstyle = 0xf730;
            t.zeropersian = 0x06f0;
            t.zerosuperior = 0x2070;
            t.zerothai = 0x0e50;
            t.zerowidthjoiner = 0xfeff;
            t.zerowidthnonjoiner = 0x200c;
            t.zerowidthspace = 0x200b;
            t.zeta = 0x03b6;
            t.zhbopomofo = 0x3113;
            t.zhearmenian = 0x056a;
            t.zhebrevecyrillic = 0x04c2;
            t.zhecyrillic = 0x0436;
            t.zhedescendercyrillic = 0x0497;
            t.zhedieresiscyrillic = 0x04dd;
            t.zihiragana = 0x3058;
            t.zikatakana = 0x30b8;
            t.zinorhebrew = 0x05ae;
            t.zlinebelow = 0x1e95;
            t.zmonospace = 0xff5a;
            t.zohiragana = 0x305e;
            t.zokatakana = 0x30be;
            t.zparen = 0x24b5;
            t.zretroflexhook = 0x0290;
            t.zstroke = 0x01b6;
            t.zuhiragana = 0x305a;
            t.zukatakana = 0x30ba;
            t[".notdef"] = 0x0000;
            t.angbracketleftbig = 0x2329;
            t.angbracketleftBig = 0x2329;
            t.angbracketleftbigg = 0x2329;
            t.angbracketleftBigg = 0x2329;
            t.angbracketrightBig = 0x232a;
            t.angbracketrightbig = 0x232a;
            t.angbracketrightBigg = 0x232a;
            t.angbracketrightbigg = 0x232a;
            t.arrowhookleft = 0x21aa;
            t.arrowhookright = 0x21a9;
            t.arrowlefttophalf = 0x21bc;
            t.arrowleftbothalf = 0x21bd;
            t.arrownortheast = 0x2197;
            t.arrownorthwest = 0x2196;
            t.arrowrighttophalf = 0x21c0;
            t.arrowrightbothalf = 0x21c1;
            t.arrowsoutheast = 0x2198;
            t.arrowsouthwest = 0x2199;
            t.backslashbig = 0x2216;
            t.backslashBig = 0x2216;
            t.backslashBigg = 0x2216;
            t.backslashbigg = 0x2216;
            t.bardbl = 0x2016;
            t.bracehtipdownleft = 0xfe37;
            t.bracehtipdownright = 0xfe37;
            t.bracehtipupleft = 0xfe38;
            t.bracehtipupright = 0xfe38;
            t.braceleftBig = 0x007b;
            t.braceleftbig = 0x007b;
            t.braceleftbigg = 0x007b;
            t.braceleftBigg = 0x007b;
            t.bracerightBig = 0x007d;
            t.bracerightbig = 0x007d;
            t.bracerightbigg = 0x007d;
            t.bracerightBigg = 0x007d;
            t.bracketleftbig = 0x005b;
            t.bracketleftBig = 0x005b;
            t.bracketleftbigg = 0x005b;
            t.bracketleftBigg = 0x005b;
            t.bracketrightBig = 0x005d;
            t.bracketrightbig = 0x005d;
            t.bracketrightbigg = 0x005d;
            t.bracketrightBigg = 0x005d;
            t.ceilingleftbig = 0x2308;
            t.ceilingleftBig = 0x2308;
            t.ceilingleftBigg = 0x2308;
            t.ceilingleftbigg = 0x2308;
            t.ceilingrightbig = 0x2309;
            t.ceilingrightBig = 0x2309;
            t.ceilingrightbigg = 0x2309;
            t.ceilingrightBigg = 0x2309;
            t.circledotdisplay = 0x2299;
            t.circledottext = 0x2299;
            t.circlemultiplydisplay = 0x2297;
            t.circlemultiplytext = 0x2297;
            t.circleplusdisplay = 0x2295;
            t.circleplustext = 0x2295;
            t.contintegraldisplay = 0x222e;
            t.contintegraltext = 0x222e;
            t.coproductdisplay = 0x2210;
            t.coproducttext = 0x2210;
            t.floorleftBig = 0x230a;
            t.floorleftbig = 0x230a;
            t.floorleftbigg = 0x230a;
            t.floorleftBigg = 0x230a;
            t.floorrightbig = 0x230b;
            t.floorrightBig = 0x230b;
            t.floorrightBigg = 0x230b;
            t.floorrightbigg = 0x230b;
            t.hatwide = 0x0302;
            t.hatwider = 0x0302;
            t.hatwidest = 0x0302;
            t.intercal = 0x1d40;
            t.integraldisplay = 0x222b;
            t.integraltext = 0x222b;
            t.intersectiondisplay = 0x22c2;
            t.intersectiontext = 0x22c2;
            t.logicalanddisplay = 0x2227;
            t.logicalandtext = 0x2227;
            t.logicalordisplay = 0x2228;
            t.logicalortext = 0x2228;
            t.parenleftBig = 0x0028;
            t.parenleftbig = 0x0028;
            t.parenleftBigg = 0x0028;
            t.parenleftbigg = 0x0028;
            t.parenrightBig = 0x0029;
            t.parenrightbig = 0x0029;
            t.parenrightBigg = 0x0029;
            t.parenrightbigg = 0x0029;
            t.prime = 0x2032;
            t.productdisplay = 0x220f;
            t.producttext = 0x220f;
            t.radicalbig = 0x221a;
            t.radicalBig = 0x221a;
            t.radicalBigg = 0x221a;
            t.radicalbigg = 0x221a;
            t.radicalbt = 0x221a;
            t.radicaltp = 0x221a;
            t.radicalvertex = 0x221a;
            t.slashbig = 0x002f;
            t.slashBig = 0x002f;
            t.slashBigg = 0x002f;
            t.slashbigg = 0x002f;
            t.summationdisplay = 0x2211;
            t.summationtext = 0x2211;
            t.tildewide = 0x02dc;
            t.tildewider = 0x02dc;
            t.tildewidest = 0x02dc;
            t.uniondisplay = 0x22c3;
            t.unionmultidisplay = 0x228e;
            t.unionmultitext = 0x228e;
            t.unionsqdisplay = 0x2294;
            t.unionsqtext = 0x2294;
            t.uniontext = 0x22c3;
            t.vextenddouble = 0x2225;
            t.vextendsingle = 0x2223;
          }
        );
        exports.getGlyphsUnicode = getGlyphsUnicode;
        const getDingbatsGlyphsUnicode = (0, _core_utils.getLookupTableFactory)(
          function (t) {
            t.space = 0x0020;
            t.a1 = 0x2701;
            t.a2 = 0x2702;
            t.a202 = 0x2703;
            t.a3 = 0x2704;
            t.a4 = 0x260e;
            t.a5 = 0x2706;
            t.a119 = 0x2707;
            t.a118 = 0x2708;
            t.a117 = 0x2709;
            t.a11 = 0x261b;
            t.a12 = 0x261e;
            t.a13 = 0x270c;
            t.a14 = 0x270d;
            t.a15 = 0x270e;
            t.a16 = 0x270f;
            t.a105 = 0x2710;
            t.a17 = 0x2711;
            t.a18 = 0x2712;
            t.a19 = 0x2713;
            t.a20 = 0x2714;
            t.a21 = 0x2715;
            t.a22 = 0x2716;
            t.a23 = 0x2717;
            t.a24 = 0x2718;
            t.a25 = 0x2719;
            t.a26 = 0x271a;
            t.a27 = 0x271b;
            t.a28 = 0x271c;
            t.a6 = 0x271d;
            t.a7 = 0x271e;
            t.a8 = 0x271f;
            t.a9 = 0x2720;
            t.a10 = 0x2721;
            t.a29 = 0x2722;
            t.a30 = 0x2723;
            t.a31 = 0x2724;
            t.a32 = 0x2725;
            t.a33 = 0x2726;
            t.a34 = 0x2727;
            t.a35 = 0x2605;
            t.a36 = 0x2729;
            t.a37 = 0x272a;
            t.a38 = 0x272b;
            t.a39 = 0x272c;
            t.a40 = 0x272d;
            t.a41 = 0x272e;
            t.a42 = 0x272f;
            t.a43 = 0x2730;
            t.a44 = 0x2731;
            t.a45 = 0x2732;
            t.a46 = 0x2733;
            t.a47 = 0x2734;
            t.a48 = 0x2735;
            t.a49 = 0x2736;
            t.a50 = 0x2737;
            t.a51 = 0x2738;
            t.a52 = 0x2739;
            t.a53 = 0x273a;
            t.a54 = 0x273b;
            t.a55 = 0x273c;
            t.a56 = 0x273d;
            t.a57 = 0x273e;
            t.a58 = 0x273f;
            t.a59 = 0x2740;
            t.a60 = 0x2741;
            t.a61 = 0x2742;
            t.a62 = 0x2743;
            t.a63 = 0x2744;
            t.a64 = 0x2745;
            t.a65 = 0x2746;
            t.a66 = 0x2747;
            t.a67 = 0x2748;
            t.a68 = 0x2749;
            t.a69 = 0x274a;
            t.a70 = 0x274b;
            t.a71 = 0x25cf;
            t.a72 = 0x274d;
            t.a73 = 0x25a0;
            t.a74 = 0x274f;
            t.a203 = 0x2750;
            t.a75 = 0x2751;
            t.a204 = 0x2752;
            t.a76 = 0x25b2;
            t.a77 = 0x25bc;
            t.a78 = 0x25c6;
            t.a79 = 0x2756;
            t.a81 = 0x25d7;
            t.a82 = 0x2758;
            t.a83 = 0x2759;
            t.a84 = 0x275a;
            t.a97 = 0x275b;
            t.a98 = 0x275c;
            t.a99 = 0x275d;
            t.a100 = 0x275e;
            t.a101 = 0x2761;
            t.a102 = 0x2762;
            t.a103 = 0x2763;
            t.a104 = 0x2764;
            t.a106 = 0x2765;
            t.a107 = 0x2766;
            t.a108 = 0x2767;
            t.a112 = 0x2663;
            t.a111 = 0x2666;
            t.a110 = 0x2665;
            t.a109 = 0x2660;
            t.a120 = 0x2460;
            t.a121 = 0x2461;
            t.a122 = 0x2462;
            t.a123 = 0x2463;
            t.a124 = 0x2464;
            t.a125 = 0x2465;
            t.a126 = 0x2466;
            t.a127 = 0x2467;
            t.a128 = 0x2468;
            t.a129 = 0x2469;
            t.a130 = 0x2776;
            t.a131 = 0x2777;
            t.a132 = 0x2778;
            t.a133 = 0x2779;
            t.a134 = 0x277a;
            t.a135 = 0x277b;
            t.a136 = 0x277c;
            t.a137 = 0x277d;
            t.a138 = 0x277e;
            t.a139 = 0x277f;
            t.a140 = 0x2780;
            t.a141 = 0x2781;
            t.a142 = 0x2782;
            t.a143 = 0x2783;
            t.a144 = 0x2784;
            t.a145 = 0x2785;
            t.a146 = 0x2786;
            t.a147 = 0x2787;
            t.a148 = 0x2788;
            t.a149 = 0x2789;
            t.a150 = 0x278a;
            t.a151 = 0x278b;
            t.a152 = 0x278c;
            t.a153 = 0x278d;
            t.a154 = 0x278e;
            t.a155 = 0x278f;
            t.a156 = 0x2790;
            t.a157 = 0x2791;
            t.a158 = 0x2792;
            t.a159 = 0x2793;
            t.a160 = 0x2794;
            t.a161 = 0x2192;
            t.a163 = 0x2194;
            t.a164 = 0x2195;
            t.a196 = 0x2798;
            t.a165 = 0x2799;
            t.a192 = 0x279a;
            t.a166 = 0x279b;
            t.a167 = 0x279c;
            t.a168 = 0x279d;
            t.a169 = 0x279e;
            t.a170 = 0x279f;
            t.a171 = 0x27a0;
            t.a172 = 0x27a1;
            t.a173 = 0x27a2;
            t.a162 = 0x27a3;
            t.a174 = 0x27a4;
            t.a175 = 0x27a5;
            t.a176 = 0x27a6;
            t.a177 = 0x27a7;
            t.a178 = 0x27a8;
            t.a179 = 0x27a9;
            t.a193 = 0x27aa;
            t.a180 = 0x27ab;
            t.a199 = 0x27ac;
            t.a181 = 0x27ad;
            t.a200 = 0x27ae;
            t.a182 = 0x27af;
            t.a201 = 0x27b1;
            t.a183 = 0x27b2;
            t.a184 = 0x27b3;
            t.a197 = 0x27b4;
            t.a185 = 0x27b5;
            t.a194 = 0x27b6;
            t.a198 = 0x27b7;
            t.a186 = 0x27b8;
            t.a195 = 0x27b9;
            t.a187 = 0x27ba;
            t.a188 = 0x27bb;
            t.a189 = 0x27bc;
            t.a190 = 0x27bd;
            t.a191 = 0x27be;
            t.a89 = 0x2768;
            t.a90 = 0x2769;
            t.a93 = 0x276a;
            t.a94 = 0x276b;
            t.a91 = 0x276c;
            t.a92 = 0x276d;
            t.a205 = 0x276e;
            t.a85 = 0x276f;
            t.a206 = 0x2770;
            t.a86 = 0x2771;
            t.a87 = 0x2772;
            t.a88 = 0x2773;
            t.a95 = 0x2774;
            t.a96 = 0x2775;
            t[".notdef"] = 0x0000;
          }
        );
        exports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;

        /***/
      },
      /* 40 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.clearUnicodeCaches = clearUnicodeCaches;
        exports.getCharUnicodeCategory = getCharUnicodeCategory;
        exports.getUnicodeForGlyph = getUnicodeForGlyph;
        exports.getUnicodeRangeFor = getUnicodeRangeFor;
        exports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;
        var _core_utils = __w_pdfjs_require__(3);
        const getSpecialPUASymbols = (0, _core_utils.getLookupTableFactory)(
          function (t) {
            t[63721] = 0x00a9;
            t[63193] = 0x00a9;
            t[63720] = 0x00ae;
            t[63194] = 0x00ae;
            t[63722] = 0x2122;
            t[63195] = 0x2122;
            t[63729] = 0x23a7;
            t[63730] = 0x23a8;
            t[63731] = 0x23a9;
            t[63740] = 0x23ab;
            t[63741] = 0x23ac;
            t[63742] = 0x23ad;
            t[63726] = 0x23a1;
            t[63727] = 0x23a2;
            t[63728] = 0x23a3;
            t[63737] = 0x23a4;
            t[63738] = 0x23a5;
            t[63739] = 0x23a6;
            t[63723] = 0x239b;
            t[63724] = 0x239c;
            t[63725] = 0x239d;
            t[63734] = 0x239e;
            t[63735] = 0x239f;
            t[63736] = 0x23a0;
          }
        );
        function mapSpecialUnicodeValues(code) {
          if (code >= 0xfff0 && code <= 0xffff) {
            return 0;
          } else if (code >= 0xf600 && code <= 0xf8ff) {
            return getSpecialPUASymbols()[code] || code;
          } else if (code === 0x00ad) {
            return 0x002d;
          }
          return code;
        }
        function getUnicodeForGlyph(name, glyphsUnicodeMap) {
          let unicode = glyphsUnicodeMap[name];
          if (unicode !== undefined) {
            return unicode;
          }
          if (!name) {
            return -1;
          }
          if (name[0] === "u") {
            const nameLen = name.length;
            let hexStr;
            if (nameLen === 7 && name[1] === "n" && name[2] === "i") {
              hexStr = name.substring(3);
            } else if (nameLen >= 5 && nameLen <= 7) {
              hexStr = name.substring(1);
            } else {
              return -1;
            }
            if (hexStr === hexStr.toUpperCase()) {
              unicode = parseInt(hexStr, 16);
              if (unicode >= 0) {
                return unicode;
              }
            }
          }
          return -1;
        }
        const UnicodeRanges = [
          [0x0000, 0x007f],
          [0x0080, 0x00ff],
          [0x0100, 0x017f],
          [0x0180, 0x024f],
          [0x0250, 0x02af, 0x1d00, 0x1d7f, 0x1d80, 0x1dbf],
          [0x02b0, 0x02ff, 0xa700, 0xa71f],
          [0x0300, 0x036f, 0x1dc0, 0x1dff],
          [0x0370, 0x03ff],
          [0x2c80, 0x2cff],
          [0x0400, 0x04ff, 0x0500, 0x052f, 0x2de0, 0x2dff, 0xa640, 0xa69f],
          [0x0530, 0x058f],
          [0x0590, 0x05ff],
          [0xa500, 0xa63f],
          [0x0600, 0x06ff, 0x0750, 0x077f],
          [0x07c0, 0x07ff],
          [0x0900, 0x097f],
          [0x0980, 0x09ff],
          [0x0a00, 0x0a7f],
          [0x0a80, 0x0aff],
          [0x0b00, 0x0b7f],
          [0x0b80, 0x0bff],
          [0x0c00, 0x0c7f],
          [0x0c80, 0x0cff],
          [0x0d00, 0x0d7f],
          [0x0e00, 0x0e7f],
          [0x0e80, 0x0eff],
          [0x10a0, 0x10ff, 0x2d00, 0x2d2f],
          [0x1b00, 0x1b7f],
          [0x1100, 0x11ff],
          [0x1e00, 0x1eff, 0x2c60, 0x2c7f, 0xa720, 0xa7ff],
          [0x1f00, 0x1fff],
          [0x2000, 0x206f, 0x2e00, 0x2e7f],
          [0x2070, 0x209f],
          [0x20a0, 0x20cf],
          [0x20d0, 0x20ff],
          [0x2100, 0x214f],
          [0x2150, 0x218f],
          [0x2190, 0x21ff, 0x27f0, 0x27ff, 0x2900, 0x297f, 0x2b00, 0x2bff],
          [0x2200, 0x22ff, 0x2a00, 0x2aff, 0x27c0, 0x27ef, 0x2980, 0x29ff],
          [0x2300, 0x23ff],
          [0x2400, 0x243f],
          [0x2440, 0x245f],
          [0x2460, 0x24ff],
          [0x2500, 0x257f],
          [0x2580, 0x259f],
          [0x25a0, 0x25ff],
          [0x2600, 0x26ff],
          [0x2700, 0x27bf],
          [0x3000, 0x303f],
          [0x3040, 0x309f],
          [0x30a0, 0x30ff, 0x31f0, 0x31ff],
          [0x3100, 0x312f, 0x31a0, 0x31bf],
          [0x3130, 0x318f],
          [0xa840, 0xa87f],
          [0x3200, 0x32ff],
          [0x3300, 0x33ff],
          [0xac00, 0xd7af],
          [0xd800, 0xdfff],
          [0x10900, 0x1091f],
          [
            0x4e00, 0x9fff, 0x2e80, 0x2eff, 0x2f00, 0x2fdf, 0x2ff0, 0x2fff,
            0x3400, 0x4dbf, 0x20000, 0x2a6df, 0x3190, 0x319f,
          ],
          [0xe000, 0xf8ff],
          [0x31c0, 0x31ef, 0xf900, 0xfaff, 0x2f800, 0x2fa1f],
          [0xfb00, 0xfb4f],
          [0xfb50, 0xfdff],
          [0xfe20, 0xfe2f],
          [0xfe10, 0xfe1f],
          [0xfe50, 0xfe6f],
          [0xfe70, 0xfeff],
          [0xff00, 0xffef],
          [0xfff0, 0xffff],
          [0x0f00, 0x0fff],
          [0x0700, 0x074f],
          [0x0780, 0x07bf],
          [0x0d80, 0x0dff],
          [0x1000, 0x109f],
          [0x1200, 0x137f, 0x1380, 0x139f, 0x2d80, 0x2ddf],
          [0x13a0, 0x13ff],
          [0x1400, 0x167f],
          [0x1680, 0x169f],
          [0x16a0, 0x16ff],
          [0x1780, 0x17ff],
          [0x1800, 0x18af],
          [0x2800, 0x28ff],
          [0xa000, 0xa48f],
          [0x1700, 0x171f, 0x1720, 0x173f, 0x1740, 0x175f, 0x1760, 0x177f],
          [0x10300, 0x1032f],
          [0x10330, 0x1034f],
          [0x10400, 0x1044f],
          [0x1d000, 0x1d0ff, 0x1d100, 0x1d1ff, 0x1d200, 0x1d24f],
          [0x1d400, 0x1d7ff],
          [0xff000, 0xffffd],
          [0xfe00, 0xfe0f, 0xe0100, 0xe01ef],
          [0xe0000, 0xe007f],
          [0x1900, 0x194f],
          [0x1950, 0x197f],
          [0x1980, 0x19df],
          [0x1a00, 0x1a1f],
          [0x2c00, 0x2c5f],
          [0x2d30, 0x2d7f],
          [0x4dc0, 0x4dff],
          [0xa800, 0xa82f],
          [0x10000, 0x1007f, 0x10080, 0x100ff, 0x10100, 0x1013f],
          [0x10140, 0x1018f],
          [0x10380, 0x1039f],
          [0x103a0, 0x103df],
          [0x10450, 0x1047f],
          [0x10480, 0x104af],
          [0x10800, 0x1083f],
          [0x10a00, 0x10a5f],
          [0x1d300, 0x1d35f],
          [0x12000, 0x123ff, 0x12400, 0x1247f],
          [0x1d360, 0x1d37f],
          [0x1b80, 0x1bbf],
          [0x1c00, 0x1c4f],
          [0x1c50, 0x1c7f],
          [0xa880, 0xa8df],
          [0xa900, 0xa92f],
          [0xa930, 0xa95f],
          [0xaa00, 0xaa5f],
          [0x10190, 0x101cf],
          [0x101d0, 0x101ff],
          [0x102a0, 0x102df, 0x10280, 0x1029f, 0x10920, 0x1093f],
          [0x1f030, 0x1f09f, 0x1f000, 0x1f02f],
        ];
        function getUnicodeRangeFor(value, lastPosition = -1) {
          if (lastPosition !== -1) {
            const range = UnicodeRanges[lastPosition];
            for (let i = 0, ii = range.length; i < ii; i += 2) {
              if (value >= range[i] && value <= range[i + 1]) {
                return lastPosition;
              }
            }
          }
          for (let i = 0, ii = UnicodeRanges.length; i < ii; i++) {
            const range = UnicodeRanges[i];
            for (let j = 0, jj = range.length; j < jj; j += 2) {
              if (value >= range[j] && value <= range[j + 1]) {
                return i;
              }
            }
          }
          return -1;
        }
        const SpecialCharRegExp = new RegExp(
          "^(\\s)|(\\p{Mn})|(\\p{Cf})$",
          "u"
        );
        const CategoryCache = new Map();
        function getCharUnicodeCategory(char) {
          const cachedCategory = CategoryCache.get(char);
          if (cachedCategory) {
            return cachedCategory;
          }
          const groups = char.match(SpecialCharRegExp);
          const category = {
            isWhitespace: !!groups?.[1],
            isZeroWidthDiacritic: !!groups?.[2],
            isInvisibleFormatMark: !!groups?.[3],
          };
          CategoryCache.set(char, category);
          return category;
        }
        function clearUnicodeCaches() {
          CategoryCache.clear();
        }

        /***/
      },
      /* 41 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.getSerifFonts =
          exports.getNonStdFontMap =
          exports.getGlyphMapForStandardFonts =
          exports.getFontNameToFileMap =
            void 0;
        exports.getStandardFontName = getStandardFontName;
        exports.getSymbolsFonts =
          exports.getSupplementalGlyphMapForCalibri =
          exports.getSupplementalGlyphMapForArialBlack =
          exports.getStdFontMap =
            void 0;
        exports.isKnownFontName = isKnownFontName;
        var _core_utils = __w_pdfjs_require__(3);
        var _fonts_utils = __w_pdfjs_require__(38);
        const getStdFontMap = (0, _core_utils.getLookupTableFactory)(function (
          t
        ) {
          t["Times-Roman"] = "Times-Roman";
          t.Helvetica = "Helvetica";
          t.Courier = "Courier";
          t.Symbol = "Symbol";
          t["Times-Bold"] = "Times-Bold";
          t["Helvetica-Bold"] = "Helvetica-Bold";
          t["Courier-Bold"] = "Courier-Bold";
          t.ZapfDingbats = "ZapfDingbats";
          t["Times-Italic"] = "Times-Italic";
          t["Helvetica-Oblique"] = "Helvetica-Oblique";
          t["Courier-Oblique"] = "Courier-Oblique";
          t["Times-BoldItalic"] = "Times-BoldItalic";
          t["Helvetica-BoldOblique"] = "Helvetica-BoldOblique";
          t["Courier-BoldOblique"] = "Courier-BoldOblique";
          t.ArialNarrow = "Helvetica";
          t["ArialNarrow-Bold"] = "Helvetica-Bold";
          t["ArialNarrow-BoldItalic"] = "Helvetica-BoldOblique";
          t["ArialNarrow-Italic"] = "Helvetica-Oblique";
          t.ArialBlack = "Helvetica";
          t["ArialBlack-Bold"] = "Helvetica-Bold";
          t["ArialBlack-BoldItalic"] = "Helvetica-BoldOblique";
          t["ArialBlack-Italic"] = "Helvetica-Oblique";
          t["Arial-Black"] = "Helvetica";
          t["Arial-Black-Bold"] = "Helvetica-Bold";
          t["Arial-Black-BoldItalic"] = "Helvetica-BoldOblique";
          t["Arial-Black-Italic"] = "Helvetica-Oblique";
          t.Arial = "Helvetica";
          t["Arial-Bold"] = "Helvetica-Bold";
          t["Arial-BoldItalic"] = "Helvetica-BoldOblique";
          t["Arial-Italic"] = "Helvetica-Oblique";
          t.ArialMT = "Helvetica";
          t["Arial-BoldItalicMT"] = "Helvetica-BoldOblique";
          t["Arial-BoldMT"] = "Helvetica-Bold";
          t["Arial-ItalicMT"] = "Helvetica-Oblique";
          t["Arial-BoldItalicMT-BoldItalic"] = "Helvetica-BoldOblique";
          t["Arial-BoldMT-Bold"] = "Helvetica-Bold";
          t["Arial-ItalicMT-Italic"] = "Helvetica-Oblique";
          t.ArialUnicodeMS = "Helvetica";
          t["ArialUnicodeMS-Bold"] = "Helvetica-Bold";
          t["ArialUnicodeMS-BoldItalic"] = "Helvetica-BoldOblique";
          t["ArialUnicodeMS-Italic"] = "Helvetica-Oblique";
          t["Courier-BoldItalic"] = "Courier-BoldOblique";
          t["Courier-Italic"] = "Courier-Oblique";
          t.CourierNew = "Courier";
          t["CourierNew-Bold"] = "Courier-Bold";
          t["CourierNew-BoldItalic"] = "Courier-BoldOblique";
          t["CourierNew-Italic"] = "Courier-Oblique";
          t["CourierNewPS-BoldItalicMT"] = "Courier-BoldOblique";
          t["CourierNewPS-BoldMT"] = "Courier-Bold";
          t["CourierNewPS-ItalicMT"] = "Courier-Oblique";
          t.CourierNewPSMT = "Courier";
          t["Helvetica-BoldItalic"] = "Helvetica-BoldOblique";
          t["Helvetica-Italic"] = "Helvetica-Oblique";
          t["Symbol-Bold"] = "Symbol";
          t["Symbol-BoldItalic"] = "Symbol";
          t["Symbol-Italic"] = "Symbol";
          t.TimesNewRoman = "Times-Roman";
          t["TimesNewRoman-Bold"] = "Times-Bold";
          t["TimesNewRoman-BoldItalic"] = "Times-BoldItalic";
          t["TimesNewRoman-Italic"] = "Times-Italic";
          t.TimesNewRomanPS = "Times-Roman";
          t["TimesNewRomanPS-Bold"] = "Times-Bold";
          t["TimesNewRomanPS-BoldItalic"] = "Times-BoldItalic";
          t["TimesNewRomanPS-BoldItalicMT"] = "Times-BoldItalic";
          t["TimesNewRomanPS-BoldMT"] = "Times-Bold";
          t["TimesNewRomanPS-Italic"] = "Times-Italic";
          t["TimesNewRomanPS-ItalicMT"] = "Times-Italic";
          t.TimesNewRomanPSMT = "Times-Roman";
          t["TimesNewRomanPSMT-Bold"] = "Times-Bold";
          t["TimesNewRomanPSMT-BoldItalic"] = "Times-BoldItalic";
          t["TimesNewRomanPSMT-Italic"] = "Times-Italic";
        });
        exports.getStdFontMap = getStdFontMap;
        const getFontNameToFileMap = (0, _core_utils.getLookupTableFactory)(
          function (t) {
            t.Courier = "FoxitFixed.pfb";
            t["Courier-Bold"] = "FoxitFixedBold.pfb";
            t["Courier-BoldOblique"] = "FoxitFixedBoldItalic.pfb";
            t["Courier-Oblique"] = "FoxitFixedItalic.pfb";
            t.Helvetica = "LiberationSans-Regular.ttf";
            t["Helvetica-Bold"] = "LiberationSans-Bold.ttf";
            t["Helvetica-BoldOblique"] = "LiberationSans-BoldItalic.ttf";
            t["Helvetica-Oblique"] = "LiberationSans-Italic.ttf";
            t["Times-Roman"] = "FoxitSerif.pfb";
            t["Times-Bold"] = "FoxitSerifBold.pfb";
            t["Times-BoldItalic"] = "FoxitSerifBoldItalic.pfb";
            t["Times-Italic"] = "FoxitSerifItalic.pfb";
            t.Symbol = "FoxitSymbol.pfb";
            t.ZapfDingbats = "FoxitDingbats.pfb";
            t["LiberationSans-Regular"] = "LiberationSans-Regular.ttf";
            t["LiberationSans-Bold"] = "LiberationSans-Bold.ttf";
            t["LiberationSans-Italic"] = "LiberationSans-Italic.ttf";
            t["LiberationSans-BoldItalic"] = "LiberationSans-BoldItalic.ttf";
          }
        );
        exports.getFontNameToFileMap = getFontNameToFileMap;
        const getNonStdFontMap = (0, _core_utils.getLookupTableFactory)(
          function (t) {
            t.Calibri = "Helvetica";
            t["Calibri-Bold"] = "Helvetica-Bold";
            t["Calibri-BoldItalic"] = "Helvetica-BoldOblique";
            t["Calibri-Italic"] = "Helvetica-Oblique";
            t.CenturyGothic = "Helvetica";
            t["CenturyGothic-Bold"] = "Helvetica-Bold";
            t["CenturyGothic-BoldItalic"] = "Helvetica-BoldOblique";
            t["CenturyGothic-Italic"] = "Helvetica-Oblique";
            t.ComicSansMS = "Comic Sans MS";
            t["ComicSansMS-Bold"] = "Comic Sans MS-Bold";
            t["ComicSansMS-BoldItalic"] = "Comic Sans MS-BoldItalic";
            t["ComicSansMS-Italic"] = "Comic Sans MS-Italic";
            t.Impact = "Helvetica";
            t["ItcSymbol-Bold"] = "Helvetica-Bold";
            t["ItcSymbol-BoldItalic"] = "Helvetica-BoldOblique";
            t["ItcSymbol-Book"] = "Helvetica";
            t["ItcSymbol-BookItalic"] = "Helvetica-Oblique";
            t["ItcSymbol-Medium"] = "Helvetica";
            t["ItcSymbol-MediumItalic"] = "Helvetica-Oblique";
            t.LucidaConsole = "Courier";
            t["LucidaConsole-Bold"] = "Courier-Bold";
            t["LucidaConsole-BoldItalic"] = "Courier-BoldOblique";
            t["LucidaConsole-Italic"] = "Courier-Oblique";
            t["LucidaSans-Demi"] = "Helvetica-Bold";
            t["MS-Gothic"] = "MS Gothic";
            t["MS-Gothic-Bold"] = "MS Gothic-Bold";
            t["MS-Gothic-BoldItalic"] = "MS Gothic-BoldItalic";
            t["MS-Gothic-Italic"] = "MS Gothic-Italic";
            t["MS-Mincho"] = "MS Mincho";
            t["MS-Mincho-Bold"] = "MS Mincho-Bold";
            t["MS-Mincho-BoldItalic"] = "MS Mincho-BoldItalic";
            t["MS-Mincho-Italic"] = "MS Mincho-Italic";
            t["MS-PGothic"] = "MS PGothic";
            t["MS-PGothic-Bold"] = "MS PGothic-Bold";
            t["MS-PGothic-BoldItalic"] = "MS PGothic-BoldItalic";
            t["MS-PGothic-Italic"] = "MS PGothic-Italic";
            t["MS-PMincho"] = "MS PMincho";
            t["MS-PMincho-Bold"] = "MS PMincho-Bold";
            t["MS-PMincho-BoldItalic"] = "MS PMincho-BoldItalic";
            t["MS-PMincho-Italic"] = "MS PMincho-Italic";
            t.NuptialScript = "Times-Italic";
            t.SegoeUISymbol = "Helvetica";
          }
        );
        exports.getNonStdFontMap = getNonStdFontMap;
        const getSerifFonts = (0, _core_utils.getLookupTableFactory)(function (
          t
        ) {
          t["Adobe Jenson"] = true;
          t["Adobe Text"] = true;
          t.Albertus = true;
          t.Aldus = true;
          t.Alexandria = true;
          t.Algerian = true;
          t["American Typewriter"] = true;
          t.Antiqua = true;
          t.Apex = true;
          t.Arno = true;
          t.Aster = true;
          t.Aurora = true;
          t.Baskerville = true;
          t.Bell = true;
          t.Bembo = true;
          t["Bembo Schoolbook"] = true;
          t.Benguiat = true;
          t["Berkeley Old Style"] = true;
          t["Bernhard Modern"] = true;
          t["Berthold City"] = true;
          t.Bodoni = true;
          t["Bauer Bodoni"] = true;
          t["Book Antiqua"] = true;
          t.Bookman = true;
          t["Bordeaux Roman"] = true;
          t["Californian FB"] = true;
          t.Calisto = true;
          t.Calvert = true;
          t.Capitals = true;
          t.Cambria = true;
          t.Cartier = true;
          t.Caslon = true;
          t.Catull = true;
          t.Centaur = true;
          t["Century Old Style"] = true;
          t["Century Schoolbook"] = true;
          t.Chaparral = true;
          t["Charis SIL"] = true;
          t.Cheltenham = true;
          t["Cholla Slab"] = true;
          t.Clarendon = true;
          t.Clearface = true;
          t.Cochin = true;
          t.Colonna = true;
          t["Computer Modern"] = true;
          t["Concrete Roman"] = true;
          t.Constantia = true;
          t["Cooper Black"] = true;
          t.Corona = true;
          t.Ecotype = true;
          t.Egyptienne = true;
          t.Elephant = true;
          t.Excelsior = true;
          t.Fairfield = true;
          t["FF Scala"] = true;
          t.Folkard = true;
          t.Footlight = true;
          t.FreeSerif = true;
          t["Friz Quadrata"] = true;
          t.Garamond = true;
          t.Gentium = true;
          t.Georgia = true;
          t.Gloucester = true;
          t["Goudy Old Style"] = true;
          t["Goudy Schoolbook"] = true;
          t["Goudy Pro Font"] = true;
          t.Granjon = true;
          t["Guardian Egyptian"] = true;
          t.Heather = true;
          t.Hercules = true;
          t["High Tower Text"] = true;
          t.Hiroshige = true;
          t["Hoefler Text"] = true;
          t["Humana Serif"] = true;
          t.Imprint = true;
          t["Ionic No. 5"] = true;
          t.Janson = true;
          t.Joanna = true;
          t.Korinna = true;
          t.Lexicon = true;
          t.LiberationSerif = true;
          t["Liberation Serif"] = true;
          t["Linux Libertine"] = true;
          t.Literaturnaya = true;
          t.Lucida = true;
          t["Lucida Bright"] = true;
          t.Melior = true;
          t.Memphis = true;
          t.Miller = true;
          t.Minion = true;
          t.Modern = true;
          t["Mona Lisa"] = true;
          t["Mrs Eaves"] = true;
          t["MS Serif"] = true;
          t["Museo Slab"] = true;
          t["New York"] = true;
          t["Nimbus Roman"] = true;
          t["NPS Rawlinson Roadway"] = true;
          t.NuptialScript = true;
          t.Palatino = true;
          t.Perpetua = true;
          t.Plantin = true;
          t["Plantin Schoolbook"] = true;
          t.Playbill = true;
          t["Poor Richard"] = true;
          t["Rawlinson Roadway"] = true;
          t.Renault = true;
          t.Requiem = true;
          t.Rockwell = true;
          t.Roman = true;
          t["Rotis Serif"] = true;
          t.Sabon = true;
          t.Scala = true;
          t.Seagull = true;
          t.Sistina = true;
          t.Souvenir = true;
          t.STIX = true;
          t["Stone Informal"] = true;
          t["Stone Serif"] = true;
          t.Sylfaen = true;
          t.Times = true;
          t.Trajan = true;
          t["Trinité"] = true;
          t["Trump Mediaeval"] = true;
          t.Utopia = true;
          t["Vale Type"] = true;
          t["Bitstream Vera"] = true;
          t["Vera Serif"] = true;
          t.Versailles = true;
          t.Wanted = true;
          t.Weiss = true;
          t["Wide Latin"] = true;
          t.Windsor = true;
          t.XITS = true;
        });
        exports.getSerifFonts = getSerifFonts;
        const getSymbolsFonts = (0, _core_utils.getLookupTableFactory)(
          function (t) {
            t.Dingbats = true;
            t.Symbol = true;
            t.ZapfDingbats = true;
            t.Wingdings = true;
            t["Wingdings-Bold"] = true;
            t["Wingdings-Regular"] = true;
          }
        );
        exports.getSymbolsFonts = getSymbolsFonts;
        const getGlyphMapForStandardFonts = (0,
        _core_utils.getLookupTableFactory)(function (t) {
          t[2] = 10;
          t[3] = 32;
          t[4] = 33;
          t[5] = 34;
          t[6] = 35;
          t[7] = 36;
          t[8] = 37;
          t[9] = 38;
          t[10] = 39;
          t[11] = 40;
          t[12] = 41;
          t[13] = 42;
          t[14] = 43;
          t[15] = 44;
          t[16] = 45;
          t[17] = 46;
          t[18] = 47;
          t[19] = 48;
          t[20] = 49;
          t[21] = 50;
          t[22] = 51;
          t[23] = 52;
          t[24] = 53;
          t[25] = 54;
          t[26] = 55;
          t[27] = 56;
          t[28] = 57;
          t[29] = 58;
          t[30] = 894;
          t[31] = 60;
          t[32] = 61;
          t[33] = 62;
          t[34] = 63;
          t[35] = 64;
          t[36] = 65;
          t[37] = 66;
          t[38] = 67;
          t[39] = 68;
          t[40] = 69;
          t[41] = 70;
          t[42] = 71;
          t[43] = 72;
          t[44] = 73;
          t[45] = 74;
          t[46] = 75;
          t[47] = 76;
          t[48] = 77;
          t[49] = 78;
          t[50] = 79;
          t[51] = 80;
          t[52] = 81;
          t[53] = 82;
          t[54] = 83;
          t[55] = 84;
          t[56] = 85;
          t[57] = 86;
          t[58] = 87;
          t[59] = 88;
          t[60] = 89;
          t[61] = 90;
          t[62] = 91;
          t[63] = 92;
          t[64] = 93;
          t[65] = 94;
          t[66] = 95;
          t[67] = 96;
          t[68] = 97;
          t[69] = 98;
          t[70] = 99;
          t[71] = 100;
          t[72] = 101;
          t[73] = 102;
          t[74] = 103;
          t[75] = 104;
          t[76] = 105;
          t[77] = 106;
          t[78] = 107;
          t[79] = 108;
          t[80] = 109;
          t[81] = 110;
          t[82] = 111;
          t[83] = 112;
          t[84] = 113;
          t[85] = 114;
          t[86] = 115;
          t[87] = 116;
          t[88] = 117;
          t[89] = 118;
          t[90] = 119;
          t[91] = 120;
          t[92] = 121;
          t[93] = 122;
          t[94] = 123;
          t[95] = 124;
          t[96] = 125;
          t[97] = 126;
          t[98] = 196;
          t[99] = 197;
          t[100] = 199;
          t[101] = 201;
          t[102] = 209;
          t[103] = 214;
          t[104] = 220;
          t[105] = 225;
          t[106] = 224;
          t[107] = 226;
          t[108] = 228;
          t[109] = 227;
          t[110] = 229;
          t[111] = 231;
          t[112] = 233;
          t[113] = 232;
          t[114] = 234;
          t[115] = 235;
          t[116] = 237;
          t[117] = 236;
          t[118] = 238;
          t[119] = 239;
          t[120] = 241;
          t[121] = 243;
          t[122] = 242;
          t[123] = 244;
          t[124] = 246;
          t[125] = 245;
          t[126] = 250;
          t[127] = 249;
          t[128] = 251;
          t[129] = 252;
          t[130] = 8224;
          t[131] = 176;
          t[132] = 162;
          t[133] = 163;
          t[134] = 167;
          t[135] = 8226;
          t[136] = 182;
          t[137] = 223;
          t[138] = 174;
          t[139] = 169;
          t[140] = 8482;
          t[141] = 180;
          t[142] = 168;
          t[143] = 8800;
          t[144] = 198;
          t[145] = 216;
          t[146] = 8734;
          t[147] = 177;
          t[148] = 8804;
          t[149] = 8805;
          t[150] = 165;
          t[151] = 181;
          t[152] = 8706;
          t[153] = 8721;
          t[154] = 8719;
          t[156] = 8747;
          t[157] = 170;
          t[158] = 186;
          t[159] = 8486;
          t[160] = 230;
          t[161] = 248;
          t[162] = 191;
          t[163] = 161;
          t[164] = 172;
          t[165] = 8730;
          t[166] = 402;
          t[167] = 8776;
          t[168] = 8710;
          t[169] = 171;
          t[170] = 187;
          t[171] = 8230;
          t[179] = 8220;
          t[180] = 8221;
          t[181] = 8216;
          t[182] = 8217;
          t[200] = 193;
          t[203] = 205;
          t[207] = 211;
          t[210] = 218;
          t[223] = 711;
          t[224] = 321;
          t[225] = 322;
          t[226] = 352;
          t[227] = 353;
          t[228] = 381;
          t[229] = 382;
          t[233] = 221;
          t[234] = 253;
          t[252] = 263;
          t[253] = 268;
          t[254] = 269;
          t[258] = 258;
          t[260] = 260;
          t[261] = 261;
          t[265] = 280;
          t[266] = 281;
          t[267] = 282;
          t[268] = 283;
          t[269] = 313;
          t[275] = 323;
          t[276] = 324;
          t[278] = 328;
          t[283] = 344;
          t[284] = 345;
          t[285] = 346;
          t[286] = 347;
          t[292] = 367;
          t[295] = 377;
          t[296] = 378;
          t[298] = 380;
          t[305] = 963;
          t[306] = 964;
          t[307] = 966;
          t[308] = 8215;
          t[309] = 8252;
          t[310] = 8319;
          t[311] = 8359;
          t[312] = 8592;
          t[313] = 8593;
          t[337] = 9552;
          t[493] = 1039;
          t[494] = 1040;
          t[672] = 1488;
          t[673] = 1489;
          t[674] = 1490;
          t[675] = 1491;
          t[676] = 1492;
          t[677] = 1493;
          t[678] = 1494;
          t[679] = 1495;
          t[680] = 1496;
          t[681] = 1497;
          t[682] = 1498;
          t[683] = 1499;
          t[684] = 1500;
          t[685] = 1501;
          t[686] = 1502;
          t[687] = 1503;
          t[688] = 1504;
          t[689] = 1505;
          t[690] = 1506;
          t[691] = 1507;
          t[692] = 1508;
          t[693] = 1509;
          t[694] = 1510;
          t[695] = 1511;
          t[696] = 1512;
          t[697] = 1513;
          t[698] = 1514;
          t[705] = 1524;
          t[706] = 8362;
          t[710] = 64288;
          t[711] = 64298;
          t[759] = 1617;
          t[761] = 1776;
          t[763] = 1778;
          t[775] = 1652;
          t[777] = 1764;
          t[778] = 1780;
          t[779] = 1781;
          t[780] = 1782;
          t[782] = 771;
          t[783] = 64726;
          t[786] = 8363;
          t[788] = 8532;
          t[790] = 768;
          t[791] = 769;
          t[792] = 768;
          t[795] = 803;
          t[797] = 64336;
          t[798] = 64337;
          t[799] = 64342;
          t[800] = 64343;
          t[801] = 64344;
          t[802] = 64345;
          t[803] = 64362;
          t[804] = 64363;
          t[805] = 64364;
          t[2424] = 7821;
          t[2425] = 7822;
          t[2426] = 7823;
          t[2427] = 7824;
          t[2428] = 7825;
          t[2429] = 7826;
          t[2430] = 7827;
          t[2433] = 7682;
          t[2678] = 8045;
          t[2679] = 8046;
          t[2830] = 1552;
          t[2838] = 686;
          t[2840] = 751;
          t[2842] = 753;
          t[2843] = 754;
          t[2844] = 755;
          t[2846] = 757;
          t[2856] = 767;
          t[2857] = 848;
          t[2858] = 849;
          t[2862] = 853;
          t[2863] = 854;
          t[2864] = 855;
          t[2865] = 861;
          t[2866] = 862;
          t[2906] = 7460;
          t[2908] = 7462;
          t[2909] = 7463;
          t[2910] = 7464;
          t[2912] = 7466;
          t[2913] = 7467;
          t[2914] = 7468;
          t[2916] = 7470;
          t[2917] = 7471;
          t[2918] = 7472;
          t[2920] = 7474;
          t[2921] = 7475;
          t[2922] = 7476;
          t[2924] = 7478;
          t[2925] = 7479;
          t[2926] = 7480;
          t[2928] = 7482;
          t[2929] = 7483;
          t[2930] = 7484;
          t[2932] = 7486;
          t[2933] = 7487;
          t[2934] = 7488;
          t[2936] = 7490;
          t[2937] = 7491;
          t[2938] = 7492;
          t[2940] = 7494;
          t[2941] = 7495;
          t[2942] = 7496;
          t[2944] = 7498;
          t[2946] = 7500;
          t[2948] = 7502;
          t[2950] = 7504;
          t[2951] = 7505;
          t[2952] = 7506;
          t[2954] = 7508;
          t[2955] = 7509;
          t[2956] = 7510;
          t[2958] = 7512;
          t[2959] = 7513;
          t[2960] = 7514;
          t[2962] = 7516;
          t[2963] = 7517;
          t[2964] = 7518;
          t[2966] = 7520;
          t[2967] = 7521;
          t[2968] = 7522;
          t[2970] = 7524;
          t[2971] = 7525;
          t[2972] = 7526;
          t[2974] = 7528;
          t[2975] = 7529;
          t[2976] = 7530;
          t[2978] = 1537;
          t[2979] = 1538;
          t[2980] = 1539;
          t[2982] = 1549;
          t[2983] = 1551;
          t[2984] = 1552;
          t[2986] = 1554;
          t[2987] = 1555;
          t[2988] = 1556;
          t[2990] = 1623;
          t[2991] = 1624;
          t[2995] = 1775;
          t[2999] = 1791;
          t[3002] = 64290;
          t[3003] = 64291;
          t[3004] = 64292;
          t[3006] = 64294;
          t[3007] = 64295;
          t[3008] = 64296;
          t[3011] = 1900;
          t[3014] = 8223;
          t[3015] = 8244;
          t[3017] = 7532;
          t[3018] = 7533;
          t[3019] = 7534;
          t[3075] = 7590;
          t[3076] = 7591;
          t[3079] = 7594;
          t[3080] = 7595;
          t[3083] = 7598;
          t[3084] = 7599;
          t[3087] = 7602;
          t[3088] = 7603;
          t[3091] = 7606;
          t[3092] = 7607;
          t[3095] = 7610;
          t[3096] = 7611;
          t[3099] = 7614;
          t[3100] = 7615;
          t[3103] = 7618;
          t[3104] = 7619;
          t[3107] = 8337;
          t[3108] = 8338;
          t[3116] = 1884;
          t[3119] = 1885;
          t[3120] = 1885;
          t[3123] = 1886;
          t[3124] = 1886;
          t[3127] = 1887;
          t[3128] = 1887;
          t[3131] = 1888;
          t[3132] = 1888;
          t[3135] = 1889;
          t[3136] = 1889;
          t[3139] = 1890;
          t[3140] = 1890;
          t[3143] = 1891;
          t[3144] = 1891;
          t[3147] = 1892;
          t[3148] = 1892;
          t[3153] = 580;
          t[3154] = 581;
          t[3157] = 584;
          t[3158] = 585;
          t[3161] = 588;
          t[3162] = 589;
          t[3165] = 891;
          t[3166] = 892;
          t[3169] = 1274;
          t[3170] = 1275;
          t[3173] = 1278;
          t[3174] = 1279;
          t[3181] = 7622;
          t[3182] = 7623;
          t[3282] = 11799;
          t[3316] = 578;
          t[3379] = 42785;
          t[3393] = 1159;
          t[3416] = 8377;
        });
        exports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;
        const getSupplementalGlyphMapForArialBlack = (0,
        _core_utils.getLookupTableFactory)(function (t) {
          t[227] = 322;
          t[264] = 261;
          t[291] = 346;
        });
        exports.getSupplementalGlyphMapForArialBlack =
          getSupplementalGlyphMapForArialBlack;
        const getSupplementalGlyphMapForCalibri = (0,
        _core_utils.getLookupTableFactory)(function (t) {
          t[1] = 32;
          t[4] = 65;
          t[5] = 192;
          t[6] = 193;
          t[9] = 196;
          t[17] = 66;
          t[18] = 67;
          t[21] = 268;
          t[24] = 68;
          t[28] = 69;
          t[29] = 200;
          t[30] = 201;
          t[32] = 282;
          t[38] = 70;
          t[39] = 71;
          t[44] = 72;
          t[47] = 73;
          t[48] = 204;
          t[49] = 205;
          t[58] = 74;
          t[60] = 75;
          t[62] = 76;
          t[68] = 77;
          t[69] = 78;
          t[75] = 79;
          t[76] = 210;
          t[80] = 214;
          t[87] = 80;
          t[89] = 81;
          t[90] = 82;
          t[92] = 344;
          t[94] = 83;
          t[97] = 352;
          t[100] = 84;
          t[104] = 85;
          t[109] = 220;
          t[115] = 86;
          t[116] = 87;
          t[121] = 88;
          t[122] = 89;
          t[124] = 221;
          t[127] = 90;
          t[129] = 381;
          t[258] = 97;
          t[259] = 224;
          t[260] = 225;
          t[263] = 228;
          t[268] = 261;
          t[271] = 98;
          t[272] = 99;
          t[273] = 263;
          t[275] = 269;
          t[282] = 100;
          t[286] = 101;
          t[287] = 232;
          t[288] = 233;
          t[290] = 283;
          t[295] = 281;
          t[296] = 102;
          t[336] = 103;
          t[346] = 104;
          t[349] = 105;
          t[350] = 236;
          t[351] = 237;
          t[361] = 106;
          t[364] = 107;
          t[367] = 108;
          t[371] = 322;
          t[373] = 109;
          t[374] = 110;
          t[381] = 111;
          t[382] = 242;
          t[383] = 243;
          t[386] = 246;
          t[393] = 112;
          t[395] = 113;
          t[396] = 114;
          t[398] = 345;
          t[400] = 115;
          t[401] = 347;
          t[403] = 353;
          t[410] = 116;
          t[437] = 117;
          t[442] = 252;
          t[448] = 118;
          t[449] = 119;
          t[454] = 120;
          t[455] = 121;
          t[457] = 253;
          t[460] = 122;
          t[462] = 382;
          t[463] = 380;
          t[853] = 44;
          t[855] = 58;
          t[856] = 46;
          t[876] = 47;
          t[878] = 45;
          t[882] = 45;
          t[894] = 40;
          t[895] = 41;
          t[896] = 91;
          t[897] = 93;
          t[923] = 64;
          t[1004] = 48;
          t[1005] = 49;
          t[1006] = 50;
          t[1007] = 51;
          t[1008] = 52;
          t[1009] = 53;
          t[1010] = 54;
          t[1011] = 55;
          t[1012] = 56;
          t[1013] = 57;
          t[1081] = 37;
          t[1085] = 43;
          t[1086] = 45;
        });
        exports.getSupplementalGlyphMapForCalibri =
          getSupplementalGlyphMapForCalibri;
        function getStandardFontName(name) {
          const fontName = (0, _fonts_utils.normalizeFontName)(name);
          const stdFontMap = getStdFontMap();
          return stdFontMap[fontName];
        }
        function isKnownFontName(name) {
          const fontName = (0, _fonts_utils.normalizeFontName)(name);
          return !!(
            getStdFontMap()[fontName] ||
            getNonStdFontMap()[fontName] ||
            getSerifFonts()[fontName] ||
            getSymbolsFonts()[fontName]
          );
        }

        /***/
      },
      /* 42 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.ToUnicodeMap = exports.IdentityToUnicodeMap = void 0;
        var _util = __w_pdfjs_require__(2);
        class ToUnicodeMap {
          constructor(cmap = []) {
            this._map = cmap;
          }
          get length() {
            return this._map.length;
          }
          forEach(callback) {
            for (const charCode in this._map) {
              callback(charCode, this._map[charCode].charCodeAt(0));
            }
          }
          has(i) {
            return this._map[i] !== undefined;
          }
          get(i) {
            return this._map[i];
          }
          charCodeOf(value) {
            const map = this._map;
            if (map.length <= 0x10000) {
              return map.indexOf(value);
            }
            for (const charCode in map) {
              if (map[charCode] === value) {
                return charCode | 0;
              }
            }
            return -1;
          }
          amend(map) {
            for (const charCode in map) {
              this._map[charCode] = map[charCode];
            }
          }
        }
        exports.ToUnicodeMap = ToUnicodeMap;
        class IdentityToUnicodeMap {
          constructor(firstChar, lastChar) {
            this.firstChar = firstChar;
            this.lastChar = lastChar;
          }
          get length() {
            return this.lastChar + 1 - this.firstChar;
          }
          forEach(callback) {
            for (let i = this.firstChar, ii = this.lastChar; i <= ii; i++) {
              callback(i, i);
            }
          }
          has(i) {
            return this.firstChar <= i && i <= this.lastChar;
          }
          get(i) {
            if (this.firstChar <= i && i <= this.lastChar) {
              return String.fromCharCode(i);
            }
            return undefined;
          }
          charCodeOf(v) {
            return Number.isInteger(v) &&
              v >= this.firstChar &&
              v <= this.lastChar
              ? v
              : -1;
          }
          amend(map) {
            (0, _util.unreachable)("Should not call amend()");
          }
        }
        exports.IdentityToUnicodeMap = IdentityToUnicodeMap;

        /***/
      },
      /* 43 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.CFFFont = void 0;
        var _cff_parser = __w_pdfjs_require__(35);
        var _fonts_utils = __w_pdfjs_require__(38);
        var _util = __w_pdfjs_require__(2);
        class CFFFont {
          constructor(file, properties) {
            this.properties = properties;
            const parser = new _cff_parser.CFFParser(
              file,
              properties,
              _fonts_utils.SEAC_ANALYSIS_ENABLED
            );
            this.cff = parser.parse();
            this.cff.duplicateFirstGlyph();
            const compiler = new _cff_parser.CFFCompiler(this.cff);
            this.seacs = this.cff.seacs;
            try {
              this.data = compiler.compile();
            } catch {
              (0, _util.warn)(
                "Failed to compile font " + properties.loadedName
              );
              this.data = file;
            }
            this._createBuiltInEncoding();
          }
          get numGlyphs() {
            return this.cff.charStrings.count;
          }
          getCharset() {
            return this.cff.charset.charset;
          }
          getGlyphMapping() {
            const cff = this.cff;
            const properties = this.properties;
            const { cidToGidMap, cMap } = properties;
            const charsets = cff.charset.charset;
            let charCodeToGlyphId;
            let glyphId;
            if (properties.composite) {
              let invCidToGidMap;
              if (cidToGidMap?.length > 0) {
                invCidToGidMap = Object.create(null);
                for (let i = 0, ii = cidToGidMap.length; i < ii; i++) {
                  const gid = cidToGidMap[i];
                  if (gid !== undefined) {
                    invCidToGidMap[gid] = i;
                  }
                }
              }
              charCodeToGlyphId = Object.create(null);
              let charCode;
              if (cff.isCIDFont) {
                for (glyphId = 0; glyphId < charsets.length; glyphId++) {
                  const cid = charsets[glyphId];
                  charCode = cMap.charCodeOf(cid);
                  if (invCidToGidMap?.[charCode] !== undefined) {
                    charCode = invCidToGidMap[charCode];
                  }
                  charCodeToGlyphId[charCode] = glyphId;
                }
              } else {
                for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {
                  charCode = cMap.charCodeOf(glyphId);
                  charCodeToGlyphId[charCode] = glyphId;
                }
              }
              return charCodeToGlyphId;
            }
            let encoding = cff.encoding ? cff.encoding.encoding : null;
            if (properties.isInternalFont) {
              encoding = properties.defaultEncoding;
            }
            charCodeToGlyphId = (0, _fonts_utils.type1FontGlyphMapping)(
              properties,
              encoding,
              charsets
            );
            return charCodeToGlyphId;
          }
          hasGlyphId(id) {
            return this.cff.hasGlyphId(id);
          }
          _createBuiltInEncoding() {
            const { charset, encoding } = this.cff;
            if (!charset || !encoding) {
              return;
            }
            const charsets = charset.charset,
              encodings = encoding.encoding;
            const map = [];
            for (const charCode in encodings) {
              const glyphId = encodings[charCode];
              if (glyphId >= 0) {
                const glyphName = charsets[glyphId];
                if (glyphName) {
                  map[charCode] = glyphName;
                }
              }
            }
            if (map.length > 0) {
              this.properties.builtInEncoding = map;
            }
          }
        }
        exports.CFFFont = CFFFont;

        /***/
      },
      /* 44 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.FontRendererFactory = void 0;
        var _util = __w_pdfjs_require__(2);
        var _cff_parser = __w_pdfjs_require__(35);
        var _glyphlist = __w_pdfjs_require__(39);
        var _encodings = __w_pdfjs_require__(37);
        var _stream = __w_pdfjs_require__(8);
        function getUint32(data, offset) {
          return (
            ((data[offset] << 24) |
              (data[offset + 1] << 16) |
              (data[offset + 2] << 8) |
              data[offset + 3]) >>>
            0
          );
        }
        function getUint16(data, offset) {
          return (data[offset] << 8) | data[offset + 1];
        }
        function getInt16(data, offset) {
          return ((data[offset] << 24) | (data[offset + 1] << 16)) >> 16;
        }
        function getInt8(data, offset) {
          return (data[offset] << 24) >> 24;
        }
        function getFloat214(data, offset) {
          return getInt16(data, offset) / 16384;
        }
        function getSubroutineBias(subrs) {
          const numSubrs = subrs.length;
          let bias = 32768;
          if (numSubrs < 1240) {
            bias = 107;
          } else if (numSubrs < 33900) {
            bias = 1131;
          }
          return bias;
        }
        function parseCmap(data, start, end) {
          const offset =
            getUint16(data, start + 2) === 1
              ? getUint32(data, start + 8)
              : getUint32(data, start + 16);
          const format = getUint16(data, start + offset);
          let ranges, p, i;
          if (format === 4) {
            getUint16(data, start + offset + 2);
            const segCount = getUint16(data, start + offset + 6) >> 1;
            p = start + offset + 14;
            ranges = [];
            for (i = 0; i < segCount; i++, p += 2) {
              ranges[i] = {
                end: getUint16(data, p),
              };
            }
            p += 2;
            for (i = 0; i < segCount; i++, p += 2) {
              ranges[i].start = getUint16(data, p);
            }
            for (i = 0; i < segCount; i++, p += 2) {
              ranges[i].idDelta = getUint16(data, p);
            }
            for (i = 0; i < segCount; i++, p += 2) {
              let idOffset = getUint16(data, p);
              if (idOffset === 0) {
                continue;
              }
              ranges[i].ids = [];
              for (
                let j = 0, jj = ranges[i].end - ranges[i].start + 1;
                j < jj;
                j++
              ) {
                ranges[i].ids[j] = getUint16(data, p + idOffset);
                idOffset += 2;
              }
            }
            return ranges;
          } else if (format === 12) {
            const groups = getUint32(data, start + offset + 12);
            p = start + offset + 16;
            ranges = [];
            for (i = 0; i < groups; i++) {
              start = getUint32(data, p);
              ranges.push({
                start,
                end: getUint32(data, p + 4),
                idDelta: getUint32(data, p + 8) - start,
              });
              p += 12;
            }
            return ranges;
          }
          throw new _util.FormatError(`unsupported cmap: ${format}`);
        }
        function parseCff(data, start, end, seacAnalysisEnabled) {
          const properties = {};
          const parser = new _cff_parser.CFFParser(
            new _stream.Stream(data, start, end - start),
            properties,
            seacAnalysisEnabled
          );
          const cff = parser.parse();
          return {
            glyphs: cff.charStrings.objects,
            subrs: cff.topDict.privateDict?.subrsIndex?.objects,
            gsubrs: cff.globalSubrIndex?.objects,
            isCFFCIDFont: cff.isCIDFont,
            fdSelect: cff.fdSelect,
            fdArray: cff.fdArray,
          };
        }
        function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {
          let itemSize, itemDecode;
          if (isGlyphLocationsLong) {
            itemSize = 4;
            itemDecode = getUint32;
          } else {
            itemSize = 2;
            itemDecode = (data, offset) => 2 * getUint16(data, offset);
          }
          const glyphs = [];
          let startOffset = itemDecode(loca, 0);
          for (let j = itemSize; j < loca.length; j += itemSize) {
            const endOffset = itemDecode(loca, j);
            glyphs.push(glyf.subarray(startOffset, endOffset));
            startOffset = endOffset;
          }
          return glyphs;
        }
        function lookupCmap(ranges, unicode) {
          const code = unicode.codePointAt(0);
          let gid = 0,
            l = 0,
            r = ranges.length - 1;
          while (l < r) {
            const c = (l + r + 1) >> 1;
            if (code < ranges[c].start) {
              r = c - 1;
            } else {
              l = c;
            }
          }
          if (ranges[l].start <= code && code <= ranges[l].end) {
            gid =
              (ranges[l].idDelta +
                (ranges[l].ids
                  ? ranges[l].ids[code - ranges[l].start]
                  : code)) &
              0xffff;
          }
          return {
            charCode: code,
            glyphId: gid,
          };
        }
        function compileGlyf(code, cmds, font) {
          function moveTo(x, y) {
            cmds.push({
              cmd: "moveTo",
              args: [x, y],
            });
          }
          function lineTo(x, y) {
            cmds.push({
              cmd: "lineTo",
              args: [x, y],
            });
          }
          function quadraticCurveTo(xa, ya, x, y) {
            cmds.push({
              cmd: "quadraticCurveTo",
              args: [xa, ya, x, y],
            });
          }
          let i = 0;
          const numberOfContours = getInt16(code, i);
          let flags;
          let x = 0,
            y = 0;
          i += 10;
          if (numberOfContours < 0) {
            do {
              flags = getUint16(code, i);
              const glyphIndex = getUint16(code, i + 2);
              i += 4;
              let arg1, arg2;
              if (flags & 0x01) {
                if (flags & 0x02) {
                  arg1 = getInt16(code, i);
                  arg2 = getInt16(code, i + 2);
                } else {
                  arg1 = getUint16(code, i);
                  arg2 = getUint16(code, i + 2);
                }
                i += 4;
              } else if (flags & 0x02) {
                arg1 = getInt8(code, i++);
                arg2 = getInt8(code, i++);
              } else {
                arg1 = code[i++];
                arg2 = code[i++];
              }
              if (flags & 0x02) {
                x = arg1;
                y = arg2;
              } else {
                x = 0;
                y = 0;
              }
              let scaleX = 1,
                scaleY = 1,
                scale01 = 0,
                scale10 = 0;
              if (flags & 0x08) {
                scaleX = scaleY = getFloat214(code, i);
                i += 2;
              } else if (flags & 0x40) {
                scaleX = getFloat214(code, i);
                scaleY = getFloat214(code, i + 2);
                i += 4;
              } else if (flags & 0x80) {
                scaleX = getFloat214(code, i);
                scale01 = getFloat214(code, i + 2);
                scale10 = getFloat214(code, i + 4);
                scaleY = getFloat214(code, i + 6);
                i += 8;
              }
              const subglyph = font.glyphs[glyphIndex];
              if (subglyph) {
                cmds.push(
                  {
                    cmd: "save",
                  },
                  {
                    cmd: "transform",
                    args: [scaleX, scale01, scale10, scaleY, x, y],
                  }
                );
                if (!(flags & 0x02)) {
                }
                compileGlyf(subglyph, cmds, font);
                cmds.push({
                  cmd: "restore",
                });
              }
            } while (flags & 0x20);
          } else {
            const endPtsOfContours = [];
            let j, jj;
            for (j = 0; j < numberOfContours; j++) {
              endPtsOfContours.push(getUint16(code, i));
              i += 2;
            }
            const instructionLength = getUint16(code, i);
            i += 2 + instructionLength;
            const numberOfPoints = endPtsOfContours.at(-1) + 1;
            const points = [];
            while (points.length < numberOfPoints) {
              flags = code[i++];
              let repeat = 1;
              if (flags & 0x08) {
                repeat += code[i++];
              }
              while (repeat-- > 0) {
                points.push({
                  flags,
                });
              }
            }
            for (j = 0; j < numberOfPoints; j++) {
              switch (points[j].flags & 0x12) {
                case 0x00:
                  x += getInt16(code, i);
                  i += 2;
                  break;
                case 0x02:
                  x -= code[i++];
                  break;
                case 0x12:
                  x += code[i++];
                  break;
              }
              points[j].x = x;
            }
            for (j = 0; j < numberOfPoints; j++) {
              switch (points[j].flags & 0x24) {
                case 0x00:
                  y += getInt16(code, i);
                  i += 2;
                  break;
                case 0x04:
                  y -= code[i++];
                  break;
                case 0x24:
                  y += code[i++];
                  break;
              }
              points[j].y = y;
            }
            let startPoint = 0;
            for (i = 0; i < numberOfContours; i++) {
              const endPoint = endPtsOfContours[i];
              const contour = points.slice(startPoint, endPoint + 1);
              if (contour[0].flags & 1) {
                contour.push(contour[0]);
              } else if (contour.at(-1).flags & 1) {
                contour.unshift(contour.at(-1));
              } else {
                const p = {
                  flags: 1,
                  x: (contour[0].x + contour.at(-1).x) / 2,
                  y: (contour[0].y + contour.at(-1).y) / 2,
                };
                contour.unshift(p);
                contour.push(p);
              }
              moveTo(contour[0].x, contour[0].y);
              for (j = 1, jj = contour.length; j < jj; j++) {
                if (contour[j].flags & 1) {
                  lineTo(contour[j].x, contour[j].y);
                } else if (contour[j + 1].flags & 1) {
                  quadraticCurveTo(
                    contour[j].x,
                    contour[j].y,
                    contour[j + 1].x,
                    contour[j + 1].y
                  );
                  j++;
                } else {
                  quadraticCurveTo(
                    contour[j].x,
                    contour[j].y,
                    (contour[j].x + contour[j + 1].x) / 2,
                    (contour[j].y + contour[j + 1].y) / 2
                  );
                }
              }
              startPoint = endPoint + 1;
            }
          }
        }
        function compileCharString(charStringCode, cmds, font, glyphId) {
          function moveTo(x, y) {
            cmds.push({
              cmd: "moveTo",
              args: [x, y],
            });
          }
          function lineTo(x, y) {
            cmds.push({
              cmd: "lineTo",
              args: [x, y],
            });
          }
          function bezierCurveTo(x1, y1, x2, y2, x, y) {
            cmds.push({
              cmd: "bezierCurveTo",
              args: [x1, y1, x2, y2, x, y],
            });
          }
          const stack = [];
          let x = 0,
            y = 0;
          let stems = 0;
          function parse(code) {
            let i = 0;
            while (i < code.length) {
              let stackClean = false;
              let v = code[i++];
              let xa, xb, ya, yb, y1, y2, y3, n, subrCode;
              switch (v) {
                case 1:
                  stems += stack.length >> 1;
                  stackClean = true;
                  break;
                case 3:
                  stems += stack.length >> 1;
                  stackClean = true;
                  break;
                case 4:
                  y += stack.pop();
                  moveTo(x, y);
                  stackClean = true;
                  break;
                case 5:
                  while (stack.length > 0) {
                    x += stack.shift();
                    y += stack.shift();
                    lineTo(x, y);
                  }
                  break;
                case 6:
                  while (stack.length > 0) {
                    x += stack.shift();
                    lineTo(x, y);
                    if (stack.length === 0) {
                      break;
                    }
                    y += stack.shift();
                    lineTo(x, y);
                  }
                  break;
                case 7:
                  while (stack.length > 0) {
                    y += stack.shift();
                    lineTo(x, y);
                    if (stack.length === 0) {
                      break;
                    }
                    x += stack.shift();
                    lineTo(x, y);
                  }
                  break;
                case 8:
                  while (stack.length > 0) {
                    xa = x + stack.shift();
                    ya = y + stack.shift();
                    xb = xa + stack.shift();
                    yb = ya + stack.shift();
                    x = xb + stack.shift();
                    y = yb + stack.shift();
                    bezierCurveTo(xa, ya, xb, yb, x, y);
                  }
                  break;
                case 10:
                  n = stack.pop();
                  subrCode = null;
                  if (font.isCFFCIDFont) {
                    const fdIndex = font.fdSelect.getFDIndex(glyphId);
                    if (fdIndex >= 0 && fdIndex < font.fdArray.length) {
                      const fontDict = font.fdArray[fdIndex];
                      let subrs;
                      if (fontDict.privateDict?.subrsIndex) {
                        subrs = fontDict.privateDict.subrsIndex.objects;
                      }
                      if (subrs) {
                        n += getSubroutineBias(subrs);
                        subrCode = subrs[n];
                      }
                    } else {
                      (0, _util.warn)("Invalid fd index for glyph index.");
                    }
                  } else {
                    subrCode = font.subrs[n + font.subrsBias];
                  }
                  if (subrCode) {
                    parse(subrCode);
                  }
                  break;
                case 11:
                  return;
                case 12:
                  v = code[i++];
                  switch (v) {
                    case 34:
                      xa = x + stack.shift();
                      xb = xa + stack.shift();
                      y1 = y + stack.shift();
                      x = xb + stack.shift();
                      bezierCurveTo(xa, y, xb, y1, x, y1);
                      xa = x + stack.shift();
                      xb = xa + stack.shift();
                      x = xb + stack.shift();
                      bezierCurveTo(xa, y1, xb, y, x, y);
                      break;
                    case 35:
                      xa = x + stack.shift();
                      ya = y + stack.shift();
                      xb = xa + stack.shift();
                      yb = ya + stack.shift();
                      x = xb + stack.shift();
                      y = yb + stack.shift();
                      bezierCurveTo(xa, ya, xb, yb, x, y);
                      xa = x + stack.shift();
                      ya = y + stack.shift();
                      xb = xa + stack.shift();
                      yb = ya + stack.shift();
                      x = xb + stack.shift();
                      y = yb + stack.shift();
                      bezierCurveTo(xa, ya, xb, yb, x, y);
                      stack.pop();
                      break;
                    case 36:
                      xa = x + stack.shift();
                      y1 = y + stack.shift();
                      xb = xa + stack.shift();
                      y2 = y1 + stack.shift();
                      x = xb + stack.shift();
                      bezierCurveTo(xa, y1, xb, y2, x, y2);
                      xa = x + stack.shift();
                      xb = xa + stack.shift();
                      y3 = y2 + stack.shift();
                      x = xb + stack.shift();
                      bezierCurveTo(xa, y2, xb, y3, x, y);
                      break;
                    case 37:
                      const x0 = x,
                        y0 = y;
                      xa = x + stack.shift();
                      ya = y + stack.shift();
                      xb = xa + stack.shift();
                      yb = ya + stack.shift();
                      x = xb + stack.shift();
                      y = yb + stack.shift();
                      bezierCurveTo(xa, ya, xb, yb, x, y);
                      xa = x + stack.shift();
                      ya = y + stack.shift();
                      xb = xa + stack.shift();
                      yb = ya + stack.shift();
                      x = xb;
                      y = yb;
                      if (Math.abs(x - x0) > Math.abs(y - y0)) {
                        x += stack.shift();
                      } else {
                        y += stack.shift();
                      }
                      bezierCurveTo(xa, ya, xb, yb, x, y);
                      break;
                    default:
                      throw new _util.FormatError(`unknown operator: 12 ${v}`);
                  }
                  break;
                case 14:
                  if (stack.length >= 4) {
                    const achar = stack.pop();
                    const bchar = stack.pop();
                    y = stack.pop();
                    x = stack.pop();
                    cmds.push(
                      {
                        cmd: "save",
                      },
                      {
                        cmd: "translate",
                        args: [x, y],
                      }
                    );
                    let cmap = lookupCmap(
                      font.cmap,
                      String.fromCharCode(
                        font.glyphNameMap[_encodings.StandardEncoding[achar]]
                      )
                    );
                    compileCharString(
                      font.glyphs[cmap.glyphId],
                      cmds,
                      font,
                      cmap.glyphId
                    );
                    cmds.push({
                      cmd: "restore",
                    });
                    cmap = lookupCmap(
                      font.cmap,
                      String.fromCharCode(
                        font.glyphNameMap[_encodings.StandardEncoding[bchar]]
                      )
                    );
                    compileCharString(
                      font.glyphs[cmap.glyphId],
                      cmds,
                      font,
                      cmap.glyphId
                    );
                  }
                  return;
                case 18:
                  stems += stack.length >> 1;
                  stackClean = true;
                  break;
                case 19:
                  stems += stack.length >> 1;
                  i += (stems + 7) >> 3;
                  stackClean = true;
                  break;
                case 20:
                  stems += stack.length >> 1;
                  i += (stems + 7) >> 3;
                  stackClean = true;
                  break;
                case 21:
                  y += stack.pop();
                  x += stack.pop();
                  moveTo(x, y);
                  stackClean = true;
                  break;
                case 22:
                  x += stack.pop();
                  moveTo(x, y);
                  stackClean = true;
                  break;
                case 23:
                  stems += stack.length >> 1;
                  stackClean = true;
                  break;
                case 24:
                  while (stack.length > 2) {
                    xa = x + stack.shift();
                    ya = y + stack.shift();
                    xb = xa + stack.shift();
                    yb = ya + stack.shift();
                    x = xb + stack.shift();
                    y = yb + stack.shift();
                    bezierCurveTo(xa, ya, xb, yb, x, y);
                  }
                  x += stack.shift();
                  y += stack.shift();
                  lineTo(x, y);
                  break;
                case 25:
                  while (stack.length > 6) {
                    x += stack.shift();
                    y += stack.shift();
                    lineTo(x, y);
                  }
                  xa = x + stack.shift();
                  ya = y + stack.shift();
                  xb = xa + stack.shift();
                  yb = ya + stack.shift();
                  x = xb + stack.shift();
                  y = yb + stack.shift();
                  bezierCurveTo(xa, ya, xb, yb, x, y);
                  break;
                case 26:
                  if (stack.length % 2) {
                    x += stack.shift();
                  }
                  while (stack.length > 0) {
                    xa = x;
                    ya = y + stack.shift();
                    xb = xa + stack.shift();
                    yb = ya + stack.shift();
                    x = xb;
                    y = yb + stack.shift();
                    bezierCurveTo(xa, ya, xb, yb, x, y);
                  }
                  break;
                case 27:
                  if (stack.length % 2) {
                    y += stack.shift();
                  }
                  while (stack.length > 0) {
                    xa = x + stack.shift();
                    ya = y;
                    xb = xa + stack.shift();
                    yb = ya + stack.shift();
                    x = xb + stack.shift();
                    y = yb;
                    bezierCurveTo(xa, ya, xb, yb, x, y);
                  }
                  break;
                case 28:
                  stack.push(((code[i] << 24) | (code[i + 1] << 16)) >> 16);
                  i += 2;
                  break;
                case 29:
                  n = stack.pop() + font.gsubrsBias;
                  subrCode = font.gsubrs[n];
                  if (subrCode) {
                    parse(subrCode);
                  }
                  break;
                case 30:
                  while (stack.length > 0) {
                    xa = x;
                    ya = y + stack.shift();
                    xb = xa + stack.shift();
                    yb = ya + stack.shift();
                    x = xb + stack.shift();
                    y = yb + (stack.length === 1 ? stack.shift() : 0);
                    bezierCurveTo(xa, ya, xb, yb, x, y);
                    if (stack.length === 0) {
                      break;
                    }
                    xa = x + stack.shift();
                    ya = y;
                    xb = xa + stack.shift();
                    yb = ya + stack.shift();
                    y = yb + stack.shift();
                    x = xb + (stack.length === 1 ? stack.shift() : 0);
                    bezierCurveTo(xa, ya, xb, yb, x, y);
                  }
                  break;
                case 31:
                  while (stack.length > 0) {
                    xa = x + stack.shift();
                    ya = y;
                    xb = xa + stack.shift();
                    yb = ya + stack.shift();
                    y = yb + stack.shift();
                    x = xb + (stack.length === 1 ? stack.shift() : 0);
                    bezierCurveTo(xa, ya, xb, yb, x, y);
                    if (stack.length === 0) {
                      break;
                    }
                    xa = x;
                    ya = y + stack.shift();
                    xb = xa + stack.shift();
                    yb = ya + stack.shift();
                    x = xb + stack.shift();
                    y = yb + (stack.length === 1 ? stack.shift() : 0);
                    bezierCurveTo(xa, ya, xb, yb, x, y);
                  }
                  break;
                default:
                  if (v < 32) {
                    throw new _util.FormatError(`unknown operator: ${v}`);
                  }
                  if (v < 247) {
                    stack.push(v - 139);
                  } else if (v < 251) {
                    stack.push((v - 247) * 256 + code[i++] + 108);
                  } else if (v < 255) {
                    stack.push(-(v - 251) * 256 - code[i++] - 108);
                  } else {
                    stack.push(
                      ((code[i] << 24) |
                        (code[i + 1] << 16) |
                        (code[i + 2] << 8) |
                        code[i + 3]) /
                        65536
                    );
                    i += 4;
                  }
                  break;
              }
              if (stackClean) {
                stack.length = 0;
              }
            }
          }
          parse(charStringCode);
        }
        const NOOP = [];
        class CompiledFont {
          constructor(fontMatrix) {
            if (this.constructor === CompiledFont) {
              (0, _util.unreachable)("Cannot initialize CompiledFont.");
            }
            this.fontMatrix = fontMatrix;
            this.compiledGlyphs = Object.create(null);
            this.compiledCharCodeToGlyphId = Object.create(null);
          }
          getPathJs(unicode) {
            const { charCode, glyphId } = lookupCmap(this.cmap, unicode);
            let fn = this.compiledGlyphs[glyphId];
            if (!fn) {
              try {
                fn = this.compileGlyph(this.glyphs[glyphId], glyphId);
                this.compiledGlyphs[glyphId] = fn;
              } catch (ex) {
                this.compiledGlyphs[glyphId] = NOOP;
                if (this.compiledCharCodeToGlyphId[charCode] === undefined) {
                  this.compiledCharCodeToGlyphId[charCode] = glyphId;
                }
                throw ex;
              }
            }
            if (this.compiledCharCodeToGlyphId[charCode] === undefined) {
              this.compiledCharCodeToGlyphId[charCode] = glyphId;
            }
            return fn;
          }
          compileGlyph(code, glyphId) {
            if (!code || code.length === 0 || code[0] === 14) {
              return NOOP;
            }
            let fontMatrix = this.fontMatrix;
            if (this.isCFFCIDFont) {
              const fdIndex = this.fdSelect.getFDIndex(glyphId);
              if (fdIndex >= 0 && fdIndex < this.fdArray.length) {
                const fontDict = this.fdArray[fdIndex];
                fontMatrix =
                  fontDict.getByName("FontMatrix") ||
                  _util.FONT_IDENTITY_MATRIX;
              } else {
                (0, _util.warn)("Invalid fd index for glyph index.");
              }
            }
            const cmds = [
              {
                cmd: "save",
              },
              {
                cmd: "transform",
                args: fontMatrix.slice(),
              },
              {
                cmd: "scale",
                args: ["size", "-size"],
              },
            ];
            this.compileGlyphImpl(code, cmds, glyphId);
            cmds.push({
              cmd: "restore",
            });
            return cmds;
          }
          compileGlyphImpl() {
            (0, _util.unreachable)("Children classes should implement this.");
          }
          hasBuiltPath(unicode) {
            const { charCode, glyphId } = lookupCmap(this.cmap, unicode);
            return (
              this.compiledGlyphs[glyphId] !== undefined &&
              this.compiledCharCodeToGlyphId[charCode] !== undefined
            );
          }
        }
        class TrueTypeCompiled extends CompiledFont {
          constructor(glyphs, cmap, fontMatrix) {
            super(fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0]);
            this.glyphs = glyphs;
            this.cmap = cmap;
          }
          compileGlyphImpl(code, cmds) {
            compileGlyf(code, cmds, this);
          }
        }
        class Type2Compiled extends CompiledFont {
          constructor(cffInfo, cmap, fontMatrix, glyphNameMap) {
            super(fontMatrix || [0.001, 0, 0, 0.001, 0, 0]);
            this.glyphs = cffInfo.glyphs;
            this.gsubrs = cffInfo.gsubrs || [];
            this.subrs = cffInfo.subrs || [];
            this.cmap = cmap;
            this.glyphNameMap =
              glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();
            this.gsubrsBias = getSubroutineBias(this.gsubrs);
            this.subrsBias = getSubroutineBias(this.subrs);
            this.isCFFCIDFont = cffInfo.isCFFCIDFont;
            this.fdSelect = cffInfo.fdSelect;
            this.fdArray = cffInfo.fdArray;
          }
          compileGlyphImpl(code, cmds, glyphId) {
            compileCharString(code, cmds, this, glyphId);
          }
        }
        class FontRendererFactory {
          static create(font, seacAnalysisEnabled) {
            const data = new Uint8Array(font.data);
            let cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;
            const numTables = getUint16(data, 4);
            for (let i = 0, p = 12; i < numTables; i++, p += 16) {
              const tag = (0, _util.bytesToString)(data.subarray(p, p + 4));
              const offset = getUint32(data, p + 8);
              const length = getUint32(data, p + 12);
              switch (tag) {
                case "cmap":
                  cmap = parseCmap(data, offset, offset + length);
                  break;
                case "glyf":
                  glyf = data.subarray(offset, offset + length);
                  break;
                case "loca":
                  loca = data.subarray(offset, offset + length);
                  break;
                case "head":
                  unitsPerEm = getUint16(data, offset + 18);
                  indexToLocFormat = getUint16(data, offset + 50);
                  break;
                case "CFF ":
                  cff = parseCff(
                    data,
                    offset,
                    offset + length,
                    seacAnalysisEnabled
                  );
                  break;
              }
            }
            if (glyf) {
              const fontMatrix = !unitsPerEm
                ? font.fontMatrix
                : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];
              return new TrueTypeCompiled(
                parseGlyfTable(glyf, loca, indexToLocFormat),
                cmap,
                fontMatrix
              );
            }
            return new Type2Compiled(
              cff,
              cmap,
              font.fontMatrix,
              font.glyphNameMap
            );
          }
        }
        exports.FontRendererFactory = FontRendererFactory;

        /***/
      },
      /* 45 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.getMetrics = exports.getFontBasicMetrics = void 0;
        var _core_utils = __w_pdfjs_require__(3);
        const getMetrics = (0, _core_utils.getLookupTableFactory)(function (t) {
          t.Courier = 600;
          t["Courier-Bold"] = 600;
          t["Courier-BoldOblique"] = 600;
          t["Courier-Oblique"] = 600;
          t.Helvetica = (0, _core_utils.getLookupTableFactory)(function (t) {
            t.space = 278;
            t.exclam = 278;
            t.quotedbl = 355;
            t.numbersign = 556;
            t.dollar = 556;
            t.percent = 889;
            t.ampersand = 667;
            t.quoteright = 222;
            t.parenleft = 333;
            t.parenright = 333;
            t.asterisk = 389;
            t.plus = 584;
            t.comma = 278;
            t.hyphen = 333;
            t.period = 278;
            t.slash = 278;
            t.zero = 556;
            t.one = 556;
            t.two = 556;
            t.three = 556;
            t.four = 556;
            t.five = 556;
            t.six = 556;
            t.seven = 556;
            t.eight = 556;
            t.nine = 556;
            t.colon = 278;
            t.semicolon = 278;
            t.less = 584;
            t.equal = 584;
            t.greater = 584;
            t.question = 556;
            t.at = 1015;
            t.A = 667;
            t.B = 667;
            t.C = 722;
            t.D = 722;
            t.E = 667;
            t.F = 611;
            t.G = 778;
            t.H = 722;
            t.I = 278;
            t.J = 500;
            t.K = 667;
            t.L = 556;
            t.M = 833;
            t.N = 722;
            t.O = 778;
            t.P = 667;
            t.Q = 778;
            t.R = 722;
            t.S = 667;
            t.T = 611;
            t.U = 722;
            t.V = 667;
            t.W = 944;
            t.X = 667;
            t.Y = 667;
            t.Z = 611;
            t.bracketleft = 278;
            t.backslash = 278;
            t.bracketright = 278;
            t.asciicircum = 469;
            t.underscore = 556;
            t.quoteleft = 222;
            t.a = 556;
            t.b = 556;
            t.c = 500;
            t.d = 556;
            t.e = 556;
            t.f = 278;
            t.g = 556;
            t.h = 556;
            t.i = 222;
            t.j = 222;
            t.k = 500;
            t.l = 222;
            t.m = 833;
            t.n = 556;
            t.o = 556;
            t.p = 556;
            t.q = 556;
            t.r = 333;
            t.s = 500;
            t.t = 278;
            t.u = 556;
            t.v = 500;
            t.w = 722;
            t.x = 500;
            t.y = 500;
            t.z = 500;
            t.braceleft = 334;
            t.bar = 260;
            t.braceright = 334;
            t.asciitilde = 584;
            t.exclamdown = 333;
            t.cent = 556;
            t.sterling = 556;
            t.fraction = 167;
            t.yen = 556;
            t.florin = 556;
            t.section = 556;
            t.currency = 556;
            t.quotesingle = 191;
            t.quotedblleft = 333;
            t.guillemotleft = 556;
            t.guilsinglleft = 333;
            t.guilsinglright = 333;
            t.fi = 500;
            t.fl = 500;
            t.endash = 556;
            t.dagger = 556;
            t.daggerdbl = 556;
            t.periodcentered = 278;
            t.paragraph = 537;
            t.bullet = 350;
            t.quotesinglbase = 222;
            t.quotedblbase = 333;
            t.quotedblright = 333;
            t.guillemotright = 556;
            t.ellipsis = 1000;
            t.perthousand = 1000;
            t.questiondown = 611;
            t.grave = 333;
            t.acute = 333;
            t.circumflex = 333;
            t.tilde = 333;
            t.macron = 333;
            t.breve = 333;
            t.dotaccent = 333;
            t.dieresis = 333;
            t.ring = 333;
            t.cedilla = 333;
            t.hungarumlaut = 333;
            t.ogonek = 333;
            t.caron = 333;
            t.emdash = 1000;
            t.AE = 1000;
            t.ordfeminine = 370;
            t.Lslash = 556;
            t.Oslash = 778;
            t.OE = 1000;
            t.ordmasculine = 365;
            t.ae = 889;
            t.dotlessi = 278;
            t.lslash = 222;
            t.oslash = 611;
            t.oe = 944;
            t.germandbls = 611;
            t.Idieresis = 278;
            t.eacute = 556;
            t.abreve = 556;
            t.uhungarumlaut = 556;
            t.ecaron = 556;
            t.Ydieresis = 667;
            t.divide = 584;
            t.Yacute = 667;
            t.Acircumflex = 667;
            t.aacute = 556;
            t.Ucircumflex = 722;
            t.yacute = 500;
            t.scommaaccent = 500;
            t.ecircumflex = 556;
            t.Uring = 722;
            t.Udieresis = 722;
            t.aogonek = 556;
            t.Uacute = 722;
            t.uogonek = 556;
            t.Edieresis = 667;
            t.Dcroat = 722;
            t.commaaccent = 250;
            t.copyright = 737;
            t.Emacron = 667;
            t.ccaron = 500;
            t.aring = 556;
            t.Ncommaaccent = 722;
            t.lacute = 222;
            t.agrave = 556;
            t.Tcommaaccent = 611;
            t.Cacute = 722;
            t.atilde = 556;
            t.Edotaccent = 667;
            t.scaron = 500;
            t.scedilla = 500;
            t.iacute = 278;
            t.lozenge = 471;
            t.Rcaron = 722;
            t.Gcommaaccent = 778;
            t.ucircumflex = 556;
            t.acircumflex = 556;
            t.Amacron = 667;
            t.rcaron = 333;
            t.ccedilla = 500;
            t.Zdotaccent = 611;
            t.Thorn = 667;
            t.Omacron = 778;
            t.Racute = 722;
            t.Sacute = 667;
            t.dcaron = 643;
            t.Umacron = 722;
            t.uring = 556;
            t.threesuperior = 333;
            t.Ograve = 778;
            t.Agrave = 667;
            t.Abreve = 667;
            t.multiply = 584;
            t.uacute = 556;
            t.Tcaron = 611;
            t.partialdiff = 476;
            t.ydieresis = 500;
            t.Nacute = 722;
            t.icircumflex = 278;
            t.Ecircumflex = 667;
            t.adieresis = 556;
            t.edieresis = 556;
            t.cacute = 500;
            t.nacute = 556;
            t.umacron = 556;
            t.Ncaron = 722;
            t.Iacute = 278;
            t.plusminus = 584;
            t.brokenbar = 260;
            t.registered = 737;
            t.Gbreve = 778;
            t.Idotaccent = 278;
            t.summation = 600;
            t.Egrave = 667;
            t.racute = 333;
            t.omacron = 556;
            t.Zacute = 611;
            t.Zcaron = 611;
            t.greaterequal = 549;
            t.Eth = 722;
            t.Ccedilla = 722;
            t.lcommaaccent = 222;
            t.tcaron = 317;
            t.eogonek = 556;
            t.Uogonek = 722;
            t.Aacute = 667;
            t.Adieresis = 667;
            t.egrave = 556;
            t.zacute = 500;
            t.iogonek = 222;
            t.Oacute = 778;
            t.oacute = 556;
            t.amacron = 556;
            t.sacute = 500;
            t.idieresis = 278;
            t.Ocircumflex = 778;
            t.Ugrave = 722;
            t.Delta = 612;
            t.thorn = 556;
            t.twosuperior = 333;
            t.Odieresis = 778;
            t.mu = 556;
            t.igrave = 278;
            t.ohungarumlaut = 556;
            t.Eogonek = 667;
            t.dcroat = 556;
            t.threequarters = 834;
            t.Scedilla = 667;
            t.lcaron = 299;
            t.Kcommaaccent = 667;
            t.Lacute = 556;
            t.trademark = 1000;
            t.edotaccent = 556;
            t.Igrave = 278;
            t.Imacron = 278;
            t.Lcaron = 556;
            t.onehalf = 834;
            t.lessequal = 549;
            t.ocircumflex = 556;
            t.ntilde = 556;
            t.Uhungarumlaut = 722;
            t.Eacute = 667;
            t.emacron = 556;
            t.gbreve = 556;
            t.onequarter = 834;
            t.Scaron = 667;
            t.Scommaaccent = 667;
            t.Ohungarumlaut = 778;
            t.degree = 400;
            t.ograve = 556;
            t.Ccaron = 722;
            t.ugrave = 556;
            t.radical = 453;
            t.Dcaron = 722;
            t.rcommaaccent = 333;
            t.Ntilde = 722;
            t.otilde = 556;
            t.Rcommaaccent = 722;
            t.Lcommaaccent = 556;
            t.Atilde = 667;
            t.Aogonek = 667;
            t.Aring = 667;
            t.Otilde = 778;
            t.zdotaccent = 500;
            t.Ecaron = 667;
            t.Iogonek = 278;
            t.kcommaaccent = 500;
            t.minus = 584;
            t.Icircumflex = 278;
            t.ncaron = 556;
            t.tcommaaccent = 278;
            t.logicalnot = 584;
            t.odieresis = 556;
            t.udieresis = 556;
            t.notequal = 549;
            t.gcommaaccent = 556;
            t.eth = 556;
            t.zcaron = 500;
            t.ncommaaccent = 556;
            t.onesuperior = 333;
            t.imacron = 278;
            t.Euro = 556;
          });
          t["Helvetica-Bold"] = (0, _core_utils.getLookupTableFactory)(
            function (t) {
              t.space = 278;
              t.exclam = 333;
              t.quotedbl = 474;
              t.numbersign = 556;
              t.dollar = 556;
              t.percent = 889;
              t.ampersand = 722;
              t.quoteright = 278;
              t.parenleft = 333;
              t.parenright = 333;
              t.asterisk = 389;
              t.plus = 584;
              t.comma = 278;
              t.hyphen = 333;
              t.period = 278;
              t.slash = 278;
              t.zero = 556;
              t.one = 556;
              t.two = 556;
              t.three = 556;
              t.four = 556;
              t.five = 556;
              t.six = 556;
              t.seven = 556;
              t.eight = 556;
              t.nine = 556;
              t.colon = 333;
              t.semicolon = 333;
              t.less = 584;
              t.equal = 584;
              t.greater = 584;
              t.question = 611;
              t.at = 975;
              t.A = 722;
              t.B = 722;
              t.C = 722;
              t.D = 722;
              t.E = 667;
              t.F = 611;
              t.G = 778;
              t.H = 722;
              t.I = 278;
              t.J = 556;
              t.K = 722;
              t.L = 611;
              t.M = 833;
              t.N = 722;
              t.O = 778;
              t.P = 667;
              t.Q = 778;
              t.R = 722;
              t.S = 667;
              t.T = 611;
              t.U = 722;
              t.V = 667;
              t.W = 944;
              t.X = 667;
              t.Y = 667;
              t.Z = 611;
              t.bracketleft = 333;
              t.backslash = 278;
              t.bracketright = 333;
              t.asciicircum = 584;
              t.underscore = 556;
              t.quoteleft = 278;
              t.a = 556;
              t.b = 611;
              t.c = 556;
              t.d = 611;
              t.e = 556;
              t.f = 333;
              t.g = 611;
              t.h = 611;
              t.i = 278;
              t.j = 278;
              t.k = 556;
              t.l = 278;
              t.m = 889;
              t.n = 611;
              t.o = 611;
              t.p = 611;
              t.q = 611;
              t.r = 389;
              t.s = 556;
              t.t = 333;
              t.u = 611;
              t.v = 556;
              t.w = 778;
              t.x = 556;
              t.y = 556;
              t.z = 500;
              t.braceleft = 389;
              t.bar = 280;
              t.braceright = 389;
              t.asciitilde = 584;
              t.exclamdown = 333;
              t.cent = 556;
              t.sterling = 556;
              t.fraction = 167;
              t.yen = 556;
              t.florin = 556;
              t.section = 556;
              t.currency = 556;
              t.quotesingle = 238;
              t.quotedblleft = 500;
              t.guillemotleft = 556;
              t.guilsinglleft = 333;
              t.guilsinglright = 333;
              t.fi = 611;
              t.fl = 611;
              t.endash = 556;
              t.dagger = 556;
              t.daggerdbl = 556;
              t.periodcentered = 278;
              t.paragraph = 556;
              t.bullet = 350;
              t.quotesinglbase = 278;
              t.quotedblbase = 500;
              t.quotedblright = 500;
              t.guillemotright = 556;
              t.ellipsis = 1000;
              t.perthousand = 1000;
              t.questiondown = 611;
              t.grave = 333;
              t.acute = 333;
              t.circumflex = 333;
              t.tilde = 333;
              t.macron = 333;
              t.breve = 333;
              t.dotaccent = 333;
              t.dieresis = 333;
              t.ring = 333;
              t.cedilla = 333;
              t.hungarumlaut = 333;
              t.ogonek = 333;
              t.caron = 333;
              t.emdash = 1000;
              t.AE = 1000;
              t.ordfeminine = 370;
              t.Lslash = 611;
              t.Oslash = 778;
              t.OE = 1000;
              t.ordmasculine = 365;
              t.ae = 889;
              t.dotlessi = 278;
              t.lslash = 278;
              t.oslash = 611;
              t.oe = 944;
              t.germandbls = 611;
              t.Idieresis = 278;
              t.eacute = 556;
              t.abreve = 556;
              t.uhungarumlaut = 611;
              t.ecaron = 556;
              t.Ydieresis = 667;
              t.divide = 584;
              t.Yacute = 667;
              t.Acircumflex = 722;
              t.aacute = 556;
              t.Ucircumflex = 722;
              t.yacute = 556;
              t.scommaaccent = 556;
              t.ecircumflex = 556;
              t.Uring = 722;
              t.Udieresis = 722;
              t.aogonek = 556;
              t.Uacute = 722;
              t.uogonek = 611;
              t.Edieresis = 667;
              t.Dcroat = 722;
              t.commaaccent = 250;
              t.copyright = 737;
              t.Emacron = 667;
              t.ccaron = 556;
              t.aring = 556;
              t.Ncommaaccent = 722;
              t.lacute = 278;
              t.agrave = 556;
              t.Tcommaaccent = 611;
              t.Cacute = 722;
              t.atilde = 556;
              t.Edotaccent = 667;
              t.scaron = 556;
              t.scedilla = 556;
              t.iacute = 278;
              t.lozenge = 494;
              t.Rcaron = 722;
              t.Gcommaaccent = 778;
              t.ucircumflex = 611;
              t.acircumflex = 556;
              t.Amacron = 722;
              t.rcaron = 389;
              t.ccedilla = 556;
              t.Zdotaccent = 611;
              t.Thorn = 667;
              t.Omacron = 778;
              t.Racute = 722;
              t.Sacute = 667;
              t.dcaron = 743;
              t.Umacron = 722;
              t.uring = 611;
              t.threesuperior = 333;
              t.Ograve = 778;
              t.Agrave = 722;
              t.Abreve = 722;
              t.multiply = 584;
              t.uacute = 611;
              t.Tcaron = 611;
              t.partialdiff = 494;
              t.ydieresis = 556;
              t.Nacute = 722;
              t.icircumflex = 278;
              t.Ecircumflex = 667;
              t.adieresis = 556;
              t.edieresis = 556;
              t.cacute = 556;
              t.nacute = 611;
              t.umacron = 611;
              t.Ncaron = 722;
              t.Iacute = 278;
              t.plusminus = 584;
              t.brokenbar = 280;
              t.registered = 737;
              t.Gbreve = 778;
              t.Idotaccent = 278;
              t.summation = 600;
              t.Egrave = 667;
              t.racute = 389;
              t.omacron = 611;
              t.Zacute = 611;
              t.Zcaron = 611;
              t.greaterequal = 549;
              t.Eth = 722;
              t.Ccedilla = 722;
              t.lcommaaccent = 278;
              t.tcaron = 389;
              t.eogonek = 556;
              t.Uogonek = 722;
              t.Aacute = 722;
              t.Adieresis = 722;
              t.egrave = 556;
              t.zacute = 500;
              t.iogonek = 278;
              t.Oacute = 778;
              t.oacute = 611;
              t.amacron = 556;
              t.sacute = 556;
              t.idieresis = 278;
              t.Ocircumflex = 778;
              t.Ugrave = 722;
              t.Delta = 612;
              t.thorn = 611;
              t.twosuperior = 333;
              t.Odieresis = 778;
              t.mu = 611;
              t.igrave = 278;
              t.ohungarumlaut = 611;
              t.Eogonek = 667;
              t.dcroat = 611;
              t.threequarters = 834;
              t.Scedilla = 667;
              t.lcaron = 400;
              t.Kcommaaccent = 722;
              t.Lacute = 611;
              t.trademark = 1000;
              t.edotaccent = 556;
              t.Igrave = 278;
              t.Imacron = 278;
              t.Lcaron = 611;
              t.onehalf = 834;
              t.lessequal = 549;
              t.ocircumflex = 611;
              t.ntilde = 611;
              t.Uhungarumlaut = 722;
              t.Eacute = 667;
              t.emacron = 556;
              t.gbreve = 611;
              t.onequarter = 834;
              t.Scaron = 667;
              t.Scommaaccent = 667;
              t.Ohungarumlaut = 778;
              t.degree = 400;
              t.ograve = 611;
              t.Ccaron = 722;
              t.ugrave = 611;
              t.radical = 549;
              t.Dcaron = 722;
              t.rcommaaccent = 389;
              t.Ntilde = 722;
              t.otilde = 611;
              t.Rcommaaccent = 722;
              t.Lcommaaccent = 611;
              t.Atilde = 722;
              t.Aogonek = 722;
              t.Aring = 722;
              t.Otilde = 778;
              t.zdotaccent = 500;
              t.Ecaron = 667;
              t.Iogonek = 278;
              t.kcommaaccent = 556;
              t.minus = 584;
              t.Icircumflex = 278;
              t.ncaron = 611;
              t.tcommaaccent = 333;
              t.logicalnot = 584;
              t.odieresis = 611;
              t.udieresis = 611;
              t.notequal = 549;
              t.gcommaaccent = 611;
              t.eth = 611;
              t.zcaron = 500;
              t.ncommaaccent = 611;
              t.onesuperior = 333;
              t.imacron = 278;
              t.Euro = 556;
            }
          );
          t["Helvetica-BoldOblique"] = (0, _core_utils.getLookupTableFactory)(
            function (t) {
              t.space = 278;
              t.exclam = 333;
              t.quotedbl = 474;
              t.numbersign = 556;
              t.dollar = 556;
              t.percent = 889;
              t.ampersand = 722;
              t.quoteright = 278;
              t.parenleft = 333;
              t.parenright = 333;
              t.asterisk = 389;
              t.plus = 584;
              t.comma = 278;
              t.hyphen = 333;
              t.period = 278;
              t.slash = 278;
              t.zero = 556;
              t.one = 556;
              t.two = 556;
              t.three = 556;
              t.four = 556;
              t.five = 556;
              t.six = 556;
              t.seven = 556;
              t.eight = 556;
              t.nine = 556;
              t.colon = 333;
              t.semicolon = 333;
              t.less = 584;
              t.equal = 584;
              t.greater = 584;
              t.question = 611;
              t.at = 975;
              t.A = 722;
              t.B = 722;
              t.C = 722;
              t.D = 722;
              t.E = 667;
              t.F = 611;
              t.G = 778;
              t.H = 722;
              t.I = 278;
              t.J = 556;
              t.K = 722;
              t.L = 611;
              t.M = 833;
              t.N = 722;
              t.O = 778;
              t.P = 667;
              t.Q = 778;
              t.R = 722;
              t.S = 667;
              t.T = 611;
              t.U = 722;
              t.V = 667;
              t.W = 944;
              t.X = 667;
              t.Y = 667;
              t.Z = 611;
              t.bracketleft = 333;
              t.backslash = 278;
              t.bracketright = 333;
              t.asciicircum = 584;
              t.underscore = 556;
              t.quoteleft = 278;
              t.a = 556;
              t.b = 611;
              t.c = 556;
              t.d = 611;
              t.e = 556;
              t.f = 333;
              t.g = 611;
              t.h = 611;
              t.i = 278;
              t.j = 278;
              t.k = 556;
              t.l = 278;
              t.m = 889;
              t.n = 611;
              t.o = 611;
              t.p = 611;
              t.q = 611;
              t.r = 389;
              t.s = 556;
              t.t = 333;
              t.u = 611;
              t.v = 556;
              t.w = 778;
              t.x = 556;
              t.y = 556;
              t.z = 500;
              t.braceleft = 389;
              t.bar = 280;
              t.braceright = 389;
              t.asciitilde = 584;
              t.exclamdown = 333;
              t.cent = 556;
              t.sterling = 556;
              t.fraction = 167;
              t.yen = 556;
              t.florin = 556;
              t.section = 556;
              t.currency = 556;
              t.quotesingle = 238;
              t.quotedblleft = 500;
              t.guillemotleft = 556;
              t.guilsinglleft = 333;
              t.guilsinglright = 333;
              t.fi = 611;
              t.fl = 611;
              t.endash = 556;
              t.dagger = 556;
              t.daggerdbl = 556;
              t.periodcentered = 278;
              t.paragraph = 556;
              t.bullet = 350;
              t.quotesinglbase = 278;
              t.quotedblbase = 500;
              t.quotedblright = 500;
              t.guillemotright = 556;
              t.ellipsis = 1000;
              t.perthousand = 1000;
              t.questiondown = 611;
              t.grave = 333;
              t.acute = 333;
              t.circumflex = 333;
              t.tilde = 333;
              t.macron = 333;
              t.breve = 333;
              t.dotaccent = 333;
              t.dieresis = 333;
              t.ring = 333;
              t.cedilla = 333;
              t.hungarumlaut = 333;
              t.ogonek = 333;
              t.caron = 333;
              t.emdash = 1000;
              t.AE = 1000;
              t.ordfeminine = 370;
              t.Lslash = 611;
              t.Oslash = 778;
              t.OE = 1000;
              t.ordmasculine = 365;
              t.ae = 889;
              t.dotlessi = 278;
              t.lslash = 278;
              t.oslash = 611;
              t.oe = 944;
              t.germandbls = 611;
              t.Idieresis = 278;
              t.eacute = 556;
              t.abreve = 556;
              t.uhungarumlaut = 611;
              t.ecaron = 556;
              t.Ydieresis = 667;
              t.divide = 584;
              t.Yacute = 667;
              t.Acircumflex = 722;
              t.aacute = 556;
              t.Ucircumflex = 722;
              t.yacute = 556;
              t.scommaaccent = 556;
              t.ecircumflex = 556;
              t.Uring = 722;
              t.Udieresis = 722;
              t.aogonek = 556;
              t.Uacute = 722;
              t.uogonek = 611;
              t.Edieresis = 667;
              t.Dcroat = 722;
              t.commaaccent = 250;
              t.copyright = 737;
              t.Emacron = 667;
              t.ccaron = 556;
              t.aring = 556;
              t.Ncommaaccent = 722;
              t.lacute = 278;
              t.agrave = 556;
              t.Tcommaaccent = 611;
              t.Cacute = 722;
              t.atilde = 556;
              t.Edotaccent = 667;
              t.scaron = 556;
              t.scedilla = 556;
              t.iacute = 278;
              t.lozenge = 494;
              t.Rcaron = 722;
              t.Gcommaaccent = 778;
              t.ucircumflex = 611;
              t.acircumflex = 556;
              t.Amacron = 722;
              t.rcaron = 389;
              t.ccedilla = 556;
              t.Zdotaccent = 611;
              t.Thorn = 667;
              t.Omacron = 778;
              t.Racute = 722;
              t.Sacute = 667;
              t.dcaron = 743;
              t.Umacron = 722;
              t.uring = 611;
              t.threesuperior = 333;
              t.Ograve = 778;
              t.Agrave = 722;
              t.Abreve = 722;
              t.multiply = 584;
              t.uacute = 611;
              t.Tcaron = 611;
              t.partialdiff = 494;
              t.ydieresis = 556;
              t.Nacute = 722;
              t.icircumflex = 278;
              t.Ecircumflex = 667;
              t.adieresis = 556;
              t.edieresis = 556;
              t.cacute = 556;
              t.nacute = 611;
              t.umacron = 611;
              t.Ncaron = 722;
              t.Iacute = 278;
              t.plusminus = 584;
              t.brokenbar = 280;
              t.registered = 737;
              t.Gbreve = 778;
              t.Idotaccent = 278;
              t.summation = 600;
              t.Egrave = 667;
              t.racute = 389;
              t.omacron = 611;
              t.Zacute = 611;
              t.Zcaron = 611;
              t.greaterequal = 549;
              t.Eth = 722;
              t.Ccedilla = 722;
              t.lcommaaccent = 278;
              t.tcaron = 389;
              t.eogonek = 556;
              t.Uogonek = 722;
              t.Aacute = 722;
              t.Adieresis = 722;
              t.egrave = 556;
              t.zacute = 500;
              t.iogonek = 278;
              t.Oacute = 778;
              t.oacute = 611;
              t.amacron = 556;
              t.sacute = 556;
              t.idieresis = 278;
              t.Ocircumflex = 778;
              t.Ugrave = 722;
              t.Delta = 612;
              t.thorn = 611;
              t.twosuperior = 333;
              t.Odieresis = 778;
              t.mu = 611;
              t.igrave = 278;
              t.ohungarumlaut = 611;
              t.Eogonek = 667;
              t.dcroat = 611;
              t.threequarters = 834;
              t.Scedilla = 667;
              t.lcaron = 400;
              t.Kcommaaccent = 722;
              t.Lacute = 611;
              t.trademark = 1000;
              t.edotaccent = 556;
              t.Igrave = 278;
              t.Imacron = 278;
              t.Lcaron = 611;
              t.onehalf = 834;
              t.lessequal = 549;
              t.ocircumflex = 611;
              t.ntilde = 611;
              t.Uhungarumlaut = 722;
              t.Eacute = 667;
              t.emacron = 556;
              t.gbreve = 611;
              t.onequarter = 834;
              t.Scaron = 667;
              t.Scommaaccent = 667;
              t.Ohungarumlaut = 778;
              t.degree = 400;
              t.ograve = 611;
              t.Ccaron = 722;
              t.ugrave = 611;
              t.radical = 549;
              t.Dcaron = 722;
              t.rcommaaccent = 389;
              t.Ntilde = 722;
              t.otilde = 611;
              t.Rcommaaccent = 722;
              t.Lcommaaccent = 611;
              t.Atilde = 722;
              t.Aogonek = 722;
              t.Aring = 722;
              t.Otilde = 778;
              t.zdotaccent = 500;
              t.Ecaron = 667;
              t.Iogonek = 278;
              t.kcommaaccent = 556;
              t.minus = 584;
              t.Icircumflex = 278;
              t.ncaron = 611;
              t.tcommaaccent = 333;
              t.logicalnot = 584;
              t.odieresis = 611;
              t.udieresis = 611;
              t.notequal = 549;
              t.gcommaaccent = 611;
              t.eth = 611;
              t.zcaron = 500;
              t.ncommaaccent = 611;
              t.onesuperior = 333;
              t.imacron = 278;
              t.Euro = 556;
            }
          );
          t["Helvetica-Oblique"] = (0, _core_utils.getLookupTableFactory)(
            function (t) {
              t.space = 278;
              t.exclam = 278;
              t.quotedbl = 355;
              t.numbersign = 556;
              t.dollar = 556;
              t.percent = 889;
              t.ampersand = 667;
              t.quoteright = 222;
              t.parenleft = 333;
              t.parenright = 333;
              t.asterisk = 389;
              t.plus = 584;
              t.comma = 278;
              t.hyphen = 333;
              t.period = 278;
              t.slash = 278;
              t.zero = 556;
              t.one = 556;
              t.two = 556;
              t.three = 556;
              t.four = 556;
              t.five = 556;
              t.six = 556;
              t.seven = 556;
              t.eight = 556;
              t.nine = 556;
              t.colon = 278;
              t.semicolon = 278;
              t.less = 584;
              t.equal = 584;
              t.greater = 584;
              t.question = 556;
              t.at = 1015;
              t.A = 667;
              t.B = 667;
              t.C = 722;
              t.D = 722;
              t.E = 667;
              t.F = 611;
              t.G = 778;
              t.H = 722;
              t.I = 278;
              t.J = 500;
              t.K = 667;
              t.L = 556;
              t.M = 833;
              t.N = 722;
              t.O = 778;
              t.P = 667;
              t.Q = 778;
              t.R = 722;
              t.S = 667;
              t.T = 611;
              t.U = 722;
              t.V = 667;
              t.W = 944;
              t.X = 667;
              t.Y = 667;
              t.Z = 611;
              t.bracketleft = 278;
              t.backslash = 278;
              t.bracketright = 278;
              t.asciicircum = 469;
              t.underscore = 556;
              t.quoteleft = 222;
              t.a = 556;
              t.b = 556;
              t.c = 500;
              t.d = 556;
              t.e = 556;
              t.f = 278;
              t.g = 556;
              t.h = 556;
              t.i = 222;
              t.j = 222;
              t.k = 500;
              t.l = 222;
              t.m = 833;
              t.n = 556;
              t.o = 556;
              t.p = 556;
              t.q = 556;
              t.r = 333;
              t.s = 500;
              t.t = 278;
              t.u = 556;
              t.v = 500;
              t.w = 722;
              t.x = 500;
              t.y = 500;
              t.z = 500;
              t.braceleft = 334;
              t.bar = 260;
              t.braceright = 334;
              t.asciitilde = 584;
              t.exclamdown = 333;
              t.cent = 556;
              t.sterling = 556;
              t.fraction = 167;
              t.yen = 556;
              t.florin = 556;
              t.section = 556;
              t.currency = 556;
              t.quotesingle = 191;
              t.quotedblleft = 333;
              t.guillemotleft = 556;
              t.guilsinglleft = 333;
              t.guilsinglright = 333;
              t.fi = 500;
              t.fl = 500;
              t.endash = 556;
              t.dagger = 556;
              t.daggerdbl = 556;
              t.periodcentered = 278;
              t.paragraph = 537;
              t.bullet = 350;
              t.quotesinglbase = 222;
              t.quotedblbase = 333;
              t.quotedblright = 333;
              t.guillemotright = 556;
              t.ellipsis = 1000;
              t.perthousand = 1000;
              t.questiondown = 611;
              t.grave = 333;
              t.acute = 333;
              t.circumflex = 333;
              t.tilde = 333;
              t.macron = 333;
              t.breve = 333;
              t.dotaccent = 333;
              t.dieresis = 333;
              t.ring = 333;
              t.cedilla = 333;
              t.hungarumlaut = 333;
              t.ogonek = 333;
              t.caron = 333;
              t.emdash = 1000;
              t.AE = 1000;
              t.ordfeminine = 370;
              t.Lslash = 556;
              t.Oslash = 778;
              t.OE = 1000;
              t.ordmasculine = 365;
              t.ae = 889;
              t.dotlessi = 278;
              t.lslash = 222;
              t.oslash = 611;
              t.oe = 944;
              t.germandbls = 611;
              t.Idieresis = 278;
              t.eacute = 556;
              t.abreve = 556;
              t.uhungarumlaut = 556;
              t.ecaron = 556;
              t.Ydieresis = 667;
              t.divide = 584;
              t.Yacute = 667;
              t.Acircumflex = 667;
              t.aacute = 556;
              t.Ucircumflex = 722;
              t.yacute = 500;
              t.scommaaccent = 500;
              t.ecircumflex = 556;
              t.Uring = 722;
              t.Udieresis = 722;
              t.aogonek = 556;
              t.Uacute = 722;
              t.uogonek = 556;
              t.Edieresis = 667;
              t.Dcroat = 722;
              t.commaaccent = 250;
              t.copyright = 737;
              t.Emacron = 667;
              t.ccaron = 500;
              t.aring = 556;
              t.Ncommaaccent = 722;
              t.lacute = 222;
              t.agrave = 556;
              t.Tcommaaccent = 611;
              t.Cacute = 722;
              t.atilde = 556;
              t.Edotaccent = 667;
              t.scaron = 500;
              t.scedilla = 500;
              t.iacute = 278;
              t.lozenge = 471;
              t.Rcaron = 722;
              t.Gcommaaccent = 778;
              t.ucircumflex = 556;
              t.acircumflex = 556;
              t.Amacron = 667;
              t.rcaron = 333;
              t.ccedilla = 500;
              t.Zdotaccent = 611;
              t.Thorn = 667;
              t.Omacron = 778;
              t.Racute = 722;
              t.Sacute = 667;
              t.dcaron = 643;
              t.Umacron = 722;
              t.uring = 556;
              t.threesuperior = 333;
              t.Ograve = 778;
              t.Agrave = 667;
              t.Abreve = 667;
              t.multiply = 584;
              t.uacute = 556;
              t.Tcaron = 611;
              t.partialdiff = 476;
              t.ydieresis = 500;
              t.Nacute = 722;
              t.icircumflex = 278;
              t.Ecircumflex = 667;
              t.adieresis = 556;
              t.edieresis = 556;
              t.cacute = 500;
              t.nacute = 556;
              t.umacron = 556;
              t.Ncaron = 722;
              t.Iacute = 278;
              t.plusminus = 584;
              t.brokenbar = 260;
              t.registered = 737;
              t.Gbreve = 778;
              t.Idotaccent = 278;
              t.summation = 600;
              t.Egrave = 667;
              t.racute = 333;
              t.omacron = 556;
              t.Zacute = 611;
              t.Zcaron = 611;
              t.greaterequal = 549;
              t.Eth = 722;
              t.Ccedilla = 722;
              t.lcommaaccent = 222;
              t.tcaron = 317;
              t.eogonek = 556;
              t.Uogonek = 722;
              t.Aacute = 667;
              t.Adieresis = 667;
              t.egrave = 556;
              t.zacute = 500;
              t.iogonek = 222;
              t.Oacute = 778;
              t.oacute = 556;
              t.amacron = 556;
              t.sacute = 500;
              t.idieresis = 278;
              t.Ocircumflex = 778;
              t.Ugrave = 722;
              t.Delta = 612;
              t.thorn = 556;
              t.twosuperior = 333;
              t.Odieresis = 778;
              t.mu = 556;
              t.igrave = 278;
              t.ohungarumlaut = 556;
              t.Eogonek = 667;
              t.dcroat = 556;
              t.threequarters = 834;
              t.Scedilla = 667;
              t.lcaron = 299;
              t.Kcommaaccent = 667;
              t.Lacute = 556;
              t.trademark = 1000;
              t.edotaccent = 556;
              t.Igrave = 278;
              t.Imacron = 278;
              t.Lcaron = 556;
              t.onehalf = 834;
              t.lessequal = 549;
              t.ocircumflex = 556;
              t.ntilde = 556;
              t.Uhungarumlaut = 722;
              t.Eacute = 667;
              t.emacron = 556;
              t.gbreve = 556;
              t.onequarter = 834;
              t.Scaron = 667;
              t.Scommaaccent = 667;
              t.Ohungarumlaut = 778;
              t.degree = 400;
              t.ograve = 556;
              t.Ccaron = 722;
              t.ugrave = 556;
              t.radical = 453;
              t.Dcaron = 722;
              t.rcommaaccent = 333;
              t.Ntilde = 722;
              t.otilde = 556;
              t.Rcommaaccent = 722;
              t.Lcommaaccent = 556;
              t.Atilde = 667;
              t.Aogonek = 667;
              t.Aring = 667;
              t.Otilde = 778;
              t.zdotaccent = 500;
              t.Ecaron = 667;
              t.Iogonek = 278;
              t.kcommaaccent = 500;
              t.minus = 584;
              t.Icircumflex = 278;
              t.ncaron = 556;
              t.tcommaaccent = 278;
              t.logicalnot = 584;
              t.odieresis = 556;
              t.udieresis = 556;
              t.notequal = 549;
              t.gcommaaccent = 556;
              t.eth = 556;
              t.zcaron = 500;
              t.ncommaaccent = 556;
              t.onesuperior = 333;
              t.imacron = 278;
              t.Euro = 556;
            }
          );
          t.Symbol = (0, _core_utils.getLookupTableFactory)(function (t) {
            t.space = 250;
            t.exclam = 333;
            t.universal = 713;
            t.numbersign = 500;
            t.existential = 549;
            t.percent = 833;
            t.ampersand = 778;
            t.suchthat = 439;
            t.parenleft = 333;
            t.parenright = 333;
            t.asteriskmath = 500;
            t.plus = 549;
            t.comma = 250;
            t.minus = 549;
            t.period = 250;
            t.slash = 278;
            t.zero = 500;
            t.one = 500;
            t.two = 500;
            t.three = 500;
            t.four = 500;
            t.five = 500;
            t.six = 500;
            t.seven = 500;
            t.eight = 500;
            t.nine = 500;
            t.colon = 278;
            t.semicolon = 278;
            t.less = 549;
            t.equal = 549;
            t.greater = 549;
            t.question = 444;
            t.congruent = 549;
            t.Alpha = 722;
            t.Beta = 667;
            t.Chi = 722;
            t.Delta = 612;
            t.Epsilon = 611;
            t.Phi = 763;
            t.Gamma = 603;
            t.Eta = 722;
            t.Iota = 333;
            t.theta1 = 631;
            t.Kappa = 722;
            t.Lambda = 686;
            t.Mu = 889;
            t.Nu = 722;
            t.Omicron = 722;
            t.Pi = 768;
            t.Theta = 741;
            t.Rho = 556;
            t.Sigma = 592;
            t.Tau = 611;
            t.Upsilon = 690;
            t.sigma1 = 439;
            t.Omega = 768;
            t.Xi = 645;
            t.Psi = 795;
            t.Zeta = 611;
            t.bracketleft = 333;
            t.therefore = 863;
            t.bracketright = 333;
            t.perpendicular = 658;
            t.underscore = 500;
            t.radicalex = 500;
            t.alpha = 631;
            t.beta = 549;
            t.chi = 549;
            t.delta = 494;
            t.epsilon = 439;
            t.phi = 521;
            t.gamma = 411;
            t.eta = 603;
            t.iota = 329;
            t.phi1 = 603;
            t.kappa = 549;
            t.lambda = 549;
            t.mu = 576;
            t.nu = 521;
            t.omicron = 549;
            t.pi = 549;
            t.theta = 521;
            t.rho = 549;
            t.sigma = 603;
            t.tau = 439;
            t.upsilon = 576;
            t.omega1 = 713;
            t.omega = 686;
            t.xi = 493;
            t.psi = 686;
            t.zeta = 494;
            t.braceleft = 480;
            t.bar = 200;
            t.braceright = 480;
            t.similar = 549;
            t.Euro = 750;
            t.Upsilon1 = 620;
            t.minute = 247;
            t.lessequal = 549;
            t.fraction = 167;
            t.infinity = 713;
            t.florin = 500;
            t.club = 753;
            t.diamond = 753;
            t.heart = 753;
            t.spade = 753;
            t.arrowboth = 1042;
            t.arrowleft = 987;
            t.arrowup = 603;
            t.arrowright = 987;
            t.arrowdown = 603;
            t.degree = 400;
            t.plusminus = 549;
            t.second = 411;
            t.greaterequal = 549;
            t.multiply = 549;
            t.proportional = 713;
            t.partialdiff = 494;
            t.bullet = 460;
            t.divide = 549;
            t.notequal = 549;
            t.equivalence = 549;
            t.approxequal = 549;
            t.ellipsis = 1000;
            t.arrowvertex = 603;
            t.arrowhorizex = 1000;
            t.carriagereturn = 658;
            t.aleph = 823;
            t.Ifraktur = 686;
            t.Rfraktur = 795;
            t.weierstrass = 987;
            t.circlemultiply = 768;
            t.circleplus = 768;
            t.emptyset = 823;
            t.intersection = 768;
            t.union = 768;
            t.propersuperset = 713;
            t.reflexsuperset = 713;
            t.notsubset = 713;
            t.propersubset = 713;
            t.reflexsubset = 713;
            t.element = 713;
            t.notelement = 713;
            t.angle = 768;
            t.gradient = 713;
            t.registerserif = 790;
            t.copyrightserif = 790;
            t.trademarkserif = 890;
            t.product = 823;
            t.radical = 549;
            t.dotmath = 250;
            t.logicalnot = 713;
            t.logicaland = 603;
            t.logicalor = 603;
            t.arrowdblboth = 1042;
            t.arrowdblleft = 987;
            t.arrowdblup = 603;
            t.arrowdblright = 987;
            t.arrowdbldown = 603;
            t.lozenge = 494;
            t.angleleft = 329;
            t.registersans = 790;
            t.copyrightsans = 790;
            t.trademarksans = 786;
            t.summation = 713;
            t.parenlefttp = 384;
            t.parenleftex = 384;
            t.parenleftbt = 384;
            t.bracketlefttp = 384;
            t.bracketleftex = 384;
            t.bracketleftbt = 384;
            t.bracelefttp = 494;
            t.braceleftmid = 494;
            t.braceleftbt = 494;
            t.braceex = 494;
            t.angleright = 329;
            t.integral = 274;
            t.integraltp = 686;
            t.integralex = 686;
            t.integralbt = 686;
            t.parenrighttp = 384;
            t.parenrightex = 384;
            t.parenrightbt = 384;
            t.bracketrighttp = 384;
            t.bracketrightex = 384;
            t.bracketrightbt = 384;
            t.bracerighttp = 494;
            t.bracerightmid = 494;
            t.bracerightbt = 494;
            t.apple = 790;
          });
          t["Times-Roman"] = (0, _core_utils.getLookupTableFactory)(function (
            t
          ) {
            t.space = 250;
            t.exclam = 333;
            t.quotedbl = 408;
            t.numbersign = 500;
            t.dollar = 500;
            t.percent = 833;
            t.ampersand = 778;
            t.quoteright = 333;
            t.parenleft = 333;
            t.parenright = 333;
            t.asterisk = 500;
            t.plus = 564;
            t.comma = 250;
            t.hyphen = 333;
            t.period = 250;
            t.slash = 278;
            t.zero = 500;
            t.one = 500;
            t.two = 500;
            t.three = 500;
            t.four = 500;
            t.five = 500;
            t.six = 500;
            t.seven = 500;
            t.eight = 500;
            t.nine = 500;
            t.colon = 278;
            t.semicolon = 278;
            t.less = 564;
            t.equal = 564;
            t.greater = 564;
            t.question = 444;
            t.at = 921;
            t.A = 722;
            t.B = 667;
            t.C = 667;
            t.D = 722;
            t.E = 611;
            t.F = 556;
            t.G = 722;
            t.H = 722;
            t.I = 333;
            t.J = 389;
            t.K = 722;
            t.L = 611;
            t.M = 889;
            t.N = 722;
            t.O = 722;
            t.P = 556;
            t.Q = 722;
            t.R = 667;
            t.S = 556;
            t.T = 611;
            t.U = 722;
            t.V = 722;
            t.W = 944;
            t.X = 722;
            t.Y = 722;
            t.Z = 611;
            t.bracketleft = 333;
            t.backslash = 278;
            t.bracketright = 333;
            t.asciicircum = 469;
            t.underscore = 500;
            t.quoteleft = 333;
            t.a = 444;
            t.b = 500;
            t.c = 444;
            t.d = 500;
            t.e = 444;
            t.f = 333;
            t.g = 500;
            t.h = 500;
            t.i = 278;
            t.j = 278;
            t.k = 500;
            t.l = 278;
            t.m = 778;
            t.n = 500;
            t.o = 500;
            t.p = 500;
            t.q = 500;
            t.r = 333;
            t.s = 389;
            t.t = 278;
            t.u = 500;
            t.v = 500;
            t.w = 722;
            t.x = 500;
            t.y = 500;
            t.z = 444;
            t.braceleft = 480;
            t.bar = 200;
            t.braceright = 480;
            t.asciitilde = 541;
            t.exclamdown = 333;
            t.cent = 500;
            t.sterling = 500;
            t.fraction = 167;
            t.yen = 500;
            t.florin = 500;
            t.section = 500;
            t.currency = 500;
            t.quotesingle = 180;
            t.quotedblleft = 444;
            t.guillemotleft = 500;
            t.guilsinglleft = 333;
            t.guilsinglright = 333;
            t.fi = 556;
            t.fl = 556;
            t.endash = 500;
            t.dagger = 500;
            t.daggerdbl = 500;
            t.periodcentered = 250;
            t.paragraph = 453;
            t.bullet = 350;
            t.quotesinglbase = 333;
            t.quotedblbase = 444;
            t.quotedblright = 444;
            t.guillemotright = 500;
            t.ellipsis = 1000;
            t.perthousand = 1000;
            t.questiondown = 444;
            t.grave = 333;
            t.acute = 333;
            t.circumflex = 333;
            t.tilde = 333;
            t.macron = 333;
            t.breve = 333;
            t.dotaccent = 333;
            t.dieresis = 333;
            t.ring = 333;
            t.cedilla = 333;
            t.hungarumlaut = 333;
            t.ogonek = 333;
            t.caron = 333;
            t.emdash = 1000;
            t.AE = 889;
            t.ordfeminine = 276;
            t.Lslash = 611;
            t.Oslash = 722;
            t.OE = 889;
            t.ordmasculine = 310;
            t.ae = 667;
            t.dotlessi = 278;
            t.lslash = 278;
            t.oslash = 500;
            t.oe = 722;
            t.germandbls = 500;
            t.Idieresis = 333;
            t.eacute = 444;
            t.abreve = 444;
            t.uhungarumlaut = 500;
            t.ecaron = 444;
            t.Ydieresis = 722;
            t.divide = 564;
            t.Yacute = 722;
            t.Acircumflex = 722;
            t.aacute = 444;
            t.Ucircumflex = 722;
            t.yacute = 500;
            t.scommaaccent = 389;
            t.ecircumflex = 444;
            t.Uring = 722;
            t.Udieresis = 722;
            t.aogonek = 444;
            t.Uacute = 722;
            t.uogonek = 500;
            t.Edieresis = 611;
            t.Dcroat = 722;
            t.commaaccent = 250;
            t.copyright = 760;
            t.Emacron = 611;
            t.ccaron = 444;
            t.aring = 444;
            t.Ncommaaccent = 722;
            t.lacute = 278;
            t.agrave = 444;
            t.Tcommaaccent = 611;
            t.Cacute = 667;
            t.atilde = 444;
            t.Edotaccent = 611;
            t.scaron = 389;
            t.scedilla = 389;
            t.iacute = 278;
            t.lozenge = 471;
            t.Rcaron = 667;
            t.Gcommaaccent = 722;
            t.ucircumflex = 500;
            t.acircumflex = 444;
            t.Amacron = 722;
            t.rcaron = 333;
            t.ccedilla = 444;
            t.Zdotaccent = 611;
            t.Thorn = 556;
            t.Omacron = 722;
            t.Racute = 667;
            t.Sacute = 556;
            t.dcaron = 588;
            t.Umacron = 722;
            t.uring = 500;
            t.threesuperior = 300;
            t.Ograve = 722;
            t.Agrave = 722;
            t.Abreve = 722;
            t.multiply = 564;
            t.uacute = 500;
            t.Tcaron = 611;
            t.partialdiff = 476;
            t.ydieresis = 500;
            t.Nacute = 722;
            t.icircumflex = 278;
            t.Ecircumflex = 611;
            t.adieresis = 444;
            t.edieresis = 444;
            t.cacute = 444;
            t.nacute = 500;
            t.umacron = 500;
            t.Ncaron = 722;
            t.Iacute = 333;
            t.plusminus = 564;
            t.brokenbar = 200;
            t.registered = 760;
            t.Gbreve = 722;
            t.Idotaccent = 333;
            t.summation = 600;
            t.Egrave = 611;
            t.racute = 333;
            t.omacron = 500;
            t.Zacute = 611;
            t.Zcaron = 611;
            t.greaterequal = 549;
            t.Eth = 722;
            t.Ccedilla = 667;
            t.lcommaaccent = 278;
            t.tcaron = 326;
            t.eogonek = 444;
            t.Uogonek = 722;
            t.Aacute = 722;
            t.Adieresis = 722;
            t.egrave = 444;
            t.zacute = 444;
            t.iogonek = 278;
            t.Oacute = 722;
            t.oacute = 500;
            t.amacron = 444;
            t.sacute = 389;
            t.idieresis = 278;
            t.Ocircumflex = 722;
            t.Ugrave = 722;
            t.Delta = 612;
            t.thorn = 500;
            t.twosuperior = 300;
            t.Odieresis = 722;
            t.mu = 500;
            t.igrave = 278;
            t.ohungarumlaut = 500;
            t.Eogonek = 611;
            t.dcroat = 500;
            t.threequarters = 750;
            t.Scedilla = 556;
            t.lcaron = 344;
            t.Kcommaaccent = 722;
            t.Lacute = 611;
            t.trademark = 980;
            t.edotaccent = 444;
            t.Igrave = 333;
            t.Imacron = 333;
            t.Lcaron = 611;
            t.onehalf = 750;
            t.lessequal = 549;
            t.ocircumflex = 500;
            t.ntilde = 500;
            t.Uhungarumlaut = 722;
            t.Eacute = 611;
            t.emacron = 444;
            t.gbreve = 500;
            t.onequarter = 750;
            t.Scaron = 556;
            t.Scommaaccent = 556;
            t.Ohungarumlaut = 722;
            t.degree = 400;
            t.ograve = 500;
            t.Ccaron = 667;
            t.ugrave = 500;
            t.radical = 453;
            t.Dcaron = 722;
            t.rcommaaccent = 333;
            t.Ntilde = 722;
            t.otilde = 500;
            t.Rcommaaccent = 667;
            t.Lcommaaccent = 611;
            t.Atilde = 722;
            t.Aogonek = 722;
            t.Aring = 722;
            t.Otilde = 722;
            t.zdotaccent = 444;
            t.Ecaron = 611;
            t.Iogonek = 333;
            t.kcommaaccent = 500;
            t.minus = 564;
            t.Icircumflex = 333;
            t.ncaron = 500;
            t.tcommaaccent = 278;
            t.logicalnot = 564;
            t.odieresis = 500;
            t.udieresis = 500;
            t.notequal = 549;
            t.gcommaaccent = 500;
            t.eth = 500;
            t.zcaron = 444;
            t.ncommaaccent = 500;
            t.onesuperior = 300;
            t.imacron = 278;
            t.Euro = 500;
          });
          t["Times-Bold"] = (0, _core_utils.getLookupTableFactory)(function (
            t
          ) {
            t.space = 250;
            t.exclam = 333;
            t.quotedbl = 555;
            t.numbersign = 500;
            t.dollar = 500;
            t.percent = 1000;
            t.ampersand = 833;
            t.quoteright = 333;
            t.parenleft = 333;
            t.parenright = 333;
            t.asterisk = 500;
            t.plus = 570;
            t.comma = 250;
            t.hyphen = 333;
            t.period = 250;
            t.slash = 278;
            t.zero = 500;
            t.one = 500;
            t.two = 500;
            t.three = 500;
            t.four = 500;
            t.five = 500;
            t.six = 500;
            t.seven = 500;
            t.eight = 500;
            t.nine = 500;
            t.colon = 333;
            t.semicolon = 333;
            t.less = 570;
            t.equal = 570;
            t.greater = 570;
            t.question = 500;
            t.at = 930;
            t.A = 722;
            t.B = 667;
            t.C = 722;
            t.D = 722;
            t.E = 667;
            t.F = 611;
            t.G = 778;
            t.H = 778;
            t.I = 389;
            t.J = 500;
            t.K = 778;
            t.L = 667;
            t.M = 944;
            t.N = 722;
            t.O = 778;
            t.P = 611;
            t.Q = 778;
            t.R = 722;
            t.S = 556;
            t.T = 667;
            t.U = 722;
            t.V = 722;
            t.W = 1000;
            t.X = 722;
            t.Y = 722;
            t.Z = 667;
            t.bracketleft = 333;
            t.backslash = 278;
            t.bracketright = 333;
            t.asciicircum = 581;
            t.underscore = 500;
            t.quoteleft = 333;
            t.a = 500;
            t.b = 556;
            t.c = 444;
            t.d = 556;
            t.e = 444;
            t.f = 333;
            t.g = 500;
            t.h = 556;
            t.i = 278;
            t.j = 333;
            t.k = 556;
            t.l = 278;
            t.m = 833;
            t.n = 556;
            t.o = 500;
            t.p = 556;
            t.q = 556;
            t.r = 444;
            t.s = 389;
            t.t = 333;
            t.u = 556;
            t.v = 500;
            t.w = 722;
            t.x = 500;
            t.y = 500;
            t.z = 444;
            t.braceleft = 394;
            t.bar = 220;
            t.braceright = 394;
            t.asciitilde = 520;
            t.exclamdown = 333;
            t.cent = 500;
            t.sterling = 500;
            t.fraction = 167;
            t.yen = 500;
            t.florin = 500;
            t.section = 500;
            t.currency = 500;
            t.quotesingle = 278;
            t.quotedblleft = 500;
            t.guillemotleft = 500;
            t.guilsinglleft = 333;
            t.guilsinglright = 333;
            t.fi = 556;
            t.fl = 556;
            t.endash = 500;
            t.dagger = 500;
            t.daggerdbl = 500;
            t.periodcentered = 250;
            t.paragraph = 540;
            t.bullet = 350;
            t.quotesinglbase = 333;
            t.quotedblbase = 500;
            t.quotedblright = 500;
            t.guillemotright = 500;
            t.ellipsis = 1000;
            t.perthousand = 1000;
            t.questiondown = 500;
            t.grave = 333;
            t.acute = 333;
            t.circumflex = 333;
            t.tilde = 333;
            t.macron = 333;
            t.breve = 333;
            t.dotaccent = 333;
            t.dieresis = 333;
            t.ring = 333;
            t.cedilla = 333;
            t.hungarumlaut = 333;
            t.ogonek = 333;
            t.caron = 333;
            t.emdash = 1000;
            t.AE = 1000;
            t.ordfeminine = 300;
            t.Lslash = 667;
            t.Oslash = 778;
            t.OE = 1000;
            t.ordmasculine = 330;
            t.ae = 722;
            t.dotlessi = 278;
            t.lslash = 278;
            t.oslash = 500;
            t.oe = 722;
            t.germandbls = 556;
            t.Idieresis = 389;
            t.eacute = 444;
            t.abreve = 500;
            t.uhungarumlaut = 556;
            t.ecaron = 444;
            t.Ydieresis = 722;
            t.divide = 570;
            t.Yacute = 722;
            t.Acircumflex = 722;
            t.aacute = 500;
            t.Ucircumflex = 722;
            t.yacute = 500;
            t.scommaaccent = 389;
            t.ecircumflex = 444;
            t.Uring = 722;
            t.Udieresis = 722;
            t.aogonek = 500;
            t.Uacute = 722;
            t.uogonek = 556;
            t.Edieresis = 667;
            t.Dcroat = 722;
            t.commaaccent = 250;
            t.copyright = 747;
            t.Emacron = 667;
            t.ccaron = 444;
            t.aring = 500;
            t.Ncommaaccent = 722;
            t.lacute = 278;
            t.agrave = 500;
            t.Tcommaaccent = 667;
            t.Cacute = 722;
            t.atilde = 500;
            t.Edotaccent = 667;
            t.scaron = 389;
            t.scedilla = 389;
            t.iacute = 278;
            t.lozenge = 494;
            t.Rcaron = 722;
            t.Gcommaaccent = 778;
            t.ucircumflex = 556;
            t.acircumflex = 500;
            t.Amacron = 722;
            t.rcaron = 444;
            t.ccedilla = 444;
            t.Zdotaccent = 667;
            t.Thorn = 611;
            t.Omacron = 778;
            t.Racute = 722;
            t.Sacute = 556;
            t.dcaron = 672;
            t.Umacron = 722;
            t.uring = 556;
            t.threesuperior = 300;
            t.Ograve = 778;
            t.Agrave = 722;
            t.Abreve = 722;
            t.multiply = 570;
            t.uacute = 556;
            t.Tcaron = 667;
            t.partialdiff = 494;
            t.ydieresis = 500;
            t.Nacute = 722;
            t.icircumflex = 278;
            t.Ecircumflex = 667;
            t.adieresis = 500;
            t.edieresis = 444;
            t.cacute = 444;
            t.nacute = 556;
            t.umacron = 556;
            t.Ncaron = 722;
            t.Iacute = 389;
            t.plusminus = 570;
            t.brokenbar = 220;
            t.registered = 747;
            t.Gbreve = 778;
            t.Idotaccent = 389;
            t.summation = 600;
            t.Egrave = 667;
            t.racute = 444;
            t.omacron = 500;
            t.Zacute = 667;
            t.Zcaron = 667;
            t.greaterequal = 549;
            t.Eth = 722;
            t.Ccedilla = 722;
            t.lcommaaccent = 278;
            t.tcaron = 416;
            t.eogonek = 444;
            t.Uogonek = 722;
            t.Aacute = 722;
            t.Adieresis = 722;
            t.egrave = 444;
            t.zacute = 444;
            t.iogonek = 278;
            t.Oacute = 778;
            t.oacute = 500;
            t.amacron = 500;
            t.sacute = 389;
            t.idieresis = 278;
            t.Ocircumflex = 778;
            t.Ugrave = 722;
            t.Delta = 612;
            t.thorn = 556;
            t.twosuperior = 300;
            t.Odieresis = 778;
            t.mu = 556;
            t.igrave = 278;
            t.ohungarumlaut = 500;
            t.Eogonek = 667;
            t.dcroat = 556;
            t.threequarters = 750;
            t.Scedilla = 556;
            t.lcaron = 394;
            t.Kcommaaccent = 778;
            t.Lacute = 667;
            t.trademark = 1000;
            t.edotaccent = 444;
            t.Igrave = 389;
            t.Imacron = 389;
            t.Lcaron = 667;
            t.onehalf = 750;
            t.lessequal = 549;
            t.ocircumflex = 500;
            t.ntilde = 556;
            t.Uhungarumlaut = 722;
            t.Eacute = 667;
            t.emacron = 444;
            t.gbreve = 500;
            t.onequarter = 750;
            t.Scaron = 556;
            t.Scommaaccent = 556;
            t.Ohungarumlaut = 778;
            t.degree = 400;
            t.ograve = 500;
            t.Ccaron = 722;
            t.ugrave = 556;
            t.radical = 549;
            t.Dcaron = 722;
            t.rcommaaccent = 444;
            t.Ntilde = 722;
            t.otilde = 500;
            t.Rcommaaccent = 722;
            t.Lcommaaccent = 667;
            t.Atilde = 722;
            t.Aogonek = 722;
            t.Aring = 722;
            t.Otilde = 778;
            t.zdotaccent = 444;
            t.Ecaron = 667;
            t.Iogonek = 389;
            t.kcommaaccent = 556;
            t.minus = 570;
            t.Icircumflex = 389;
            t.ncaron = 556;
            t.tcommaaccent = 333;
            t.logicalnot = 570;
            t.odieresis = 500;
            t.udieresis = 556;
            t.notequal = 549;
            t.gcommaaccent = 500;
            t.eth = 500;
            t.zcaron = 444;
            t.ncommaaccent = 556;
            t.onesuperior = 300;
            t.imacron = 278;
            t.Euro = 500;
          });
          t["Times-BoldItalic"] = (0, _core_utils.getLookupTableFactory)(
            function (t) {
              t.space = 250;
              t.exclam = 389;
              t.quotedbl = 555;
              t.numbersign = 500;
              t.dollar = 500;
              t.percent = 833;
              t.ampersand = 778;
              t.quoteright = 333;
              t.parenleft = 333;
              t.parenright = 333;
              t.asterisk = 500;
              t.plus = 570;
              t.comma = 250;
              t.hyphen = 333;
              t.period = 250;
              t.slash = 278;
              t.zero = 500;
              t.one = 500;
              t.two = 500;
              t.three = 500;
              t.four = 500;
              t.five = 500;
              t.six = 500;
              t.seven = 500;
              t.eight = 500;
              t.nine = 500;
              t.colon = 333;
              t.semicolon = 333;
              t.less = 570;
              t.equal = 570;
              t.greater = 570;
              t.question = 500;
              t.at = 832;
              t.A = 667;
              t.B = 667;
              t.C = 667;
              t.D = 722;
              t.E = 667;
              t.F = 667;
              t.G = 722;
              t.H = 778;
              t.I = 389;
              t.J = 500;
              t.K = 667;
              t.L = 611;
              t.M = 889;
              t.N = 722;
              t.O = 722;
              t.P = 611;
              t.Q = 722;
              t.R = 667;
              t.S = 556;
              t.T = 611;
              t.U = 722;
              t.V = 667;
              t.W = 889;
              t.X = 667;
              t.Y = 611;
              t.Z = 611;
              t.bracketleft = 333;
              t.backslash = 278;
              t.bracketright = 333;
              t.asciicircum = 570;
              t.underscore = 500;
              t.quoteleft = 333;
              t.a = 500;
              t.b = 500;
              t.c = 444;
              t.d = 500;
              t.e = 444;
              t.f = 333;
              t.g = 500;
              t.h = 556;
              t.i = 278;
              t.j = 278;
              t.k = 500;
              t.l = 278;
              t.m = 778;
              t.n = 556;
              t.o = 500;
              t.p = 500;
              t.q = 500;
              t.r = 389;
              t.s = 389;
              t.t = 278;
              t.u = 556;
              t.v = 444;
              t.w = 667;
              t.x = 500;
              t.y = 444;
              t.z = 389;
              t.braceleft = 348;
              t.bar = 220;
              t.braceright = 348;
              t.asciitilde = 570;
              t.exclamdown = 389;
              t.cent = 500;
              t.sterling = 500;
              t.fraction = 167;
              t.yen = 500;
              t.florin = 500;
              t.section = 500;
              t.currency = 500;
              t.quotesingle = 278;
              t.quotedblleft = 500;
              t.guillemotleft = 500;
              t.guilsinglleft = 333;
              t.guilsinglright = 333;
              t.fi = 556;
              t.fl = 556;
              t.endash = 500;
              t.dagger = 500;
              t.daggerdbl = 500;
              t.periodcentered = 250;
              t.paragraph = 500;
              t.bullet = 350;
              t.quotesinglbase = 333;
              t.quotedblbase = 500;
              t.quotedblright = 500;
              t.guillemotright = 500;
              t.ellipsis = 1000;
              t.perthousand = 1000;
              t.questiondown = 500;
              t.grave = 333;
              t.acute = 333;
              t.circumflex = 333;
              t.tilde = 333;
              t.macron = 333;
              t.breve = 333;
              t.dotaccent = 333;
              t.dieresis = 333;
              t.ring = 333;
              t.cedilla = 333;
              t.hungarumlaut = 333;
              t.ogonek = 333;
              t.caron = 333;
              t.emdash = 1000;
              t.AE = 944;
              t.ordfeminine = 266;
              t.Lslash = 611;
              t.Oslash = 722;
              t.OE = 944;
              t.ordmasculine = 300;
              t.ae = 722;
              t.dotlessi = 278;
              t.lslash = 278;
              t.oslash = 500;
              t.oe = 722;
              t.germandbls = 500;
              t.Idieresis = 389;
              t.eacute = 444;
              t.abreve = 500;
              t.uhungarumlaut = 556;
              t.ecaron = 444;
              t.Ydieresis = 611;
              t.divide = 570;
              t.Yacute = 611;
              t.Acircumflex = 667;
              t.aacute = 500;
              t.Ucircumflex = 722;
              t.yacute = 444;
              t.scommaaccent = 389;
              t.ecircumflex = 444;
              t.Uring = 722;
              t.Udieresis = 722;
              t.aogonek = 500;
              t.Uacute = 722;
              t.uogonek = 556;
              t.Edieresis = 667;
              t.Dcroat = 722;
              t.commaaccent = 250;
              t.copyright = 747;
              t.Emacron = 667;
              t.ccaron = 444;
              t.aring = 500;
              t.Ncommaaccent = 722;
              t.lacute = 278;
              t.agrave = 500;
              t.Tcommaaccent = 611;
              t.Cacute = 667;
              t.atilde = 500;
              t.Edotaccent = 667;
              t.scaron = 389;
              t.scedilla = 389;
              t.iacute = 278;
              t.lozenge = 494;
              t.Rcaron = 667;
              t.Gcommaaccent = 722;
              t.ucircumflex = 556;
              t.acircumflex = 500;
              t.Amacron = 667;
              t.rcaron = 389;
              t.ccedilla = 444;
              t.Zdotaccent = 611;
              t.Thorn = 611;
              t.Omacron = 722;
              t.Racute = 667;
              t.Sacute = 556;
              t.dcaron = 608;
              t.Umacron = 722;
              t.uring = 556;
              t.threesuperior = 300;
              t.Ograve = 722;
              t.Agrave = 667;
              t.Abreve = 667;
              t.multiply = 570;
              t.uacute = 556;
              t.Tcaron = 611;
              t.partialdiff = 494;
              t.ydieresis = 444;
              t.Nacute = 722;
              t.icircumflex = 278;
              t.Ecircumflex = 667;
              t.adieresis = 500;
              t.edieresis = 444;
              t.cacute = 444;
              t.nacute = 556;
              t.umacron = 556;
              t.Ncaron = 722;
              t.Iacute = 389;
              t.plusminus = 570;
              t.brokenbar = 220;
              t.registered = 747;
              t.Gbreve = 722;
              t.Idotaccent = 389;
              t.summation = 600;
              t.Egrave = 667;
              t.racute = 389;
              t.omacron = 500;
              t.Zacute = 611;
              t.Zcaron = 611;
              t.greaterequal = 549;
              t.Eth = 722;
              t.Ccedilla = 667;
              t.lcommaaccent = 278;
              t.tcaron = 366;
              t.eogonek = 444;
              t.Uogonek = 722;
              t.Aacute = 667;
              t.Adieresis = 667;
              t.egrave = 444;
              t.zacute = 389;
              t.iogonek = 278;
              t.Oacute = 722;
              t.oacute = 500;
              t.amacron = 500;
              t.sacute = 389;
              t.idieresis = 278;
              t.Ocircumflex = 722;
              t.Ugrave = 722;
              t.Delta = 612;
              t.thorn = 500;
              t.twosuperior = 300;
              t.Odieresis = 722;
              t.mu = 576;
              t.igrave = 278;
              t.ohungarumlaut = 500;
              t.Eogonek = 667;
              t.dcroat = 500;
              t.threequarters = 750;
              t.Scedilla = 556;
              t.lcaron = 382;
              t.Kcommaaccent = 667;
              t.Lacute = 611;
              t.trademark = 1000;
              t.edotaccent = 444;
              t.Igrave = 389;
              t.Imacron = 389;
              t.Lcaron = 611;
              t.onehalf = 750;
              t.lessequal = 549;
              t.ocircumflex = 500;
              t.ntilde = 556;
              t.Uhungarumlaut = 722;
              t.Eacute = 667;
              t.emacron = 444;
              t.gbreve = 500;
              t.onequarter = 750;
              t.Scaron = 556;
              t.Scommaaccent = 556;
              t.Ohungarumlaut = 722;
              t.degree = 400;
              t.ograve = 500;
              t.Ccaron = 667;
              t.ugrave = 556;
              t.radical = 549;
              t.Dcaron = 722;
              t.rcommaaccent = 389;
              t.Ntilde = 722;
              t.otilde = 500;
              t.Rcommaaccent = 667;
              t.Lcommaaccent = 611;
              t.Atilde = 667;
              t.Aogonek = 667;
              t.Aring = 667;
              t.Otilde = 722;
              t.zdotaccent = 389;
              t.Ecaron = 667;
              t.Iogonek = 389;
              t.kcommaaccent = 500;
              t.minus = 606;
              t.Icircumflex = 389;
              t.ncaron = 556;
              t.tcommaaccent = 278;
              t.logicalnot = 606;
              t.odieresis = 500;
              t.udieresis = 556;
              t.notequal = 549;
              t.gcommaaccent = 500;
              t.eth = 500;
              t.zcaron = 389;
              t.ncommaaccent = 556;
              t.onesuperior = 300;
              t.imacron = 278;
              t.Euro = 500;
            }
          );
          t["Times-Italic"] = (0, _core_utils.getLookupTableFactory)(function (
            t
          ) {
            t.space = 250;
            t.exclam = 333;
            t.quotedbl = 420;
            t.numbersign = 500;
            t.dollar = 500;
            t.percent = 833;
            t.ampersand = 778;
            t.quoteright = 333;
            t.parenleft = 333;
            t.parenright = 333;
            t.asterisk = 500;
            t.plus = 675;
            t.comma = 250;
            t.hyphen = 333;
            t.period = 250;
            t.slash = 278;
            t.zero = 500;
            t.one = 500;
            t.two = 500;
            t.three = 500;
            t.four = 500;
            t.five = 500;
            t.six = 500;
            t.seven = 500;
            t.eight = 500;
            t.nine = 500;
            t.colon = 333;
            t.semicolon = 333;
            t.less = 675;
            t.equal = 675;
            t.greater = 675;
            t.question = 500;
            t.at = 920;
            t.A = 611;
            t.B = 611;
            t.C = 667;
            t.D = 722;
            t.E = 611;
            t.F = 611;
            t.G = 722;
            t.H = 722;
            t.I = 333;
            t.J = 444;
            t.K = 667;
            t.L = 556;
            t.M = 833;
            t.N = 667;
            t.O = 722;
            t.P = 611;
            t.Q = 722;
            t.R = 611;
            t.S = 500;
            t.T = 556;
            t.U = 722;
            t.V = 611;
            t.W = 833;
            t.X = 611;
            t.Y = 556;
            t.Z = 556;
            t.bracketleft = 389;
            t.backslash = 278;
            t.bracketright = 389;
            t.asciicircum = 422;
            t.underscore = 500;
            t.quoteleft = 333;
            t.a = 500;
            t.b = 500;
            t.c = 444;
            t.d = 500;
            t.e = 444;
            t.f = 278;
            t.g = 500;
            t.h = 500;
            t.i = 278;
            t.j = 278;
            t.k = 444;
            t.l = 278;
            t.m = 722;
            t.n = 500;
            t.o = 500;
            t.p = 500;
            t.q = 500;
            t.r = 389;
            t.s = 389;
            t.t = 278;
            t.u = 500;
            t.v = 444;
            t.w = 667;
            t.x = 444;
            t.y = 444;
            t.z = 389;
            t.braceleft = 400;
            t.bar = 275;
            t.braceright = 400;
            t.asciitilde = 541;
            t.exclamdown = 389;
            t.cent = 500;
            t.sterling = 500;
            t.fraction = 167;
            t.yen = 500;
            t.florin = 500;
            t.section = 500;
            t.currency = 500;
            t.quotesingle = 214;
            t.quotedblleft = 556;
            t.guillemotleft = 500;
            t.guilsinglleft = 333;
            t.guilsinglright = 333;
            t.fi = 500;
            t.fl = 500;
            t.endash = 500;
            t.dagger = 500;
            t.daggerdbl = 500;
            t.periodcentered = 250;
            t.paragraph = 523;
            t.bullet = 350;
            t.quotesinglbase = 333;
            t.quotedblbase = 556;
            t.quotedblright = 556;
            t.guillemotright = 500;
            t.ellipsis = 889;
            t.perthousand = 1000;
            t.questiondown = 500;
            t.grave = 333;
            t.acute = 333;
            t.circumflex = 333;
            t.tilde = 333;
            t.macron = 333;
            t.breve = 333;
            t.dotaccent = 333;
            t.dieresis = 333;
            t.ring = 333;
            t.cedilla = 333;
            t.hungarumlaut = 333;
            t.ogonek = 333;
            t.caron = 333;
            t.emdash = 889;
            t.AE = 889;
            t.ordfeminine = 276;
            t.Lslash = 556;
            t.Oslash = 722;
            t.OE = 944;
            t.ordmasculine = 310;
            t.ae = 667;
            t.dotlessi = 278;
            t.lslash = 278;
            t.oslash = 500;
            t.oe = 667;
            t.germandbls = 500;
            t.Idieresis = 333;
            t.eacute = 444;
            t.abreve = 500;
            t.uhungarumlaut = 500;
            t.ecaron = 444;
            t.Ydieresis = 556;
            t.divide = 675;
            t.Yacute = 556;
            t.Acircumflex = 611;
            t.aacute = 500;
            t.Ucircumflex = 722;
            t.yacute = 444;
            t.scommaaccent = 389;
            t.ecircumflex = 444;
            t.Uring = 722;
            t.Udieresis = 722;
            t.aogonek = 500;
            t.Uacute = 722;
            t.uogonek = 500;
            t.Edieresis = 611;
            t.Dcroat = 722;
            t.commaaccent = 250;
            t.copyright = 760;
            t.Emacron = 611;
            t.ccaron = 444;
            t.aring = 500;
            t.Ncommaaccent = 667;
            t.lacute = 278;
            t.agrave = 500;
            t.Tcommaaccent = 556;
            t.Cacute = 667;
            t.atilde = 500;
            t.Edotaccent = 611;
            t.scaron = 389;
            t.scedilla = 389;
            t.iacute = 278;
            t.lozenge = 471;
            t.Rcaron = 611;
            t.Gcommaaccent = 722;
            t.ucircumflex = 500;
            t.acircumflex = 500;
            t.Amacron = 611;
            t.rcaron = 389;
            t.ccedilla = 444;
            t.Zdotaccent = 556;
            t.Thorn = 611;
            t.Omacron = 722;
            t.Racute = 611;
            t.Sacute = 500;
            t.dcaron = 544;
            t.Umacron = 722;
            t.uring = 500;
            t.threesuperior = 300;
            t.Ograve = 722;
            t.Agrave = 611;
            t.Abreve = 611;
            t.multiply = 675;
            t.uacute = 500;
            t.Tcaron = 556;
            t.partialdiff = 476;
            t.ydieresis = 444;
            t.Nacute = 667;
            t.icircumflex = 278;
            t.Ecircumflex = 611;
            t.adieresis = 500;
            t.edieresis = 444;
            t.cacute = 444;
            t.nacute = 500;
            t.umacron = 500;
            t.Ncaron = 667;
            t.Iacute = 333;
            t.plusminus = 675;
            t.brokenbar = 275;
            t.registered = 760;
            t.Gbreve = 722;
            t.Idotaccent = 333;
            t.summation = 600;
            t.Egrave = 611;
            t.racute = 389;
            t.omacron = 500;
            t.Zacute = 556;
            t.Zcaron = 556;
            t.greaterequal = 549;
            t.Eth = 722;
            t.Ccedilla = 667;
            t.lcommaaccent = 278;
            t.tcaron = 300;
            t.eogonek = 444;
            t.Uogonek = 722;
            t.Aacute = 611;
            t.Adieresis = 611;
            t.egrave = 444;
            t.zacute = 389;
            t.iogonek = 278;
            t.Oacute = 722;
            t.oacute = 500;
            t.amacron = 500;
            t.sacute = 389;
            t.idieresis = 278;
            t.Ocircumflex = 722;
            t.Ugrave = 722;
            t.Delta = 612;
            t.thorn = 500;
            t.twosuperior = 300;
            t.Odieresis = 722;
            t.mu = 500;
            t.igrave = 278;
            t.ohungarumlaut = 500;
            t.Eogonek = 611;
            t.dcroat = 500;
            t.threequarters = 750;
            t.Scedilla = 500;
            t.lcaron = 300;
            t.Kcommaaccent = 667;
            t.Lacute = 556;
            t.trademark = 980;
            t.edotaccent = 444;
            t.Igrave = 333;
            t.Imacron = 333;
            t.Lcaron = 611;
            t.onehalf = 750;
            t.lessequal = 549;
            t.ocircumflex = 500;
            t.ntilde = 500;
            t.Uhungarumlaut = 722;
            t.Eacute = 611;
            t.emacron = 444;
            t.gbreve = 500;
            t.onequarter = 750;
            t.Scaron = 500;
            t.Scommaaccent = 500;
            t.Ohungarumlaut = 722;
            t.degree = 400;
            t.ograve = 500;
            t.Ccaron = 667;
            t.ugrave = 500;
            t.radical = 453;
            t.Dcaron = 722;
            t.rcommaaccent = 389;
            t.Ntilde = 667;
            t.otilde = 500;
            t.Rcommaaccent = 611;
            t.Lcommaaccent = 556;
            t.Atilde = 611;
            t.Aogonek = 611;
            t.Aring = 611;
            t.Otilde = 722;
            t.zdotaccent = 389;
            t.Ecaron = 611;
            t.Iogonek = 333;
            t.kcommaaccent = 444;
            t.minus = 675;
            t.Icircumflex = 333;
            t.ncaron = 500;
            t.tcommaaccent = 278;
            t.logicalnot = 675;
            t.odieresis = 500;
            t.udieresis = 500;
            t.notequal = 549;
            t.gcommaaccent = 500;
            t.eth = 500;
            t.zcaron = 389;
            t.ncommaaccent = 500;
            t.onesuperior = 300;
            t.imacron = 278;
            t.Euro = 500;
          });
          t.ZapfDingbats = (0, _core_utils.getLookupTableFactory)(function (t) {
            t.space = 278;
            t.a1 = 974;
            t.a2 = 961;
            t.a202 = 974;
            t.a3 = 980;
            t.a4 = 719;
            t.a5 = 789;
            t.a119 = 790;
            t.a118 = 791;
            t.a117 = 690;
            t.a11 = 960;
            t.a12 = 939;
            t.a13 = 549;
            t.a14 = 855;
            t.a15 = 911;
            t.a16 = 933;
            t.a105 = 911;
            t.a17 = 945;
            t.a18 = 974;
            t.a19 = 755;
            t.a20 = 846;
            t.a21 = 762;
            t.a22 = 761;
            t.a23 = 571;
            t.a24 = 677;
            t.a25 = 763;
            t.a26 = 760;
            t.a27 = 759;
            t.a28 = 754;
            t.a6 = 494;
            t.a7 = 552;
            t.a8 = 537;
            t.a9 = 577;
            t.a10 = 692;
            t.a29 = 786;
            t.a30 = 788;
            t.a31 = 788;
            t.a32 = 790;
            t.a33 = 793;
            t.a34 = 794;
            t.a35 = 816;
            t.a36 = 823;
            t.a37 = 789;
            t.a38 = 841;
            t.a39 = 823;
            t.a40 = 833;
            t.a41 = 816;
            t.a42 = 831;
            t.a43 = 923;
            t.a44 = 744;
            t.a45 = 723;
            t.a46 = 749;
            t.a47 = 790;
            t.a48 = 792;
            t.a49 = 695;
            t.a50 = 776;
            t.a51 = 768;
            t.a52 = 792;
            t.a53 = 759;
            t.a54 = 707;
            t.a55 = 708;
            t.a56 = 682;
            t.a57 = 701;
            t.a58 = 826;
            t.a59 = 815;
            t.a60 = 789;
            t.a61 = 789;
            t.a62 = 707;
            t.a63 = 687;
            t.a64 = 696;
            t.a65 = 689;
            t.a66 = 786;
            t.a67 = 787;
            t.a68 = 713;
            t.a69 = 791;
            t.a70 = 785;
            t.a71 = 791;
            t.a72 = 873;
            t.a73 = 761;
            t.a74 = 762;
            t.a203 = 762;
            t.a75 = 759;
            t.a204 = 759;
            t.a76 = 892;
            t.a77 = 892;
            t.a78 = 788;
            t.a79 = 784;
            t.a81 = 438;
            t.a82 = 138;
            t.a83 = 277;
            t.a84 = 415;
            t.a97 = 392;
            t.a98 = 392;
            t.a99 = 668;
            t.a100 = 668;
            t.a89 = 390;
            t.a90 = 390;
            t.a93 = 317;
            t.a94 = 317;
            t.a91 = 276;
            t.a92 = 276;
            t.a205 = 509;
            t.a85 = 509;
            t.a206 = 410;
            t.a86 = 410;
            t.a87 = 234;
            t.a88 = 234;
            t.a95 = 334;
            t.a96 = 334;
            t.a101 = 732;
            t.a102 = 544;
            t.a103 = 544;
            t.a104 = 910;
            t.a106 = 667;
            t.a107 = 760;
            t.a108 = 760;
            t.a112 = 776;
            t.a111 = 595;
            t.a110 = 694;
            t.a109 = 626;
            t.a120 = 788;
            t.a121 = 788;
            t.a122 = 788;
            t.a123 = 788;
            t.a124 = 788;
            t.a125 = 788;
            t.a126 = 788;
            t.a127 = 788;
            t.a128 = 788;
            t.a129 = 788;
            t.a130 = 788;
            t.a131 = 788;
            t.a132 = 788;
            t.a133 = 788;
            t.a134 = 788;
            t.a135 = 788;
            t.a136 = 788;
            t.a137 = 788;
            t.a138 = 788;
            t.a139 = 788;
            t.a140 = 788;
            t.a141 = 788;
            t.a142 = 788;
            t.a143 = 788;
            t.a144 = 788;
            t.a145 = 788;
            t.a146 = 788;
            t.a147 = 788;
            t.a148 = 788;
            t.a149 = 788;
            t.a150 = 788;
            t.a151 = 788;
            t.a152 = 788;
            t.a153 = 788;
            t.a154 = 788;
            t.a155 = 788;
            t.a156 = 788;
            t.a157 = 788;
            t.a158 = 788;
            t.a159 = 788;
            t.a160 = 894;
            t.a161 = 838;
            t.a163 = 1016;
            t.a164 = 458;
            t.a196 = 748;
            t.a165 = 924;
            t.a192 = 748;
            t.a166 = 918;
            t.a167 = 927;
            t.a168 = 928;
            t.a169 = 928;
            t.a170 = 834;
            t.a171 = 873;
            t.a172 = 828;
            t.a173 = 924;
            t.a162 = 924;
            t.a174 = 917;
            t.a175 = 930;
            t.a176 = 931;
            t.a177 = 463;
            t.a178 = 883;
            t.a179 = 836;
            t.a193 = 836;
            t.a180 = 867;
            t.a199 = 867;
            t.a181 = 696;
            t.a200 = 696;
            t.a182 = 874;
            t.a201 = 874;
            t.a183 = 760;
            t.a184 = 946;
            t.a197 = 771;
            t.a185 = 865;
            t.a194 = 771;
            t.a198 = 888;
            t.a186 = 967;
            t.a195 = 888;
            t.a187 = 831;
            t.a188 = 873;
            t.a189 = 927;
            t.a190 = 970;
            t.a191 = 918;
          });
        });
        exports.getMetrics = getMetrics;
        const getFontBasicMetrics = (0, _core_utils.getLookupTableFactory)(
          function (t) {
            t.Courier = {
              ascent: 629,
              descent: -157,
              capHeight: 562,
              xHeight: -426,
            };
            t["Courier-Bold"] = {
              ascent: 629,
              descent: -157,
              capHeight: 562,
              xHeight: 439,
            };
            t["Courier-Oblique"] = {
              ascent: 629,
              descent: -157,
              capHeight: 562,
              xHeight: 426,
            };
            t["Courier-BoldOblique"] = {
              ascent: 629,
              descent: -157,
              capHeight: 562,
              xHeight: 426,
            };
            t.Helvetica = {
              ascent: 718,
              descent: -207,
              capHeight: 718,
              xHeight: 523,
            };
            t["Helvetica-Bold"] = {
              ascent: 718,
              descent: -207,
              capHeight: 718,
              xHeight: 532,
            };
            t["Helvetica-Oblique"] = {
              ascent: 718,
              descent: -207,
              capHeight: 718,
              xHeight: 523,
            };
            t["Helvetica-BoldOblique"] = {
              ascent: 718,
              descent: -207,
              capHeight: 718,
              xHeight: 532,
            };
            t["Times-Roman"] = {
              ascent: 683,
              descent: -217,
              capHeight: 662,
              xHeight: 450,
            };
            t["Times-Bold"] = {
              ascent: 683,
              descent: -217,
              capHeight: 676,
              xHeight: 461,
            };
            t["Times-Italic"] = {
              ascent: 683,
              descent: -217,
              capHeight: 653,
              xHeight: 441,
            };
            t["Times-BoldItalic"] = {
              ascent: 683,
              descent: -217,
              capHeight: 669,
              xHeight: 462,
            };
            t.Symbol = {
              ascent: Math.NaN,
              descent: Math.NaN,
              capHeight: Math.NaN,
              xHeight: Math.NaN,
            };
            t.ZapfDingbats = {
              ascent: Math.NaN,
              descent: Math.NaN,
              capHeight: Math.NaN,
              xHeight: Math.NaN,
            };
          }
        );
        exports.getFontBasicMetrics = getFontBasicMetrics;

        /***/
      },
      /* 46 */
      /***/ (__unused_webpack_module, exports) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.GlyfTable = void 0;
        const ON_CURVE_POINT = 1 << 0;
        const X_SHORT_VECTOR = 1 << 1;
        const Y_SHORT_VECTOR = 1 << 2;
        const REPEAT_FLAG = 1 << 3;
        const X_IS_SAME_OR_POSITIVE_X_SHORT_VECTOR = 1 << 4;
        const Y_IS_SAME_OR_POSITIVE_Y_SHORT_VECTOR = 1 << 5;
        const OVERLAP_SIMPLE = 1 << 6;
        const ARG_1_AND_2_ARE_WORDS = 1 << 0;
        const ARGS_ARE_XY_VALUES = 1 << 1;
        const WE_HAVE_A_SCALE = 1 << 3;
        const MORE_COMPONENTS = 1 << 5;
        const WE_HAVE_AN_X_AND_Y_SCALE = 1 << 6;
        const WE_HAVE_A_TWO_BY_TWO = 1 << 7;
        const WE_HAVE_INSTRUCTIONS = 1 << 8;
        class GlyfTable {
          constructor({
            glyfTable,
            isGlyphLocationsLong,
            locaTable,
            numGlyphs,
          }) {
            this.glyphs = [];
            const loca = new DataView(
              locaTable.buffer,
              locaTable.byteOffset,
              locaTable.byteLength
            );
            const glyf = new DataView(
              glyfTable.buffer,
              glyfTable.byteOffset,
              glyfTable.byteLength
            );
            const offsetSize = isGlyphLocationsLong ? 4 : 2;
            let prev = isGlyphLocationsLong
              ? loca.getUint32(0)
              : 2 * loca.getUint16(0);
            let pos = 0;
            for (let i = 0; i < numGlyphs; i++) {
              pos += offsetSize;
              const next = isGlyphLocationsLong
                ? loca.getUint32(pos)
                : 2 * loca.getUint16(pos);
              if (next === prev) {
                this.glyphs.push(new Glyph({}));
                continue;
              }
              const glyph = Glyph.parse(prev, glyf);
              this.glyphs.push(glyph);
              prev = next;
            }
          }
          getSize() {
            return this.glyphs.reduce((a, g) => {
              const size = g.getSize();
              return a + ((size + 3) & ~3);
            }, 0);
          }
          write() {
            const totalSize = this.getSize();
            const glyfTable = new DataView(new ArrayBuffer(totalSize));
            const isLocationLong = totalSize > 0x1fffe;
            const offsetSize = isLocationLong ? 4 : 2;
            const locaTable = new DataView(
              new ArrayBuffer((this.glyphs.length + 1) * offsetSize)
            );
            if (isLocationLong) {
              locaTable.setUint32(0, 0);
            } else {
              locaTable.setUint16(0, 0);
            }
            let pos = 0;
            let locaIndex = 0;
            for (const glyph of this.glyphs) {
              pos += glyph.write(pos, glyfTable);
              pos = (pos + 3) & ~3;
              locaIndex += offsetSize;
              if (isLocationLong) {
                locaTable.setUint32(locaIndex, pos);
              } else {
                locaTable.setUint16(locaIndex, pos >> 1);
              }
            }
            return {
              isLocationLong,
              loca: new Uint8Array(locaTable.buffer),
              glyf: new Uint8Array(glyfTable.buffer),
            };
          }
          scale(factors) {
            for (let i = 0, ii = this.glyphs.length; i < ii; i++) {
              this.glyphs[i].scale(factors[i]);
            }
          }
        }
        exports.GlyfTable = GlyfTable;
        class Glyph {
          constructor({ header = null, simple = null, composites = null }) {
            this.header = header;
            this.simple = simple;
            this.composites = composites;
          }
          static parse(pos, glyf) {
            const [read, header] = GlyphHeader.parse(pos, glyf);
            pos += read;
            if (header.numberOfContours < 0) {
              const composites = [];
              while (true) {
                const [n, composite] = CompositeGlyph.parse(pos, glyf);
                pos += n;
                composites.push(composite);
                if (!(composite.flags & MORE_COMPONENTS)) {
                  break;
                }
              }
              return new Glyph({
                header,
                composites,
              });
            }
            const simple = SimpleGlyph.parse(
              pos,
              glyf,
              header.numberOfContours
            );
            return new Glyph({
              header,
              simple,
            });
          }
          getSize() {
            if (!this.header) {
              return 0;
            }
            const size = this.simple
              ? this.simple.getSize()
              : this.composites.reduce((a, c) => a + c.getSize(), 0);
            return this.header.getSize() + size;
          }
          write(pos, buf) {
            if (!this.header) {
              return 0;
            }
            const spos = pos;
            pos += this.header.write(pos, buf);
            if (this.simple) {
              pos += this.simple.write(pos, buf);
            } else {
              for (const composite of this.composites) {
                pos += composite.write(pos, buf);
              }
            }
            return pos - spos;
          }
          scale(factor) {
            if (!this.header) {
              return;
            }
            const xMiddle = (this.header.xMin + this.header.xMax) / 2;
            this.header.scale(xMiddle, factor);
            if (this.simple) {
              this.simple.scale(xMiddle, factor);
            } else {
              for (const composite of this.composites) {
                composite.scale(xMiddle, factor);
              }
            }
          }
        }
        class GlyphHeader {
          constructor({ numberOfContours, xMin, yMin, xMax, yMax }) {
            this.numberOfContours = numberOfContours;
            this.xMin = xMin;
            this.yMin = yMin;
            this.xMax = xMax;
            this.yMax = yMax;
          }
          static parse(pos, glyf) {
            return [
              10,
              new GlyphHeader({
                numberOfContours: glyf.getInt16(pos),
                xMin: glyf.getInt16(pos + 2),
                yMin: glyf.getInt16(pos + 4),
                xMax: glyf.getInt16(pos + 6),
                yMax: glyf.getInt16(pos + 8),
              }),
            ];
          }
          getSize() {
            return 10;
          }
          write(pos, buf) {
            buf.setInt16(pos, this.numberOfContours);
            buf.setInt16(pos + 2, this.xMin);
            buf.setInt16(pos + 4, this.yMin);
            buf.setInt16(pos + 6, this.xMax);
            buf.setInt16(pos + 8, this.yMax);
            return 10;
          }
          scale(x, factor) {
            this.xMin = Math.round(x + (this.xMin - x) * factor);
            this.xMax = Math.round(x + (this.xMax - x) * factor);
          }
        }
        class Contour {
          constructor({ flags, xCoordinates, yCoordinates }) {
            this.xCoordinates = xCoordinates;
            this.yCoordinates = yCoordinates;
            this.flags = flags;
          }
        }
        class SimpleGlyph {
          constructor({ contours, instructions }) {
            this.contours = contours;
            this.instructions = instructions;
          }
          static parse(pos, glyf, numberOfContours) {
            const endPtsOfContours = [];
            for (let i = 0; i < numberOfContours; i++) {
              const endPt = glyf.getUint16(pos);
              pos += 2;
              endPtsOfContours.push(endPt);
            }
            const numberOfPt = endPtsOfContours[numberOfContours - 1] + 1;
            const instructionLength = glyf.getUint16(pos);
            pos += 2;
            const instructions = new Uint8Array(glyf).slice(
              pos,
              pos + instructionLength
            );
            pos += instructionLength;
            const flags = [];
            for (let i = 0; i < numberOfPt; pos++, i++) {
              let flag = glyf.getUint8(pos);
              flags.push(flag);
              if (flag & REPEAT_FLAG) {
                const count = glyf.getUint8(++pos);
                flag ^= REPEAT_FLAG;
                for (let m = 0; m < count; m++) {
                  flags.push(flag);
                }
                i += count;
              }
            }
            const allXCoordinates = [];
            let xCoordinates = [];
            let yCoordinates = [];
            let pointFlags = [];
            const contours = [];
            let endPtsOfContoursIndex = 0;
            let lastCoordinate = 0;
            for (let i = 0; i < numberOfPt; i++) {
              const flag = flags[i];
              if (flag & X_SHORT_VECTOR) {
                const x = glyf.getUint8(pos++);
                lastCoordinate +=
                  flag & X_IS_SAME_OR_POSITIVE_X_SHORT_VECTOR ? x : -x;
                xCoordinates.push(lastCoordinate);
              } else if (flag & X_IS_SAME_OR_POSITIVE_X_SHORT_VECTOR) {
                xCoordinates.push(lastCoordinate);
              } else {
                lastCoordinate += glyf.getInt16(pos);
                pos += 2;
                xCoordinates.push(lastCoordinate);
              }
              if (endPtsOfContours[endPtsOfContoursIndex] === i) {
                endPtsOfContoursIndex++;
                allXCoordinates.push(xCoordinates);
                xCoordinates = [];
              }
            }
            lastCoordinate = 0;
            endPtsOfContoursIndex = 0;
            for (let i = 0; i < numberOfPt; i++) {
              const flag = flags[i];
              if (flag & Y_SHORT_VECTOR) {
                const y = glyf.getUint8(pos++);
                lastCoordinate +=
                  flag & Y_IS_SAME_OR_POSITIVE_Y_SHORT_VECTOR ? y : -y;
                yCoordinates.push(lastCoordinate);
              } else if (flag & Y_IS_SAME_OR_POSITIVE_Y_SHORT_VECTOR) {
                yCoordinates.push(lastCoordinate);
              } else {
                lastCoordinate += glyf.getInt16(pos);
                pos += 2;
                yCoordinates.push(lastCoordinate);
              }
              pointFlags.push(
                (flag & ON_CURVE_POINT) | (flag & OVERLAP_SIMPLE)
              );
              if (endPtsOfContours[endPtsOfContoursIndex] === i) {
                xCoordinates = allXCoordinates[endPtsOfContoursIndex];
                endPtsOfContoursIndex++;
                contours.push(
                  new Contour({
                    flags: pointFlags,
                    xCoordinates,
                    yCoordinates,
                  })
                );
                yCoordinates = [];
                pointFlags = [];
              }
            }
            return new SimpleGlyph({
              contours,
              instructions,
            });
          }
          getSize() {
            let size = this.contours.length * 2 + 2 + this.instructions.length;
            let lastX = 0;
            let lastY = 0;
            for (const contour of this.contours) {
              size += contour.flags.length;
              for (let i = 0, ii = contour.xCoordinates.length; i < ii; i++) {
                const x = contour.xCoordinates[i];
                const y = contour.yCoordinates[i];
                let abs = Math.abs(x - lastX);
                if (abs > 255) {
                  size += 2;
                } else if (abs > 0) {
                  size += 1;
                }
                lastX = x;
                abs = Math.abs(y - lastY);
                if (abs > 255) {
                  size += 2;
                } else if (abs > 0) {
                  size += 1;
                }
                lastY = y;
              }
            }
            return size;
          }
          write(pos, buf) {
            const spos = pos;
            const xCoordinates = [];
            const yCoordinates = [];
            const flags = [];
            let lastX = 0;
            let lastY = 0;
            for (const contour of this.contours) {
              for (let i = 0, ii = contour.xCoordinates.length; i < ii; i++) {
                let flag = contour.flags[i];
                const x = contour.xCoordinates[i];
                let delta = x - lastX;
                if (delta === 0) {
                  flag |= X_IS_SAME_OR_POSITIVE_X_SHORT_VECTOR;
                  xCoordinates.push(0);
                } else {
                  const abs = Math.abs(delta);
                  if (abs <= 255) {
                    flag |=
                      delta >= 0
                        ? X_SHORT_VECTOR | X_IS_SAME_OR_POSITIVE_X_SHORT_VECTOR
                        : X_SHORT_VECTOR;
                    xCoordinates.push(abs);
                  } else {
                    xCoordinates.push(delta);
                  }
                }
                lastX = x;
                const y = contour.yCoordinates[i];
                delta = y - lastY;
                if (delta === 0) {
                  flag |= Y_IS_SAME_OR_POSITIVE_Y_SHORT_VECTOR;
                  yCoordinates.push(0);
                } else {
                  const abs = Math.abs(delta);
                  if (abs <= 255) {
                    flag |=
                      delta >= 0
                        ? Y_SHORT_VECTOR | Y_IS_SAME_OR_POSITIVE_Y_SHORT_VECTOR
                        : Y_SHORT_VECTOR;
                    yCoordinates.push(abs);
                  } else {
                    yCoordinates.push(delta);
                  }
                }
                lastY = y;
                flags.push(flag);
              }
              buf.setUint16(pos, xCoordinates.length - 1);
              pos += 2;
            }
            buf.setUint16(pos, this.instructions.length);
            pos += 2;
            if (this.instructions.length) {
              new Uint8Array(buf.buffer, 0, buf.buffer.byteLength).set(
                this.instructions,
                pos
              );
              pos += this.instructions.length;
            }
            for (const flag of flags) {
              buf.setUint8(pos++, flag);
            }
            for (let i = 0, ii = xCoordinates.length; i < ii; i++) {
              const x = xCoordinates[i];
              const flag = flags[i];
              if (flag & X_SHORT_VECTOR) {
                buf.setUint8(pos++, x);
              } else if (!(flag & X_IS_SAME_OR_POSITIVE_X_SHORT_VECTOR)) {
                buf.setInt16(pos, x);
                pos += 2;
              }
            }
            for (let i = 0, ii = yCoordinates.length; i < ii; i++) {
              const y = yCoordinates[i];
              const flag = flags[i];
              if (flag & Y_SHORT_VECTOR) {
                buf.setUint8(pos++, y);
              } else if (!(flag & Y_IS_SAME_OR_POSITIVE_Y_SHORT_VECTOR)) {
                buf.setInt16(pos, y);
                pos += 2;
              }
            }
            return pos - spos;
          }
          scale(x, factor) {
            for (const contour of this.contours) {
              if (contour.xCoordinates.length === 0) {
                continue;
              }
              for (let i = 0, ii = contour.xCoordinates.length; i < ii; i++) {
                contour.xCoordinates[i] = Math.round(
                  x + (contour.xCoordinates[i] - x) * factor
                );
              }
            }
          }
        }
        class CompositeGlyph {
          constructor({
            flags,
            glyphIndex,
            argument1,
            argument2,
            transf,
            instructions,
          }) {
            this.flags = flags;
            this.glyphIndex = glyphIndex;
            this.argument1 = argument1;
            this.argument2 = argument2;
            this.transf = transf;
            this.instructions = instructions;
          }
          static parse(pos, glyf) {
            const spos = pos;
            const transf = [];
            let flags = glyf.getUint16(pos);
            const glyphIndex = glyf.getUint16(pos + 2);
            pos += 4;
            let argument1, argument2;
            if (flags & ARG_1_AND_2_ARE_WORDS) {
              if (flags & ARGS_ARE_XY_VALUES) {
                argument1 = glyf.getInt16(pos);
                argument2 = glyf.getInt16(pos + 2);
              } else {
                argument1 = glyf.getUint16(pos);
                argument2 = glyf.getUint16(pos + 2);
              }
              pos += 4;
              flags ^= ARG_1_AND_2_ARE_WORDS;
            } else {
              if (flags & ARGS_ARE_XY_VALUES) {
                argument1 = glyf.getInt8(pos);
                argument2 = glyf.getInt8(pos + 1);
              } else {
                argument1 = glyf.getUint8(pos);
                argument2 = glyf.getUint8(pos + 1);
              }
              pos += 2;
            }
            if (flags & WE_HAVE_A_SCALE) {
              transf.push(glyf.getUint16(pos));
              pos += 2;
            } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {
              transf.push(glyf.getUint16(pos), glyf.getUint16(pos + 2));
              pos += 4;
            } else if (flags & WE_HAVE_A_TWO_BY_TWO) {
              transf.push(
                glyf.getUint16(pos),
                glyf.getUint16(pos + 2),
                glyf.getUint16(pos + 4),
                glyf.getUint16(pos + 6)
              );
              pos += 8;
            }
            let instructions = null;
            if (flags & WE_HAVE_INSTRUCTIONS) {
              const instructionLength = glyf.getUint16(pos);
              pos += 2;
              instructions = new Uint8Array(glyf).slice(
                pos,
                pos + instructionLength
              );
              pos += instructionLength;
            }
            return [
              pos - spos,
              new CompositeGlyph({
                flags,
                glyphIndex,
                argument1,
                argument2,
                transf,
                instructions,
              }),
            ];
          }
          getSize() {
            let size = 2 + 2 + this.transf.length * 2;
            if (this.flags & WE_HAVE_INSTRUCTIONS) {
              size += 2 + this.instructions.length;
            }
            size += 2;
            if (this.flags & 2) {
              if (
                !(
                  this.argument1 >= -128 &&
                  this.argument1 <= 127 &&
                  this.argument2 >= -128 &&
                  this.argument2 <= 127
                )
              ) {
                size += 2;
              }
            } else if (
              !(
                this.argument1 >= 0 &&
                this.argument1 <= 255 &&
                this.argument2 >= 0 &&
                this.argument2 <= 255
              )
            ) {
              size += 2;
            }
            return size;
          }
          write(pos, buf) {
            const spos = pos;
            if (this.flags & ARGS_ARE_XY_VALUES) {
              if (
                !(
                  this.argument1 >= -128 &&
                  this.argument1 <= 127 &&
                  this.argument2 >= -128 &&
                  this.argument2 <= 127
                )
              ) {
                this.flags |= ARG_1_AND_2_ARE_WORDS;
              }
            } else if (
              !(
                this.argument1 >= 0 &&
                this.argument1 <= 255 &&
                this.argument2 >= 0 &&
                this.argument2 <= 255
              )
            ) {
              this.flags |= ARG_1_AND_2_ARE_WORDS;
            }
            buf.setUint16(pos, this.flags);
            buf.setUint16(pos + 2, this.glyphIndex);
            pos += 4;
            if (this.flags & ARG_1_AND_2_ARE_WORDS) {
              if (this.flags & ARGS_ARE_XY_VALUES) {
                buf.setInt16(pos, this.argument1);
                buf.setInt16(pos + 2, this.argument2);
              } else {
                buf.setUint16(pos, this.argument1);
                buf.setUint16(pos + 2, this.argument2);
              }
              pos += 4;
            } else {
              buf.setUint8(pos, this.argument1);
              buf.setUint8(pos + 1, this.argument2);
              pos += 2;
            }
            if (this.flags & WE_HAVE_INSTRUCTIONS) {
              buf.setUint16(pos, this.instructions.length);
              pos += 2;
              if (this.instructions.length) {
                new Uint8Array(buf.buffer, 0, buf.buffer.byteLength).set(
                  this.instructions,
                  pos
                );
                pos += this.instructions.length;
              }
            }
            return pos - spos;
          }
          scale(x, factor) {}
        }

        /***/
      },
      /* 47 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.OpenTypeFileBuilder = void 0;
        var _core_utils = __w_pdfjs_require__(3);
        var _util = __w_pdfjs_require__(2);
        function writeInt16(dest, offset, num) {
          dest[offset] = (num >> 8) & 0xff;
          dest[offset + 1] = num & 0xff;
        }
        function writeInt32(dest, offset, num) {
          dest[offset] = (num >> 24) & 0xff;
          dest[offset + 1] = (num >> 16) & 0xff;
          dest[offset + 2] = (num >> 8) & 0xff;
          dest[offset + 3] = num & 0xff;
        }
        function writeData(dest, offset, data) {
          if (data instanceof Uint8Array) {
            dest.set(data, offset);
          } else if (typeof data === "string") {
            for (let i = 0, ii = data.length; i < ii; i++) {
              dest[offset++] = data.charCodeAt(i) & 0xff;
            }
          } else {
            for (const num of data) {
              dest[offset++] = num & 0xff;
            }
          }
        }
        const OTF_HEADER_SIZE = 12;
        const OTF_TABLE_ENTRY_SIZE = 16;
        class OpenTypeFileBuilder {
          constructor(sfnt) {
            this.sfnt = sfnt;
            this.tables = Object.create(null);
          }
          static getSearchParams(entriesCount, entrySize) {
            let maxPower2 = 1,
              log2 = 0;
            while ((maxPower2 ^ entriesCount) > maxPower2) {
              maxPower2 <<= 1;
              log2++;
            }
            const searchRange = maxPower2 * entrySize;
            return {
              range: searchRange,
              entry: log2,
              rangeShift: entrySize * entriesCount - searchRange,
            };
          }
          toArray() {
            let sfnt = this.sfnt;
            const tables = this.tables;
            const tablesNames = Object.keys(tables);
            tablesNames.sort();
            const numTables = tablesNames.length;
            let i, j, jj, table, tableName;
            let offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;
            const tableOffsets = [offset];
            for (i = 0; i < numTables; i++) {
              table = tables[tablesNames[i]];
              const paddedLength = ((table.length + 3) & ~3) >>> 0;
              offset += paddedLength;
              tableOffsets.push(offset);
            }
            const file = new Uint8Array(offset);
            for (i = 0; i < numTables; i++) {
              table = tables[tablesNames[i]];
              writeData(file, tableOffsets[i], table);
            }
            if (sfnt === "true") {
              sfnt = (0, _util.string32)(0x00010000);
            }
            file[0] = sfnt.charCodeAt(0) & 0xff;
            file[1] = sfnt.charCodeAt(1) & 0xff;
            file[2] = sfnt.charCodeAt(2) & 0xff;
            file[3] = sfnt.charCodeAt(3) & 0xff;
            writeInt16(file, 4, numTables);
            const searchParams = OpenTypeFileBuilder.getSearchParams(
              numTables,
              16
            );
            writeInt16(file, 6, searchParams.range);
            writeInt16(file, 8, searchParams.entry);
            writeInt16(file, 10, searchParams.rangeShift);
            offset = OTF_HEADER_SIZE;
            for (i = 0; i < numTables; i++) {
              tableName = tablesNames[i];
              file[offset] = tableName.charCodeAt(0) & 0xff;
              file[offset + 1] = tableName.charCodeAt(1) & 0xff;
              file[offset + 2] = tableName.charCodeAt(2) & 0xff;
              file[offset + 3] = tableName.charCodeAt(3) & 0xff;
              let checksum = 0;
              for (
                j = tableOffsets[i], jj = tableOffsets[i + 1];
                j < jj;
                j += 4
              ) {
                const quad = (0, _core_utils.readUint32)(file, j);
                checksum = (checksum + quad) >>> 0;
              }
              writeInt32(file, offset + 4, checksum);
              writeInt32(file, offset + 8, tableOffsets[i]);
              writeInt32(file, offset + 12, tables[tableName].length);
              offset += OTF_TABLE_ENTRY_SIZE;
            }
            return file;
          }
          addTable(tag, data) {
            if (tag in this.tables) {
              throw new Error("Table " + tag + " already exists");
            }
            this.tables[tag] = data;
          }
        }
        exports.OpenTypeFileBuilder = OpenTypeFileBuilder;

        /***/
      },
      /* 48 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.Type1Font = void 0;
        var _cff_parser = __w_pdfjs_require__(35);
        var _util = __w_pdfjs_require__(2);
        var _fonts_utils = __w_pdfjs_require__(38);
        var _core_utils = __w_pdfjs_require__(3);
        var _stream = __w_pdfjs_require__(8);
        var _type1_parser = __w_pdfjs_require__(49);
        function findBlock(streamBytes, signature, startIndex) {
          const streamBytesLength = streamBytes.length;
          const signatureLength = signature.length;
          const scanLength = streamBytesLength - signatureLength;
          let i = startIndex,
            found = false;
          while (i < scanLength) {
            let j = 0;
            while (j < signatureLength && streamBytes[i + j] === signature[j]) {
              j++;
            }
            if (j >= signatureLength) {
              i += j;
              while (
                i < streamBytesLength &&
                (0, _core_utils.isWhiteSpace)(streamBytes[i])
              ) {
                i++;
              }
              found = true;
              break;
            }
            i++;
          }
          return {
            found,
            length: i,
          };
        }
        function getHeaderBlock(stream, suggestedLength) {
          const EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];
          const streamStartPos = stream.pos;
          let headerBytes, headerBytesLength, block;
          try {
            headerBytes = stream.getBytes(suggestedLength);
            headerBytesLength = headerBytes.length;
          } catch {}
          if (headerBytesLength === suggestedLength) {
            block = findBlock(
              headerBytes,
              EEXEC_SIGNATURE,
              suggestedLength - 2 * EEXEC_SIGNATURE.length
            );
            if (block.found && block.length === suggestedLength) {
              return {
                stream: new _stream.Stream(headerBytes),
                length: suggestedLength,
              };
            }
          }
          (0, _util.warn)(
            'Invalid "Length1" property in Type1 font -- trying to recover.'
          );
          stream.pos = streamStartPos;
          const SCAN_BLOCK_LENGTH = 2048;
          let actualLength;
          while (true) {
            const scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);
            block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);
            if (block.length === 0) {
              break;
            }
            stream.pos += block.length;
            if (block.found) {
              actualLength = stream.pos - streamStartPos;
              break;
            }
          }
          stream.pos = streamStartPos;
          if (actualLength) {
            return {
              stream: new _stream.Stream(stream.getBytes(actualLength)),
              length: actualLength,
            };
          }
          (0, _util.warn)(
            'Unable to recover "Length1" property in Type1 font -- using as is.'
          );
          return {
            stream: new _stream.Stream(stream.getBytes(suggestedLength)),
            length: suggestedLength,
          };
        }
        function getEexecBlock(stream, suggestedLength) {
          const eexecBytes = stream.getBytes();
          if (eexecBytes.length === 0) {
            throw new _util.FormatError(
              "getEexecBlock - no font program found."
            );
          }
          return {
            stream: new _stream.Stream(eexecBytes),
            length: eexecBytes.length,
          };
        }
        class Type1Font {
          constructor(name, file, properties) {
            const PFB_HEADER_SIZE = 6;
            let headerBlockLength = properties.length1;
            let eexecBlockLength = properties.length2;
            let pfbHeader = file.peekBytes(PFB_HEADER_SIZE);
            const pfbHeaderPresent =
              pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;
            if (pfbHeaderPresent) {
              file.skip(PFB_HEADER_SIZE);
              headerBlockLength =
                (pfbHeader[5] << 24) |
                (pfbHeader[4] << 16) |
                (pfbHeader[3] << 8) |
                pfbHeader[2];
            }
            const headerBlock = getHeaderBlock(file, headerBlockLength);
            const headerBlockParser = new _type1_parser.Type1Parser(
              headerBlock.stream,
              false,
              _fonts_utils.SEAC_ANALYSIS_ENABLED
            );
            headerBlockParser.extractFontHeader(properties);
            if (pfbHeaderPresent) {
              pfbHeader = file.getBytes(PFB_HEADER_SIZE);
              eexecBlockLength =
                (pfbHeader[5] << 24) |
                (pfbHeader[4] << 16) |
                (pfbHeader[3] << 8) |
                pfbHeader[2];
            }
            const eexecBlock = getEexecBlock(file, eexecBlockLength);
            const eexecBlockParser = new _type1_parser.Type1Parser(
              eexecBlock.stream,
              true,
              _fonts_utils.SEAC_ANALYSIS_ENABLED
            );
            const data = eexecBlockParser.extractFontProgram(properties);
            for (const key in data.properties) {
              properties[key] = data.properties[key];
            }
            const charstrings = data.charstrings;
            const type2Charstrings = this.getType2Charstrings(charstrings);
            const subrs = this.getType2Subrs(data.subrs);
            this.charstrings = charstrings;
            this.data = this.wrap(
              name,
              type2Charstrings,
              this.charstrings,
              subrs,
              properties
            );
            this.seacs = this.getSeacs(data.charstrings);
          }
          get numGlyphs() {
            return this.charstrings.length + 1;
          }
          getCharset() {
            const charset = [".notdef"];
            for (const { glyphName } of this.charstrings) {
              charset.push(glyphName);
            }
            return charset;
          }
          getGlyphMapping(properties) {
            const charstrings = this.charstrings;
            if (properties.composite) {
              const charCodeToGlyphId = Object.create(null);
              for (
                let glyphId = 0, charstringsLen = charstrings.length;
                glyphId < charstringsLen;
                glyphId++
              ) {
                const charCode = properties.cMap.charCodeOf(glyphId);
                charCodeToGlyphId[charCode] = glyphId + 1;
              }
              return charCodeToGlyphId;
            }
            const glyphNames = [".notdef"];
            let builtInEncoding, glyphId;
            for (glyphId = 0; glyphId < charstrings.length; glyphId++) {
              glyphNames.push(charstrings[glyphId].glyphName);
            }
            const encoding = properties.builtInEncoding;
            if (encoding) {
              builtInEncoding = Object.create(null);
              for (const charCode in encoding) {
                glyphId = glyphNames.indexOf(encoding[charCode]);
                if (glyphId >= 0) {
                  builtInEncoding[charCode] = glyphId;
                }
              }
            }
            return (0, _fonts_utils.type1FontGlyphMapping)(
              properties,
              builtInEncoding,
              glyphNames
            );
          }
          hasGlyphId(id) {
            if (id < 0 || id >= this.numGlyphs) {
              return false;
            }
            if (id === 0) {
              return true;
            }
            const glyph = this.charstrings[id - 1];
            return glyph.charstring.length > 0;
          }
          getSeacs(charstrings) {
            const seacMap = [];
            for (let i = 0, ii = charstrings.length; i < ii; i++) {
              const charstring = charstrings[i];
              if (charstring.seac) {
                seacMap[i + 1] = charstring.seac;
              }
            }
            return seacMap;
          }
          getType2Charstrings(type1Charstrings) {
            const type2Charstrings = [];
            for (const type1Charstring of type1Charstrings) {
              type2Charstrings.push(type1Charstring.charstring);
            }
            return type2Charstrings;
          }
          getType2Subrs(type1Subrs) {
            let bias = 0;
            const count = type1Subrs.length;
            if (count < 1133) {
              bias = 107;
            } else if (count < 33769) {
              bias = 1131;
            } else {
              bias = 32768;
            }
            const type2Subrs = [];
            let i;
            for (i = 0; i < bias; i++) {
              type2Subrs.push([0x0b]);
            }
            for (i = 0; i < count; i++) {
              type2Subrs.push(type1Subrs[i]);
            }
            return type2Subrs;
          }
          wrap(name, glyphs, charstrings, subrs, properties) {
            const cff = new _cff_parser.CFF();
            cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);
            cff.names = [name];
            const topDict = new _cff_parser.CFFTopDict();
            topDict.setByName("version", 391);
            topDict.setByName("Notice", 392);
            topDict.setByName("FullName", 393);
            topDict.setByName("FamilyName", 394);
            topDict.setByName("Weight", 395);
            topDict.setByName("Encoding", null);
            topDict.setByName("FontMatrix", properties.fontMatrix);
            topDict.setByName("FontBBox", properties.bbox);
            topDict.setByName("charset", null);
            topDict.setByName("CharStrings", null);
            topDict.setByName("Private", null);
            cff.topDict = topDict;
            const strings = new _cff_parser.CFFStrings();
            strings.add("Version 0.11");
            strings.add("See original notice");
            strings.add(name);
            strings.add(name);
            strings.add("Medium");
            cff.strings = strings;
            cff.globalSubrIndex = new _cff_parser.CFFIndex();
            const count = glyphs.length;
            const charsetArray = [".notdef"];
            let i, ii;
            for (i = 0; i < count; i++) {
              const glyphName = charstrings[i].glyphName;
              const index = _cff_parser.CFFStandardStrings.indexOf(glyphName);
              if (index === -1) {
                strings.add(glyphName);
              }
              charsetArray.push(glyphName);
            }
            cff.charset = new _cff_parser.CFFCharset(false, 0, charsetArray);
            const charStringsIndex = new _cff_parser.CFFIndex();
            charStringsIndex.add([0x8b, 0x0e]);
            for (i = 0; i < count; i++) {
              charStringsIndex.add(glyphs[i]);
            }
            cff.charStrings = charStringsIndex;
            const privateDict = new _cff_parser.CFFPrivateDict();
            privateDict.setByName("Subrs", null);
            const fields = [
              "BlueValues",
              "OtherBlues",
              "FamilyBlues",
              "FamilyOtherBlues",
              "StemSnapH",
              "StemSnapV",
              "BlueShift",
              "BlueFuzz",
              "BlueScale",
              "LanguageGroup",
              "ExpansionFactor",
              "ForceBold",
              "StdHW",
              "StdVW",
            ];
            for (i = 0, ii = fields.length; i < ii; i++) {
              const field = fields[i];
              if (!(field in properties.privateData)) {
                continue;
              }
              const value = properties.privateData[field];
              if (Array.isArray(value)) {
                for (let j = value.length - 1; j > 0; j--) {
                  value[j] -= value[j - 1];
                }
              }
              privateDict.setByName(field, value);
            }
            cff.topDict.privateDict = privateDict;
            const subrIndex = new _cff_parser.CFFIndex();
            for (i = 0, ii = subrs.length; i < ii; i++) {
              subrIndex.add(subrs[i]);
            }
            privateDict.subrsIndex = subrIndex;
            const compiler = new _cff_parser.CFFCompiler(cff);
            return compiler.compile();
          }
        }
        exports.Type1Font = Type1Font;

        /***/
      },
      /* 49 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.Type1Parser = void 0;
        var _encodings = __w_pdfjs_require__(37);
        var _core_utils = __w_pdfjs_require__(3);
        var _stream = __w_pdfjs_require__(8);
        var _util = __w_pdfjs_require__(2);
        const HINTING_ENABLED = false;
        const COMMAND_MAP = {
          hstem: [1],
          vstem: [3],
          vmoveto: [4],
          rlineto: [5],
          hlineto: [6],
          vlineto: [7],
          rrcurveto: [8],
          callsubr: [10],
          flex: [12, 35],
          drop: [12, 18],
          endchar: [14],
          rmoveto: [21],
          hmoveto: [22],
          vhcurveto: [30],
          hvcurveto: [31],
        };
        class Type1CharString {
          constructor() {
            this.width = 0;
            this.lsb = 0;
            this.flexing = false;
            this.output = [];
            this.stack = [];
          }
          convert(encoded, subrs, seacAnalysisEnabled) {
            const count = encoded.length;
            let error = false;
            let wx, sbx, subrNumber;
            for (let i = 0; i < count; i++) {
              let value = encoded[i];
              if (value < 32) {
                if (value === 12) {
                  value = (value << 8) + encoded[++i];
                }
                switch (value) {
                  case 1:
                    if (!HINTING_ENABLED) {
                      this.stack = [];
                      break;
                    }
                    error = this.executeCommand(2, COMMAND_MAP.hstem);
                    break;
                  case 3:
                    if (!HINTING_ENABLED) {
                      this.stack = [];
                      break;
                    }
                    error = this.executeCommand(2, COMMAND_MAP.vstem);
                    break;
                  case 4:
                    if (this.flexing) {
                      if (this.stack.length < 1) {
                        error = true;
                        break;
                      }
                      const dy = this.stack.pop();
                      this.stack.push(0, dy);
                      break;
                    }
                    error = this.executeCommand(1, COMMAND_MAP.vmoveto);
                    break;
                  case 5:
                    error = this.executeCommand(2, COMMAND_MAP.rlineto);
                    break;
                  case 6:
                    error = this.executeCommand(1, COMMAND_MAP.hlineto);
                    break;
                  case 7:
                    error = this.executeCommand(1, COMMAND_MAP.vlineto);
                    break;
                  case 8:
                    error = this.executeCommand(6, COMMAND_MAP.rrcurveto);
                    break;
                  case 9:
                    this.stack = [];
                    break;
                  case 10:
                    if (this.stack.length < 1) {
                      error = true;
                      break;
                    }
                    subrNumber = this.stack.pop();
                    if (!subrs[subrNumber]) {
                      error = true;
                      break;
                    }
                    error = this.convert(
                      subrs[subrNumber],
                      subrs,
                      seacAnalysisEnabled
                    );
                    break;
                  case 11:
                    return error;
                  case 13:
                    if (this.stack.length < 2) {
                      error = true;
                      break;
                    }
                    wx = this.stack.pop();
                    sbx = this.stack.pop();
                    this.lsb = sbx;
                    this.width = wx;
                    this.stack.push(wx, sbx);
                    error = this.executeCommand(2, COMMAND_MAP.hmoveto);
                    break;
                  case 14:
                    this.output.push(COMMAND_MAP.endchar[0]);
                    break;
                  case 21:
                    if (this.flexing) {
                      break;
                    }
                    error = this.executeCommand(2, COMMAND_MAP.rmoveto);
                    break;
                  case 22:
                    if (this.flexing) {
                      this.stack.push(0);
                      break;
                    }
                    error = this.executeCommand(1, COMMAND_MAP.hmoveto);
                    break;
                  case 30:
                    error = this.executeCommand(4, COMMAND_MAP.vhcurveto);
                    break;
                  case 31:
                    error = this.executeCommand(4, COMMAND_MAP.hvcurveto);
                    break;
                  case (12 << 8) + 0:
                    this.stack = [];
                    break;
                  case (12 << 8) + 1:
                    if (!HINTING_ENABLED) {
                      this.stack = [];
                      break;
                    }
                    error = this.executeCommand(2, COMMAND_MAP.vstem);
                    break;
                  case (12 << 8) + 2:
                    if (!HINTING_ENABLED) {
                      this.stack = [];
                      break;
                    }
                    error = this.executeCommand(2, COMMAND_MAP.hstem);
                    break;
                  case (12 << 8) + 6:
                    if (seacAnalysisEnabled) {
                      const asb = this.stack.at(-5);
                      this.seac = this.stack.splice(-4, 4);
                      this.seac[0] += this.lsb - asb;
                      error = this.executeCommand(0, COMMAND_MAP.endchar);
                    } else {
                      error = this.executeCommand(4, COMMAND_MAP.endchar);
                    }
                    break;
                  case (12 << 8) + 7:
                    if (this.stack.length < 4) {
                      error = true;
                      break;
                    }
                    this.stack.pop();
                    wx = this.stack.pop();
                    const sby = this.stack.pop();
                    sbx = this.stack.pop();
                    this.lsb = sbx;
                    this.width = wx;
                    this.stack.push(wx, sbx, sby);
                    error = this.executeCommand(3, COMMAND_MAP.rmoveto);
                    break;
                  case (12 << 8) + 12:
                    if (this.stack.length < 2) {
                      error = true;
                      break;
                    }
                    const num2 = this.stack.pop();
                    const num1 = this.stack.pop();
                    this.stack.push(num1 / num2);
                    break;
                  case (12 << 8) + 16:
                    if (this.stack.length < 2) {
                      error = true;
                      break;
                    }
                    subrNumber = this.stack.pop();
                    const numArgs = this.stack.pop();
                    if (subrNumber === 0 && numArgs === 3) {
                      const flexArgs = this.stack.splice(-17, 17);
                      this.stack.push(
                        flexArgs[2] + flexArgs[0],
                        flexArgs[3] + flexArgs[1],
                        flexArgs[4],
                        flexArgs[5],
                        flexArgs[6],
                        flexArgs[7],
                        flexArgs[8],
                        flexArgs[9],
                        flexArgs[10],
                        flexArgs[11],
                        flexArgs[12],
                        flexArgs[13],
                        flexArgs[14]
                      );
                      error = this.executeCommand(13, COMMAND_MAP.flex, true);
                      this.flexing = false;
                      this.stack.push(flexArgs[15], flexArgs[16]);
                    } else if (subrNumber === 1 && numArgs === 0) {
                      this.flexing = true;
                    }
                    break;
                  case (12 << 8) + 17:
                    break;
                  case (12 << 8) + 33:
                    this.stack = [];
                    break;
                  default:
                    (0, _util.warn)(
                      'Unknown type 1 charstring command of "' + value + '"'
                    );
                    break;
                }
                if (error) {
                  break;
                }
                continue;
              } else if (value <= 246) {
                value -= 139;
              } else if (value <= 250) {
                value = (value - 247) * 256 + encoded[++i] + 108;
              } else if (value <= 254) {
                value = -((value - 251) * 256) - encoded[++i] - 108;
              } else {
                value =
                  ((encoded[++i] & 0xff) << 24) |
                  ((encoded[++i] & 0xff) << 16) |
                  ((encoded[++i] & 0xff) << 8) |
                  ((encoded[++i] & 0xff) << 0);
              }
              this.stack.push(value);
            }
            return error;
          }
          executeCommand(howManyArgs, command, keepStack) {
            const stackLength = this.stack.length;
            if (howManyArgs > stackLength) {
              return true;
            }
            const start = stackLength - howManyArgs;
            for (let i = start; i < stackLength; i++) {
              let value = this.stack[i];
              if (Number.isInteger(value)) {
                this.output.push(28, (value >> 8) & 0xff, value & 0xff);
              } else {
                value = (65536 * value) | 0;
                this.output.push(
                  255,
                  (value >> 24) & 0xff,
                  (value >> 16) & 0xff,
                  (value >> 8) & 0xff,
                  value & 0xff
                );
              }
            }
            this.output.push(...command);
            if (keepStack) {
              this.stack.splice(start, howManyArgs);
            } else {
              this.stack.length = 0;
            }
            return false;
          }
        }
        const EEXEC_ENCRYPT_KEY = 55665;
        const CHAR_STRS_ENCRYPT_KEY = 4330;
        function isHexDigit(code) {
          return (
            (code >= 48 && code <= 57) ||
            (code >= 65 && code <= 70) ||
            (code >= 97 && code <= 102)
          );
        }
        function decrypt(data, key, discardNumber) {
          if (discardNumber >= data.length) {
            return new Uint8Array(0);
          }
          const c1 = 52845,
            c2 = 22719;
          let r = key | 0,
            i,
            j;
          for (i = 0; i < discardNumber; i++) {
            r = ((data[i] + r) * c1 + c2) & ((1 << 16) - 1);
          }
          const count = data.length - discardNumber;
          const decrypted = new Uint8Array(count);
          for (i = discardNumber, j = 0; j < count; i++, j++) {
            const value = data[i];
            decrypted[j] = value ^ (r >> 8);
            r = ((value + r) * c1 + c2) & ((1 << 16) - 1);
          }
          return decrypted;
        }
        function decryptAscii(data, key, discardNumber) {
          const c1 = 52845,
            c2 = 22719;
          let r = key | 0;
          const count = data.length,
            maybeLength = count >>> 1;
          const decrypted = new Uint8Array(maybeLength);
          let i, j;
          for (i = 0, j = 0; i < count; i++) {
            const digit1 = data[i];
            if (!isHexDigit(digit1)) {
              continue;
            }
            i++;
            let digit2;
            while (i < count && !isHexDigit((digit2 = data[i]))) {
              i++;
            }
            if (i < count) {
              const value = parseInt(String.fromCharCode(digit1, digit2), 16);
              decrypted[j++] = value ^ (r >> 8);
              r = ((value + r) * c1 + c2) & ((1 << 16) - 1);
            }
          }
          return decrypted.slice(discardNumber, j);
        }
        function isSpecial(c) {
          return (
            c === 0x2f ||
            c === 0x5b ||
            c === 0x5d ||
            c === 0x7b ||
            c === 0x7d ||
            c === 0x28 ||
            c === 0x29
          );
        }
        class Type1Parser {
          constructor(stream, encrypted, seacAnalysisEnabled) {
            if (encrypted) {
              const data = stream.getBytes();
              const isBinary = !(
                (isHexDigit(data[0]) ||
                  (0, _core_utils.isWhiteSpace)(data[0])) &&
                isHexDigit(data[1]) &&
                isHexDigit(data[2]) &&
                isHexDigit(data[3]) &&
                isHexDigit(data[4]) &&
                isHexDigit(data[5]) &&
                isHexDigit(data[6]) &&
                isHexDigit(data[7])
              );
              stream = new _stream.Stream(
                isBinary
                  ? decrypt(data, EEXEC_ENCRYPT_KEY, 4)
                  : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4)
              );
            }
            this.seacAnalysisEnabled = !!seacAnalysisEnabled;
            this.stream = stream;
            this.nextChar();
          }
          readNumberArray() {
            this.getToken();
            const array = [];
            while (true) {
              const token = this.getToken();
              if (token === null || token === "]" || token === "}") {
                break;
              }
              array.push(parseFloat(token || 0));
            }
            return array;
          }
          readNumber() {
            const token = this.getToken();
            return parseFloat(token || 0);
          }
          readInt() {
            const token = this.getToken();
            return parseInt(token || 0, 10) | 0;
          }
          readBoolean() {
            const token = this.getToken();
            return token === "true" ? 1 : 0;
          }
          nextChar() {
            return (this.currentChar = this.stream.getByte());
          }
          prevChar() {
            this.stream.skip(-2);
            return (this.currentChar = this.stream.getByte());
          }
          getToken() {
            let comment = false;
            let ch = this.currentChar;
            while (true) {
              if (ch === -1) {
                return null;
              }
              if (comment) {
                if (ch === 0x0a || ch === 0x0d) {
                  comment = false;
                }
              } else if (ch === 0x25) {
                comment = true;
              } else if (!(0, _core_utils.isWhiteSpace)(ch)) {
                break;
              }
              ch = this.nextChar();
            }
            if (isSpecial(ch)) {
              this.nextChar();
              return String.fromCharCode(ch);
            }
            let token = "";
            do {
              token += String.fromCharCode(ch);
              ch = this.nextChar();
            } while (
              ch >= 0 &&
              !(0, _core_utils.isWhiteSpace)(ch) &&
              !isSpecial(ch)
            );
            return token;
          }
          readCharStrings(bytes, lenIV) {
            if (lenIV === -1) {
              return bytes;
            }
            return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);
          }
          extractFontProgram(properties) {
            const stream = this.stream;
            const subrs = [],
              charstrings = [];
            const privateData = Object.create(null);
            privateData.lenIV = 4;
            const program = {
              subrs: [],
              charstrings: [],
              properties: {
                privateData,
              },
            };
            let token, length, data, lenIV;
            while ((token = this.getToken()) !== null) {
              if (token !== "/") {
                continue;
              }
              token = this.getToken();
              switch (token) {
                case "CharStrings":
                  this.getToken();
                  this.getToken();
                  this.getToken();
                  this.getToken();
                  while (true) {
                    token = this.getToken();
                    if (token === null || token === "end") {
                      break;
                    }
                    if (token !== "/") {
                      continue;
                    }
                    const glyph = this.getToken();
                    length = this.readInt();
                    this.getToken();
                    data =
                      length > 0 ? stream.getBytes(length) : new Uint8Array(0);
                    lenIV = program.properties.privateData.lenIV;
                    const encoded = this.readCharStrings(data, lenIV);
                    this.nextChar();
                    token = this.getToken();
                    if (token === "noaccess") {
                      this.getToken();
                    } else if (token === "/") {
                      this.prevChar();
                    }
                    charstrings.push({
                      glyph,
                      encoded,
                    });
                  }
                  break;
                case "Subrs":
                  this.readInt();
                  this.getToken();
                  while (this.getToken() === "dup") {
                    const index = this.readInt();
                    length = this.readInt();
                    this.getToken();
                    data =
                      length > 0 ? stream.getBytes(length) : new Uint8Array(0);
                    lenIV = program.properties.privateData.lenIV;
                    const encoded = this.readCharStrings(data, lenIV);
                    this.nextChar();
                    token = this.getToken();
                    if (token === "noaccess") {
                      this.getToken();
                    }
                    subrs[index] = encoded;
                  }
                  break;
                case "BlueValues":
                case "OtherBlues":
                case "FamilyBlues":
                case "FamilyOtherBlues":
                  const blueArray = this.readNumberArray();
                  if (
                    blueArray.length > 0 &&
                    blueArray.length % 2 === 0 &&
                    HINTING_ENABLED
                  ) {
                    program.properties.privateData[token] = blueArray;
                  }
                  break;
                case "StemSnapH":
                case "StemSnapV":
                  program.properties.privateData[token] =
                    this.readNumberArray();
                  break;
                case "StdHW":
                case "StdVW":
                  program.properties.privateData[token] =
                    this.readNumberArray()[0];
                  break;
                case "BlueShift":
                case "lenIV":
                case "BlueFuzz":
                case "BlueScale":
                case "LanguageGroup":
                  program.properties.privateData[token] = this.readNumber();
                  break;
                case "ExpansionFactor":
                  program.properties.privateData[token] =
                    this.readNumber() || 0.06;
                  break;
                case "ForceBold":
                  program.properties.privateData[token] = this.readBoolean();
                  break;
              }
            }
            for (const { encoded, glyph } of charstrings) {
              const charString = new Type1CharString();
              const error = charString.convert(
                encoded,
                subrs,
                this.seacAnalysisEnabled
              );
              let output = charString.output;
              if (error) {
                output = [14];
              }
              const charStringObject = {
                glyphName: glyph,
                charstring: output,
                width: charString.width,
                lsb: charString.lsb,
                seac: charString.seac,
              };
              if (glyph === ".notdef") {
                program.charstrings.unshift(charStringObject);
              } else {
                program.charstrings.push(charStringObject);
              }
              if (properties.builtInEncoding) {
                const index = properties.builtInEncoding.indexOf(glyph);
                if (
                  index > -1 &&
                  properties.widths[index] === undefined &&
                  index >= properties.firstChar &&
                  index <= properties.lastChar
                ) {
                  properties.widths[index] = charString.width;
                }
              }
            }
            return program;
          }
          extractFontHeader(properties) {
            let token;
            while ((token = this.getToken()) !== null) {
              if (token !== "/") {
                continue;
              }
              token = this.getToken();
              switch (token) {
                case "FontMatrix":
                  const matrix = this.readNumberArray();
                  properties.fontMatrix = matrix;
                  break;
                case "Encoding":
                  const encodingArg = this.getToken();
                  let encoding;
                  if (!/^\d+$/.test(encodingArg)) {
                    encoding = (0, _encodings.getEncoding)(encodingArg);
                  } else {
                    encoding = [];
                    const size = parseInt(encodingArg, 10) | 0;
                    this.getToken();
                    for (let j = 0; j < size; j++) {
                      token = this.getToken();
                      while (token !== "dup" && token !== "def") {
                        token = this.getToken();
                        if (token === null) {
                          return;
                        }
                      }
                      if (token === "def") {
                        break;
                      }
                      const index = this.readInt();
                      this.getToken();
                      const glyph = this.getToken();
                      encoding[index] = glyph;
                      this.getToken();
                    }
                  }
                  properties.builtInEncoding = encoding;
                  break;
                case "FontBBox":
                  const fontBBox = this.readNumberArray();
                  properties.ascent = Math.max(fontBBox[3], fontBBox[1]);
                  properties.descent = Math.min(fontBBox[1], fontBBox[3]);
                  properties.ascentScaled = true;
                  break;
              }
            }
          }
        }
        exports.Type1Parser = Type1Parser;

        /***/
      },
      /* 50 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.Pattern = void 0;
        exports.clearPatternCaches = clearPatternCaches;
        exports.getTilingPatternIR = getTilingPatternIR;
        var _util = __w_pdfjs_require__(2);
        var _base_stream = __w_pdfjs_require__(5);
        var _colorspace = __w_pdfjs_require__(12);
        var _core_utils = __w_pdfjs_require__(3);
        const ShadingType = {
          FUNCTION_BASED: 1,
          AXIAL: 2,
          RADIAL: 3,
          FREE_FORM_MESH: 4,
          LATTICE_FORM_MESH: 5,
          COONS_PATCH_MESH: 6,
          TENSOR_PATCH_MESH: 7,
        };
        class Pattern {
          constructor() {
            (0, _util.unreachable)("Cannot initialize Pattern.");
          }
          static parseShading(
            shading,
            xref,
            res,
            pdfFunctionFactory,
            localColorSpaceCache
          ) {
            const dict =
              shading instanceof _base_stream.BaseStream
                ? shading.dict
                : shading;
            const type = dict.get("ShadingType");
            try {
              switch (type) {
                case ShadingType.AXIAL:
                case ShadingType.RADIAL:
                  return new RadialAxialShading(
                    dict,
                    xref,
                    res,
                    pdfFunctionFactory,
                    localColorSpaceCache
                  );
                case ShadingType.FREE_FORM_MESH:
                case ShadingType.LATTICE_FORM_MESH:
                case ShadingType.COONS_PATCH_MESH:
                case ShadingType.TENSOR_PATCH_MESH:
                  return new MeshShading(
                    shading,
                    xref,
                    res,
                    pdfFunctionFactory,
                    localColorSpaceCache
                  );
                default:
                  throw new _util.FormatError(
                    "Unsupported ShadingType: " + type
                  );
              }
            } catch (ex) {
              if (ex instanceof _core_utils.MissingDataException) {
                throw ex;
              }
              (0, _util.warn)(ex);
              return new DummyShading();
            }
          }
        }
        exports.Pattern = Pattern;
        class BaseShading {
          static SMALL_NUMBER = 1e-6;
          constructor() {
            if (this.constructor === BaseShading) {
              (0, _util.unreachable)("Cannot initialize BaseShading.");
            }
          }
          getIR() {
            (0, _util.unreachable)("Abstract method `getIR` called.");
          }
        }
        class RadialAxialShading extends BaseShading {
          constructor(
            dict,
            xref,
            resources,
            pdfFunctionFactory,
            localColorSpaceCache
          ) {
            super();
            this.coordsArr = dict.getArray("Coords");
            this.shadingType = dict.get("ShadingType");
            const cs = _colorspace.ColorSpace.parse({
              cs: dict.getRaw("CS") || dict.getRaw("ColorSpace"),
              xref,
              resources,
              pdfFunctionFactory,
              localColorSpaceCache,
            });
            const bbox = dict.getArray("BBox");
            this.bbox =
              Array.isArray(bbox) && bbox.length === 4
                ? _util.Util.normalizeRect(bbox)
                : null;
            let t0 = 0.0,
              t1 = 1.0;
            if (dict.has("Domain")) {
              const domainArr = dict.getArray("Domain");
              t0 = domainArr[0];
              t1 = domainArr[1];
            }
            let extendStart = false,
              extendEnd = false;
            if (dict.has("Extend")) {
              const extendArr = dict.getArray("Extend");
              extendStart = extendArr[0];
              extendEnd = extendArr[1];
            }
            if (
              this.shadingType === ShadingType.RADIAL &&
              (!extendStart || !extendEnd)
            ) {
              const [x1, y1, r1, x2, y2, r2] = this.coordsArr;
              const distance = Math.hypot(x1 - x2, y1 - y2);
              if (r1 <= r2 + distance && r2 <= r1 + distance) {
                (0, _util.warn)("Unsupported radial gradient.");
              }
            }
            this.extendStart = extendStart;
            this.extendEnd = extendEnd;
            const fnObj = dict.getRaw("Function");
            const fn = pdfFunctionFactory.createFromArray(fnObj);
            const NUMBER_OF_SAMPLES = 840;
            const step = (t1 - t0) / NUMBER_OF_SAMPLES;
            const colorStops = (this.colorStops = []);
            if (t0 >= t1 || step <= 0) {
              (0, _util.info)("Bad shading domain.");
              return;
            }
            const color = new Float32Array(cs.numComps),
              ratio = new Float32Array(1);
            let rgbColor;
            let iBase = 0;
            ratio[0] = t0;
            fn(ratio, 0, color, 0);
            let rgbBase = cs.getRgb(color, 0);
            const cssColorBase = _util.Util.makeHexColor(
              rgbBase[0],
              rgbBase[1],
              rgbBase[2]
            );
            colorStops.push([0, cssColorBase]);
            let iPrev = 1;
            ratio[0] = t0 + step;
            fn(ratio, 0, color, 0);
            let rgbPrev = cs.getRgb(color, 0);
            let maxSlopeR = rgbPrev[0] - rgbBase[0] + 1;
            let maxSlopeG = rgbPrev[1] - rgbBase[1] + 1;
            let maxSlopeB = rgbPrev[2] - rgbBase[2] + 1;
            let minSlopeR = rgbPrev[0] - rgbBase[0] - 1;
            let minSlopeG = rgbPrev[1] - rgbBase[1] - 1;
            let minSlopeB = rgbPrev[2] - rgbBase[2] - 1;
            for (let i = 2; i < NUMBER_OF_SAMPLES; i++) {
              ratio[0] = t0 + i * step;
              fn(ratio, 0, color, 0);
              rgbColor = cs.getRgb(color, 0);
              const run = i - iBase;
              maxSlopeR = Math.min(
                maxSlopeR,
                (rgbColor[0] - rgbBase[0] + 1) / run
              );
              maxSlopeG = Math.min(
                maxSlopeG,
                (rgbColor[1] - rgbBase[1] + 1) / run
              );
              maxSlopeB = Math.min(
                maxSlopeB,
                (rgbColor[2] - rgbBase[2] + 1) / run
              );
              minSlopeR = Math.max(
                minSlopeR,
                (rgbColor[0] - rgbBase[0] - 1) / run
              );
              minSlopeG = Math.max(
                minSlopeG,
                (rgbColor[1] - rgbBase[1] - 1) / run
              );
              minSlopeB = Math.max(
                minSlopeB,
                (rgbColor[2] - rgbBase[2] - 1) / run
              );
              const slopesExist =
                minSlopeR <= maxSlopeR &&
                minSlopeG <= maxSlopeG &&
                minSlopeB <= maxSlopeB;
              if (!slopesExist) {
                const cssColor = _util.Util.makeHexColor(
                  rgbPrev[0],
                  rgbPrev[1],
                  rgbPrev[2]
                );
                colorStops.push([iPrev / NUMBER_OF_SAMPLES, cssColor]);
                maxSlopeR = rgbColor[0] - rgbPrev[0] + 1;
                maxSlopeG = rgbColor[1] - rgbPrev[1] + 1;
                maxSlopeB = rgbColor[2] - rgbPrev[2] + 1;
                minSlopeR = rgbColor[0] - rgbPrev[0] - 1;
                minSlopeG = rgbColor[1] - rgbPrev[1] - 1;
                minSlopeB = rgbColor[2] - rgbPrev[2] - 1;
                iBase = iPrev;
                rgbBase = rgbPrev;
              }
              iPrev = i;
              rgbPrev = rgbColor;
            }
            const cssColor = _util.Util.makeHexColor(
              rgbPrev[0],
              rgbPrev[1],
              rgbPrev[2]
            );
            colorStops.push([1, cssColor]);
            let background = "transparent";
            if (dict.has("Background")) {
              rgbColor = cs.getRgb(dict.get("Background"), 0);
              background = _util.Util.makeHexColor(
                rgbColor[0],
                rgbColor[1],
                rgbColor[2]
              );
            }
            if (!extendStart) {
              colorStops.unshift([0, background]);
              colorStops[1][0] += BaseShading.SMALL_NUMBER;
            }
            if (!extendEnd) {
              colorStops.at(-1)[0] -= BaseShading.SMALL_NUMBER;
              colorStops.push([1, background]);
            }
            this.colorStops = colorStops;
          }
          getIR() {
            const coordsArr = this.coordsArr;
            const shadingType = this.shadingType;
            let type, p0, p1, r0, r1;
            if (shadingType === ShadingType.AXIAL) {
              p0 = [coordsArr[0], coordsArr[1]];
              p1 = [coordsArr[2], coordsArr[3]];
              r0 = null;
              r1 = null;
              type = "axial";
            } else if (shadingType === ShadingType.RADIAL) {
              p0 = [coordsArr[0], coordsArr[1]];
              p1 = [coordsArr[3], coordsArr[4]];
              r0 = coordsArr[2];
              r1 = coordsArr[5];
              type = "radial";
            } else {
              (0, _util.unreachable)(`getPattern type unknown: ${shadingType}`);
            }
            return [
              "RadialAxial",
              type,
              this.bbox,
              this.colorStops,
              p0,
              p1,
              r0,
              r1,
            ];
          }
        }
        class MeshStreamReader {
          constructor(stream, context) {
            this.stream = stream;
            this.context = context;
            this.buffer = 0;
            this.bufferLength = 0;
            const numComps = context.numComps;
            this.tmpCompsBuf = new Float32Array(numComps);
            const csNumComps = context.colorSpace.numComps;
            this.tmpCsCompsBuf = context.colorFn
              ? new Float32Array(csNumComps)
              : this.tmpCompsBuf;
          }
          get hasData() {
            if (this.stream.end) {
              return this.stream.pos < this.stream.end;
            }
            if (this.bufferLength > 0) {
              return true;
            }
            const nextByte = this.stream.getByte();
            if (nextByte < 0) {
              return false;
            }
            this.buffer = nextByte;
            this.bufferLength = 8;
            return true;
          }
          readBits(n) {
            let buffer = this.buffer;
            let bufferLength = this.bufferLength;
            if (n === 32) {
              if (bufferLength === 0) {
                return (
                  ((this.stream.getByte() << 24) |
                    (this.stream.getByte() << 16) |
                    (this.stream.getByte() << 8) |
                    this.stream.getByte()) >>>
                  0
                );
              }
              buffer =
                (buffer << 24) |
                (this.stream.getByte() << 16) |
                (this.stream.getByte() << 8) |
                this.stream.getByte();
              const nextByte = this.stream.getByte();
              this.buffer = nextByte & ((1 << bufferLength) - 1);
              return (
                ((buffer << (8 - bufferLength)) |
                  ((nextByte & 0xff) >> bufferLength)) >>>
                0
              );
            }
            if (n === 8 && bufferLength === 0) {
              return this.stream.getByte();
            }
            while (bufferLength < n) {
              buffer = (buffer << 8) | this.stream.getByte();
              bufferLength += 8;
            }
            bufferLength -= n;
            this.bufferLength = bufferLength;
            this.buffer = buffer & ((1 << bufferLength) - 1);
            return buffer >> bufferLength;
          }
          align() {
            this.buffer = 0;
            this.bufferLength = 0;
          }
          readFlag() {
            return this.readBits(this.context.bitsPerFlag);
          }
          readCoordinate() {
            const bitsPerCoordinate = this.context.bitsPerCoordinate;
            const xi = this.readBits(bitsPerCoordinate);
            const yi = this.readBits(bitsPerCoordinate);
            const decode = this.context.decode;
            const scale =
              bitsPerCoordinate < 32
                ? 1 / ((1 << bitsPerCoordinate) - 1)
                : 2.3283064365386963e-10;
            return [
              xi * scale * (decode[1] - decode[0]) + decode[0],
              yi * scale * (decode[3] - decode[2]) + decode[2],
            ];
          }
          readComponents() {
            const numComps = this.context.numComps;
            const bitsPerComponent = this.context.bitsPerComponent;
            const scale =
              bitsPerComponent < 32
                ? 1 / ((1 << bitsPerComponent) - 1)
                : 2.3283064365386963e-10;
            const decode = this.context.decode;
            const components = this.tmpCompsBuf;
            for (let i = 0, j = 4; i < numComps; i++, j += 2) {
              const ci = this.readBits(bitsPerComponent);
              components[i] =
                ci * scale * (decode[j + 1] - decode[j]) + decode[j];
            }
            const color = this.tmpCsCompsBuf;
            if (this.context.colorFn) {
              this.context.colorFn(components, 0, color, 0);
            }
            return this.context.colorSpace.getRgb(color, 0);
          }
        }
        let bCache = Object.create(null);
        function buildB(count) {
          const lut = [];
          for (let i = 0; i <= count; i++) {
            const t = i / count,
              t_ = 1 - t;
            lut.push(
              new Float32Array([
                t_ ** 3,
                3 * t * t_ ** 2,
                3 * t ** 2 * t_,
                t ** 3,
              ])
            );
          }
          return lut;
        }
        function getB(count) {
          return (bCache[count] ||= buildB(count));
        }
        function clearPatternCaches() {
          bCache = Object.create(null);
        }
        class MeshShading extends BaseShading {
          static MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;
          static MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;
          static TRIANGLE_DENSITY = 20;
          constructor(
            stream,
            xref,
            resources,
            pdfFunctionFactory,
            localColorSpaceCache
          ) {
            super();
            if (!(stream instanceof _base_stream.BaseStream)) {
              throw new _util.FormatError("Mesh data is not a stream");
            }
            const dict = stream.dict;
            this.shadingType = dict.get("ShadingType");
            const bbox = dict.getArray("BBox");
            this.bbox =
              Array.isArray(bbox) && bbox.length === 4
                ? _util.Util.normalizeRect(bbox)
                : null;
            const cs = _colorspace.ColorSpace.parse({
              cs: dict.getRaw("CS") || dict.getRaw("ColorSpace"),
              xref,
              resources,
              pdfFunctionFactory,
              localColorSpaceCache,
            });
            this.background = dict.has("Background")
              ? cs.getRgb(dict.get("Background"), 0)
              : null;
            const fnObj = dict.getRaw("Function");
            const fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;
            this.coords = [];
            this.colors = [];
            this.figures = [];
            const decodeContext = {
              bitsPerCoordinate: dict.get("BitsPerCoordinate"),
              bitsPerComponent: dict.get("BitsPerComponent"),
              bitsPerFlag: dict.get("BitsPerFlag"),
              decode: dict.getArray("Decode"),
              colorFn: fn,
              colorSpace: cs,
              numComps: fn ? 1 : cs.numComps,
            };
            const reader = new MeshStreamReader(stream, decodeContext);
            let patchMesh = false;
            switch (this.shadingType) {
              case ShadingType.FREE_FORM_MESH:
                this._decodeType4Shading(reader);
                break;
              case ShadingType.LATTICE_FORM_MESH:
                const verticesPerRow = dict.get("VerticesPerRow") | 0;
                if (verticesPerRow < 2) {
                  throw new _util.FormatError("Invalid VerticesPerRow");
                }
                this._decodeType5Shading(reader, verticesPerRow);
                break;
              case ShadingType.COONS_PATCH_MESH:
                this._decodeType6Shading(reader);
                patchMesh = true;
                break;
              case ShadingType.TENSOR_PATCH_MESH:
                this._decodeType7Shading(reader);
                patchMesh = true;
                break;
              default:
                (0, _util.unreachable)("Unsupported mesh type.");
                break;
            }
            if (patchMesh) {
              this._updateBounds();
              for (let i = 0, ii = this.figures.length; i < ii; i++) {
                this._buildFigureFromPatch(i);
              }
            }
            this._updateBounds();
            this._packData();
          }
          _decodeType4Shading(reader) {
            const coords = this.coords;
            const colors = this.colors;
            const operators = [];
            const ps = [];
            let verticesLeft = 0;
            while (reader.hasData) {
              const f = reader.readFlag();
              const coord = reader.readCoordinate();
              const color = reader.readComponents();
              if (verticesLeft === 0) {
                if (!(0 <= f && f <= 2)) {
                  throw new _util.FormatError("Unknown type4 flag");
                }
                switch (f) {
                  case 0:
                    verticesLeft = 3;
                    break;
                  case 1:
                    ps.push(ps.at(-2), ps.at(-1));
                    verticesLeft = 1;
                    break;
                  case 2:
                    ps.push(ps.at(-3), ps.at(-1));
                    verticesLeft = 1;
                    break;
                }
                operators.push(f);
              }
              ps.push(coords.length);
              coords.push(coord);
              colors.push(color);
              verticesLeft--;
              reader.align();
            }
            this.figures.push({
              type: "triangles",
              coords: new Int32Array(ps),
              colors: new Int32Array(ps),
            });
          }
          _decodeType5Shading(reader, verticesPerRow) {
            const coords = this.coords;
            const colors = this.colors;
            const ps = [];
            while (reader.hasData) {
              const coord = reader.readCoordinate();
              const color = reader.readComponents();
              ps.push(coords.length);
              coords.push(coord);
              colors.push(color);
            }
            this.figures.push({
              type: "lattice",
              coords: new Int32Array(ps),
              colors: new Int32Array(ps),
              verticesPerRow,
            });
          }
          _decodeType6Shading(reader) {
            const coords = this.coords;
            const colors = this.colors;
            const ps = new Int32Array(16);
            const cs = new Int32Array(4);
            while (reader.hasData) {
              const f = reader.readFlag();
              if (!(0 <= f && f <= 3)) {
                throw new _util.FormatError("Unknown type6 flag");
              }
              const pi = coords.length;
              for (let i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {
                coords.push(reader.readCoordinate());
              }
              const ci = colors.length;
              for (let i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {
                colors.push(reader.readComponents());
              }
              let tmp1, tmp2, tmp3, tmp4;
              switch (f) {
                case 0:
                  ps[12] = pi + 3;
                  ps[13] = pi + 4;
                  ps[14] = pi + 5;
                  ps[15] = pi + 6;
                  ps[8] = pi + 2;
                  ps[11] = pi + 7;
                  ps[4] = pi + 1;
                  ps[7] = pi + 8;
                  ps[0] = pi;
                  ps[1] = pi + 11;
                  ps[2] = pi + 10;
                  ps[3] = pi + 9;
                  cs[2] = ci + 1;
                  cs[3] = ci + 2;
                  cs[0] = ci;
                  cs[1] = ci + 3;
                  break;
                case 1:
                  tmp1 = ps[12];
                  tmp2 = ps[13];
                  tmp3 = ps[14];
                  tmp4 = ps[15];
                  ps[12] = tmp4;
                  ps[13] = pi + 0;
                  ps[14] = pi + 1;
                  ps[15] = pi + 2;
                  ps[8] = tmp3;
                  ps[11] = pi + 3;
                  ps[4] = tmp2;
                  ps[7] = pi + 4;
                  ps[0] = tmp1;
                  ps[1] = pi + 7;
                  ps[2] = pi + 6;
                  ps[3] = pi + 5;
                  tmp1 = cs[2];
                  tmp2 = cs[3];
                  cs[2] = tmp2;
                  cs[3] = ci;
                  cs[0] = tmp1;
                  cs[1] = ci + 1;
                  break;
                case 2:
                  tmp1 = ps[15];
                  tmp2 = ps[11];
                  ps[12] = ps[3];
                  ps[13] = pi + 0;
                  ps[14] = pi + 1;
                  ps[15] = pi + 2;
                  ps[8] = ps[7];
                  ps[11] = pi + 3;
                  ps[4] = tmp2;
                  ps[7] = pi + 4;
                  ps[0] = tmp1;
                  ps[1] = pi + 7;
                  ps[2] = pi + 6;
                  ps[3] = pi + 5;
                  tmp1 = cs[3];
                  cs[2] = cs[1];
                  cs[3] = ci;
                  cs[0] = tmp1;
                  cs[1] = ci + 1;
                  break;
                case 3:
                  ps[12] = ps[0];
                  ps[13] = pi + 0;
                  ps[14] = pi + 1;
                  ps[15] = pi + 2;
                  ps[8] = ps[1];
                  ps[11] = pi + 3;
                  ps[4] = ps[2];
                  ps[7] = pi + 4;
                  ps[0] = ps[3];
                  ps[1] = pi + 7;
                  ps[2] = pi + 6;
                  ps[3] = pi + 5;
                  cs[2] = cs[0];
                  cs[3] = ci;
                  cs[0] = cs[1];
                  cs[1] = ci + 1;
                  break;
              }
              ps[5] = coords.length;
              coords.push([
                (-4 * coords[ps[0]][0] -
                  coords[ps[15]][0] +
                  6 * (coords[ps[4]][0] + coords[ps[1]][0]) -
                  2 * (coords[ps[12]][0] + coords[ps[3]][0]) +
                  3 * (coords[ps[13]][0] + coords[ps[7]][0])) /
                  9,
                (-4 * coords[ps[0]][1] -
                  coords[ps[15]][1] +
                  6 * (coords[ps[4]][1] + coords[ps[1]][1]) -
                  2 * (coords[ps[12]][1] + coords[ps[3]][1]) +
                  3 * (coords[ps[13]][1] + coords[ps[7]][1])) /
                  9,
              ]);
              ps[6] = coords.length;
              coords.push([
                (-4 * coords[ps[3]][0] -
                  coords[ps[12]][0] +
                  6 * (coords[ps[2]][0] + coords[ps[7]][0]) -
                  2 * (coords[ps[0]][0] + coords[ps[15]][0]) +
                  3 * (coords[ps[4]][0] + coords[ps[14]][0])) /
                  9,
                (-4 * coords[ps[3]][1] -
                  coords[ps[12]][1] +
                  6 * (coords[ps[2]][1] + coords[ps[7]][1]) -
                  2 * (coords[ps[0]][1] + coords[ps[15]][1]) +
                  3 * (coords[ps[4]][1] + coords[ps[14]][1])) /
                  9,
              ]);
              ps[9] = coords.length;
              coords.push([
                (-4 * coords[ps[12]][0] -
                  coords[ps[3]][0] +
                  6 * (coords[ps[8]][0] + coords[ps[13]][0]) -
                  2 * (coords[ps[0]][0] + coords[ps[15]][0]) +
                  3 * (coords[ps[11]][0] + coords[ps[1]][0])) /
                  9,
                (-4 * coords[ps[12]][1] -
                  coords[ps[3]][1] +
                  6 * (coords[ps[8]][1] + coords[ps[13]][1]) -
                  2 * (coords[ps[0]][1] + coords[ps[15]][1]) +
                  3 * (coords[ps[11]][1] + coords[ps[1]][1])) /
                  9,
              ]);
              ps[10] = coords.length;
              coords.push([
                (-4 * coords[ps[15]][0] -
                  coords[ps[0]][0] +
                  6 * (coords[ps[11]][0] + coords[ps[14]][0]) -
                  2 * (coords[ps[12]][0] + coords[ps[3]][0]) +
                  3 * (coords[ps[2]][0] + coords[ps[8]][0])) /
                  9,
                (-4 * coords[ps[15]][1] -
                  coords[ps[0]][1] +
                  6 * (coords[ps[11]][1] + coords[ps[14]][1]) -
                  2 * (coords[ps[12]][1] + coords[ps[3]][1]) +
                  3 * (coords[ps[2]][1] + coords[ps[8]][1])) /
                  9,
              ]);
              this.figures.push({
                type: "patch",
                coords: new Int32Array(ps),
                colors: new Int32Array(cs),
              });
            }
          }
          _decodeType7Shading(reader) {
            const coords = this.coords;
            const colors = this.colors;
            const ps = new Int32Array(16);
            const cs = new Int32Array(4);
            while (reader.hasData) {
              const f = reader.readFlag();
              if (!(0 <= f && f <= 3)) {
                throw new _util.FormatError("Unknown type7 flag");
              }
              const pi = coords.length;
              for (let i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {
                coords.push(reader.readCoordinate());
              }
              const ci = colors.length;
              for (let i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {
                colors.push(reader.readComponents());
              }
              let tmp1, tmp2, tmp3, tmp4;
              switch (f) {
                case 0:
                  ps[12] = pi + 3;
                  ps[13] = pi + 4;
                  ps[14] = pi + 5;
                  ps[15] = pi + 6;
                  ps[8] = pi + 2;
                  ps[9] = pi + 13;
                  ps[10] = pi + 14;
                  ps[11] = pi + 7;
                  ps[4] = pi + 1;
                  ps[5] = pi + 12;
                  ps[6] = pi + 15;
                  ps[7] = pi + 8;
                  ps[0] = pi;
                  ps[1] = pi + 11;
                  ps[2] = pi + 10;
                  ps[3] = pi + 9;
                  cs[2] = ci + 1;
                  cs[3] = ci + 2;
                  cs[0] = ci;
                  cs[1] = ci + 3;
                  break;
                case 1:
                  tmp1 = ps[12];
                  tmp2 = ps[13];
                  tmp3 = ps[14];
                  tmp4 = ps[15];
                  ps[12] = tmp4;
                  ps[13] = pi + 0;
                  ps[14] = pi + 1;
                  ps[15] = pi + 2;
                  ps[8] = tmp3;
                  ps[9] = pi + 9;
                  ps[10] = pi + 10;
                  ps[11] = pi + 3;
                  ps[4] = tmp2;
                  ps[5] = pi + 8;
                  ps[6] = pi + 11;
                  ps[7] = pi + 4;
                  ps[0] = tmp1;
                  ps[1] = pi + 7;
                  ps[2] = pi + 6;
                  ps[3] = pi + 5;
                  tmp1 = cs[2];
                  tmp2 = cs[3];
                  cs[2] = tmp2;
                  cs[3] = ci;
                  cs[0] = tmp1;
                  cs[1] = ci + 1;
                  break;
                case 2:
                  tmp1 = ps[15];
                  tmp2 = ps[11];
                  ps[12] = ps[3];
                  ps[13] = pi + 0;
                  ps[14] = pi + 1;
                  ps[15] = pi + 2;
                  ps[8] = ps[7];
                  ps[9] = pi + 9;
                  ps[10] = pi + 10;
                  ps[11] = pi + 3;
                  ps[4] = tmp2;
                  ps[5] = pi + 8;
                  ps[6] = pi + 11;
                  ps[7] = pi + 4;
                  ps[0] = tmp1;
                  ps[1] = pi + 7;
                  ps[2] = pi + 6;
                  ps[3] = pi + 5;
                  tmp1 = cs[3];
                  cs[2] = cs[1];
                  cs[3] = ci;
                  cs[0] = tmp1;
                  cs[1] = ci + 1;
                  break;
                case 3:
                  ps[12] = ps[0];
                  ps[13] = pi + 0;
                  ps[14] = pi + 1;
                  ps[15] = pi + 2;
                  ps[8] = ps[1];
                  ps[9] = pi + 9;
                  ps[10] = pi + 10;
                  ps[11] = pi + 3;
                  ps[4] = ps[2];
                  ps[5] = pi + 8;
                  ps[6] = pi + 11;
                  ps[7] = pi + 4;
                  ps[0] = ps[3];
                  ps[1] = pi + 7;
                  ps[2] = pi + 6;
                  ps[3] = pi + 5;
                  cs[2] = cs[0];
                  cs[3] = ci;
                  cs[0] = cs[1];
                  cs[1] = ci + 1;
                  break;
              }
              this.figures.push({
                type: "patch",
                coords: new Int32Array(ps),
                colors: new Int32Array(cs),
              });
            }
          }
          _buildFigureFromPatch(index) {
            const figure = this.figures[index];
            (0, _util.assert)(
              figure.type === "patch",
              "Unexpected patch mesh figure"
            );
            const coords = this.coords,
              colors = this.colors;
            const pi = figure.coords;
            const ci = figure.colors;
            const figureMinX = Math.min(
              coords[pi[0]][0],
              coords[pi[3]][0],
              coords[pi[12]][0],
              coords[pi[15]][0]
            );
            const figureMinY = Math.min(
              coords[pi[0]][1],
              coords[pi[3]][1],
              coords[pi[12]][1],
              coords[pi[15]][1]
            );
            const figureMaxX = Math.max(
              coords[pi[0]][0],
              coords[pi[3]][0],
              coords[pi[12]][0],
              coords[pi[15]][0]
            );
            const figureMaxY = Math.max(
              coords[pi[0]][1],
              coords[pi[3]][1],
              coords[pi[12]][1],
              coords[pi[15]][1]
            );
            let splitXBy = Math.ceil(
              ((figureMaxX - figureMinX) * MeshShading.TRIANGLE_DENSITY) /
                (this.bounds[2] - this.bounds[0])
            );
            splitXBy = Math.max(
              MeshShading.MIN_SPLIT_PATCH_CHUNKS_AMOUNT,
              Math.min(MeshShading.MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy)
            );
            let splitYBy = Math.ceil(
              ((figureMaxY - figureMinY) * MeshShading.TRIANGLE_DENSITY) /
                (this.bounds[3] - this.bounds[1])
            );
            splitYBy = Math.max(
              MeshShading.MIN_SPLIT_PATCH_CHUNKS_AMOUNT,
              Math.min(MeshShading.MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy)
            );
            const verticesPerRow = splitXBy + 1;
            const figureCoords = new Int32Array(
              (splitYBy + 1) * verticesPerRow
            );
            const figureColors = new Int32Array(
              (splitYBy + 1) * verticesPerRow
            );
            let k = 0;
            const cl = new Uint8Array(3),
              cr = new Uint8Array(3);
            const c0 = colors[ci[0]],
              c1 = colors[ci[1]],
              c2 = colors[ci[2]],
              c3 = colors[ci[3]];
            const bRow = getB(splitYBy),
              bCol = getB(splitXBy);
            for (let row = 0; row <= splitYBy; row++) {
              cl[0] = ((c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy) | 0;
              cl[1] = ((c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy) | 0;
              cl[2] = ((c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy) | 0;
              cr[0] = ((c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy) | 0;
              cr[1] = ((c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy) | 0;
              cr[2] = ((c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy) | 0;
              for (let col = 0; col <= splitXBy; col++, k++) {
                if (
                  (row === 0 || row === splitYBy) &&
                  (col === 0 || col === splitXBy)
                ) {
                  continue;
                }
                let x = 0,
                  y = 0;
                let q = 0;
                for (let i = 0; i <= 3; i++) {
                  for (let j = 0; j <= 3; j++, q++) {
                    const m = bRow[row][i] * bCol[col][j];
                    x += coords[pi[q]][0] * m;
                    y += coords[pi[q]][1] * m;
                  }
                }
                figureCoords[k] = coords.length;
                coords.push([x, y]);
                figureColors[k] = colors.length;
                const newColor = new Uint8Array(3);
                newColor[0] =
                  ((cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy) | 0;
                newColor[1] =
                  ((cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy) | 0;
                newColor[2] =
                  ((cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy) | 0;
                colors.push(newColor);
              }
            }
            figureCoords[0] = pi[0];
            figureColors[0] = ci[0];
            figureCoords[splitXBy] = pi[3];
            figureColors[splitXBy] = ci[1];
            figureCoords[verticesPerRow * splitYBy] = pi[12];
            figureColors[verticesPerRow * splitYBy] = ci[2];
            figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];
            figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];
            this.figures[index] = {
              type: "lattice",
              coords: figureCoords,
              colors: figureColors,
              verticesPerRow,
            };
          }
          _updateBounds() {
            let minX = this.coords[0][0],
              minY = this.coords[0][1],
              maxX = minX,
              maxY = minY;
            for (let i = 1, ii = this.coords.length; i < ii; i++) {
              const x = this.coords[i][0],
                y = this.coords[i][1];
              minX = minX > x ? x : minX;
              minY = minY > y ? y : minY;
              maxX = maxX < x ? x : maxX;
              maxY = maxY < y ? y : maxY;
            }
            this.bounds = [minX, minY, maxX, maxY];
          }
          _packData() {
            let i, ii, j, jj;
            const coords = this.coords;
            const coordsPacked = new Float32Array(coords.length * 2);
            for (i = 0, j = 0, ii = coords.length; i < ii; i++) {
              const xy = coords[i];
              coordsPacked[j++] = xy[0];
              coordsPacked[j++] = xy[1];
            }
            this.coords = coordsPacked;
            const colors = this.colors;
            const colorsPacked = new Uint8Array(colors.length * 3);
            for (i = 0, j = 0, ii = colors.length; i < ii; i++) {
              const c = colors[i];
              colorsPacked[j++] = c[0];
              colorsPacked[j++] = c[1];
              colorsPacked[j++] = c[2];
            }
            this.colors = colorsPacked;
            const figures = this.figures;
            for (i = 0, ii = figures.length; i < ii; i++) {
              const figure = figures[i],
                ps = figure.coords,
                cs = figure.colors;
              for (j = 0, jj = ps.length; j < jj; j++) {
                ps[j] *= 2;
                cs[j] *= 3;
              }
            }
          }
          getIR() {
            return [
              "Mesh",
              this.shadingType,
              this.coords,
              this.colors,
              this.figures,
              this.bounds,
              this.bbox,
              this.background,
            ];
          }
        }
        class DummyShading extends BaseShading {
          getIR() {
            return ["Dummy"];
          }
        }
        function getTilingPatternIR(operatorList, dict, color) {
          const matrix = dict.getArray("Matrix");
          const bbox = _util.Util.normalizeRect(dict.getArray("BBox"));
          const xstep = dict.get("XStep");
          const ystep = dict.get("YStep");
          const paintType = dict.get("PaintType");
          const tilingType = dict.get("TilingType");
          if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {
            throw new _util.FormatError(
              `Invalid getTilingPatternIR /BBox array: [${bbox}].`
            );
          }
          return [
            "TilingPattern",
            color,
            operatorList,
            matrix,
            bbox,
            xstep,
            ystep,
            paintType,
            tilingType,
          ];
        }

        /***/
      },
      /* 51 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.getXfaFontDict = getXfaFontDict;
        exports.getXfaFontName = getXfaFontName;
        var _calibri_factors = __w_pdfjs_require__(52);
        var _primitives = __w_pdfjs_require__(4);
        var _helvetica_factors = __w_pdfjs_require__(53);
        var _liberationsans_widths = __w_pdfjs_require__(54);
        var _myriadpro_factors = __w_pdfjs_require__(55);
        var _segoeui_factors = __w_pdfjs_require__(56);
        var _core_utils = __w_pdfjs_require__(3);
        var _fonts_utils = __w_pdfjs_require__(38);
        const getXFAFontMap = (0, _core_utils.getLookupTableFactory)(function (
          t
        ) {
          t["MyriadPro-Regular"] = t["PdfJS-Fallback-Regular"] = {
            name: "LiberationSans-Regular",
            factors: _myriadpro_factors.MyriadProRegularFactors,
            baseWidths: _liberationsans_widths.LiberationSansRegularWidths,
            baseMapping: _liberationsans_widths.LiberationSansRegularMapping,
            metrics: _myriadpro_factors.MyriadProRegularMetrics,
          };
          t["MyriadPro-Bold"] = t["PdfJS-Fallback-Bold"] = {
            name: "LiberationSans-Bold",
            factors: _myriadpro_factors.MyriadProBoldFactors,
            baseWidths: _liberationsans_widths.LiberationSansBoldWidths,
            baseMapping: _liberationsans_widths.LiberationSansBoldMapping,
            metrics: _myriadpro_factors.MyriadProBoldMetrics,
          };
          t["MyriadPro-It"] =
            t["MyriadPro-Italic"] =
            t["PdfJS-Fallback-Italic"] =
              {
                name: "LiberationSans-Italic",
                factors: _myriadpro_factors.MyriadProItalicFactors,
                baseWidths: _liberationsans_widths.LiberationSansItalicWidths,
                baseMapping: _liberationsans_widths.LiberationSansItalicMapping,
                metrics: _myriadpro_factors.MyriadProItalicMetrics,
              };
          t["MyriadPro-BoldIt"] =
            t["MyriadPro-BoldItalic"] =
            t["PdfJS-Fallback-BoldItalic"] =
              {
                name: "LiberationSans-BoldItalic",
                factors: _myriadpro_factors.MyriadProBoldItalicFactors,
                baseWidths:
                  _liberationsans_widths.LiberationSansBoldItalicWidths,
                baseMapping:
                  _liberationsans_widths.LiberationSansBoldItalicMapping,
                metrics: _myriadpro_factors.MyriadProBoldItalicMetrics,
              };
          t.ArialMT =
            t.Arial =
            t["Arial-Regular"] =
              {
                name: "LiberationSans-Regular",
                baseWidths: _liberationsans_widths.LiberationSansRegularWidths,
                baseMapping:
                  _liberationsans_widths.LiberationSansRegularMapping,
              };
          t["Arial-BoldMT"] = t["Arial-Bold"] = {
            name: "LiberationSans-Bold",
            baseWidths: _liberationsans_widths.LiberationSansBoldWidths,
            baseMapping: _liberationsans_widths.LiberationSansBoldMapping,
          };
          t["Arial-ItalicMT"] = t["Arial-Italic"] = {
            name: "LiberationSans-Italic",
            baseWidths: _liberationsans_widths.LiberationSansItalicWidths,
            baseMapping: _liberationsans_widths.LiberationSansItalicMapping,
          };
          t["Arial-BoldItalicMT"] = t["Arial-BoldItalic"] = {
            name: "LiberationSans-BoldItalic",
            baseWidths: _liberationsans_widths.LiberationSansBoldItalicWidths,
            baseMapping: _liberationsans_widths.LiberationSansBoldItalicMapping,
          };
          t["Calibri-Regular"] = {
            name: "LiberationSans-Regular",
            factors: _calibri_factors.CalibriRegularFactors,
            baseWidths: _liberationsans_widths.LiberationSansRegularWidths,
            baseMapping: _liberationsans_widths.LiberationSansRegularMapping,
            metrics: _calibri_factors.CalibriRegularMetrics,
          };
          t["Calibri-Bold"] = {
            name: "LiberationSans-Bold",
            factors: _calibri_factors.CalibriBoldFactors,
            baseWidths: _liberationsans_widths.LiberationSansBoldWidths,
            baseMapping: _liberationsans_widths.LiberationSansBoldMapping,
            metrics: _calibri_factors.CalibriBoldMetrics,
          };
          t["Calibri-Italic"] = {
            name: "LiberationSans-Italic",
            factors: _calibri_factors.CalibriItalicFactors,
            baseWidths: _liberationsans_widths.LiberationSansItalicWidths,
            baseMapping: _liberationsans_widths.LiberationSansItalicMapping,
            metrics: _calibri_factors.CalibriItalicMetrics,
          };
          t["Calibri-BoldItalic"] = {
            name: "LiberationSans-BoldItalic",
            factors: _calibri_factors.CalibriBoldItalicFactors,
            baseWidths: _liberationsans_widths.LiberationSansBoldItalicWidths,
            baseMapping: _liberationsans_widths.LiberationSansBoldItalicMapping,
            metrics: _calibri_factors.CalibriBoldItalicMetrics,
          };
          t["Segoeui-Regular"] = {
            name: "LiberationSans-Regular",
            factors: _segoeui_factors.SegoeuiRegularFactors,
            baseWidths: _liberationsans_widths.LiberationSansRegularWidths,
            baseMapping: _liberationsans_widths.LiberationSansRegularMapping,
            metrics: _segoeui_factors.SegoeuiRegularMetrics,
          };
          t["Segoeui-Bold"] = {
            name: "LiberationSans-Bold",
            factors: _segoeui_factors.SegoeuiBoldFactors,
            baseWidths: _liberationsans_widths.LiberationSansBoldWidths,
            baseMapping: _liberationsans_widths.LiberationSansBoldMapping,
            metrics: _segoeui_factors.SegoeuiBoldMetrics,
          };
          t["Segoeui-Italic"] = {
            name: "LiberationSans-Italic",
            factors: _segoeui_factors.SegoeuiItalicFactors,
            baseWidths: _liberationsans_widths.LiberationSansItalicWidths,
            baseMapping: _liberationsans_widths.LiberationSansItalicMapping,
            metrics: _segoeui_factors.SegoeuiItalicMetrics,
          };
          t["Segoeui-BoldItalic"] = {
            name: "LiberationSans-BoldItalic",
            factors: _segoeui_factors.SegoeuiBoldItalicFactors,
            baseWidths: _liberationsans_widths.LiberationSansBoldItalicWidths,
            baseMapping: _liberationsans_widths.LiberationSansBoldItalicMapping,
            metrics: _segoeui_factors.SegoeuiBoldItalicMetrics,
          };
          t["Helvetica-Regular"] = t.Helvetica = {
            name: "LiberationSans-Regular",
            factors: _helvetica_factors.HelveticaRegularFactors,
            baseWidths: _liberationsans_widths.LiberationSansRegularWidths,
            baseMapping: _liberationsans_widths.LiberationSansRegularMapping,
            metrics: _helvetica_factors.HelveticaRegularMetrics,
          };
          t["Helvetica-Bold"] = {
            name: "LiberationSans-Bold",
            factors: _helvetica_factors.HelveticaBoldFactors,
            baseWidths: _liberationsans_widths.LiberationSansBoldWidths,
            baseMapping: _liberationsans_widths.LiberationSansBoldMapping,
            metrics: _helvetica_factors.HelveticaBoldMetrics,
          };
          t["Helvetica-Italic"] = {
            name: "LiberationSans-Italic",
            factors: _helvetica_factors.HelveticaItalicFactors,
            baseWidths: _liberationsans_widths.LiberationSansItalicWidths,
            baseMapping: _liberationsans_widths.LiberationSansItalicMapping,
            metrics: _helvetica_factors.HelveticaItalicMetrics,
          };
          t["Helvetica-BoldItalic"] = {
            name: "LiberationSans-BoldItalic",
            factors: _helvetica_factors.HelveticaBoldItalicFactors,
            baseWidths: _liberationsans_widths.LiberationSansBoldItalicWidths,
            baseMapping: _liberationsans_widths.LiberationSansBoldItalicMapping,
            metrics: _helvetica_factors.HelveticaBoldItalicMetrics,
          };
        });
        function getXfaFontName(name) {
          const fontName = (0, _fonts_utils.normalizeFontName)(name);
          const fontMap = getXFAFontMap();
          return fontMap[fontName];
        }
        function getXfaFontWidths(name) {
          const info = getXfaFontName(name);
          if (!info) {
            return null;
          }
          const { baseWidths, baseMapping, factors } = info;
          const rescaledBaseWidths = !factors
            ? baseWidths
            : baseWidths.map((w, i) => w * factors[i]);
          let currentCode = -2;
          let currentArray;
          const newWidths = [];
          for (const [unicode, glyphIndex] of baseMapping
            .map((charUnicode, index) => [charUnicode, index])
            .sort(([unicode1], [unicode2]) => unicode1 - unicode2)) {
            if (unicode === -1) {
              continue;
            }
            if (unicode === currentCode + 1) {
              currentArray.push(rescaledBaseWidths[glyphIndex]);
              currentCode += 1;
            } else {
              currentCode = unicode;
              currentArray = [rescaledBaseWidths[glyphIndex]];
              newWidths.push(unicode, currentArray);
            }
          }
          return newWidths;
        }
        function getXfaFontDict(name) {
          const widths = getXfaFontWidths(name);
          const dict = new _primitives.Dict(null);
          dict.set("BaseFont", _primitives.Name.get(name));
          dict.set("Type", _primitives.Name.get("Font"));
          dict.set("Subtype", _primitives.Name.get("CIDFontType2"));
          dict.set("Encoding", _primitives.Name.get("Identity-H"));
          dict.set("CIDToGIDMap", _primitives.Name.get("Identity"));
          dict.set("W", widths);
          dict.set("FirstChar", widths[0]);
          dict.set("LastChar", widths.at(-2) + widths.at(-1).length - 1);
          const descriptor = new _primitives.Dict(null);
          dict.set("FontDescriptor", descriptor);
          const systemInfo = new _primitives.Dict(null);
          systemInfo.set("Ordering", "Identity");
          systemInfo.set("Registry", "Adobe");
          systemInfo.set("Supplement", 0);
          dict.set("CIDSystemInfo", systemInfo);
          return dict;
        }

        /***/
      },
      /* 52 */
      /***/ (__unused_webpack_module, exports) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.CalibriRegularMetrics =
          exports.CalibriRegularFactors =
          exports.CalibriItalicMetrics =
          exports.CalibriItalicFactors =
          exports.CalibriBoldMetrics =
          exports.CalibriBoldItalicMetrics =
          exports.CalibriBoldItalicFactors =
          exports.CalibriBoldFactors =
            void 0;
        const CalibriBoldFactors = [
          1.3877, 1, 1, 1, 0.97801, 0.92482, 0.89552, 0.91133, 0.81988, 0.97566,
          0.98152, 0.93548, 0.93548, 1.2798, 0.85284, 0.92794, 1, 0.96134,
          1.54657, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133,
          0.91133, 0.91133, 0.91133, 0.91133, 0.82845, 0.82845, 0.85284,
          0.85284, 0.85284, 0.75859, 0.92138, 0.83908, 0.7762, 0.73293, 0.87289,
          0.73133, 0.7514, 0.81921, 0.87356, 0.95958, 0.59526, 0.75727, 0.69225,
          1.04924, 0.9121, 0.86943, 0.79795, 0.88198, 0.77958, 0.70864, 0.81055,
          0.90399, 0.88653, 0.96017, 0.82577, 0.77892, 0.78257, 0.97507,
          1.54657, 0.97507, 0.85284, 0.89552, 0.90176, 0.88762, 0.8785, 0.75241,
          0.8785, 0.90518, 0.95015, 0.77618, 0.8785, 0.88401, 0.91916, 0.86304,
          0.88401, 0.91488, 0.8785, 0.8801, 0.8785, 0.8785, 0.91343, 0.7173,
          1.04106, 0.8785, 0.85075, 0.95794, 0.82616, 0.85162, 0.79492, 0.88331,
          1.69808, 0.88331, 0.85284, 0.97801, 0.89552, 0.91133, 0.89552,
          0.91133, 1.7801, 0.89552, 1.24487, 1.13254, 1.12401, 0.96839, 0.85284,
          0.68787, 0.70645, 0.85592, 0.90747, 1.01466, 1.0088, 0.90323, 1,
          1.07463, 1, 0.91056, 0.75806, 1.19118, 0.96839, 0.78864, 0.82845,
          0.84133, 0.75859, 0.83908, 0.83908, 0.83908, 0.83908, 0.83908,
          0.83908, 0.77539, 0.73293, 0.73133, 0.73133, 0.73133, 0.73133,
          0.95958, 0.95958, 0.95958, 0.95958, 0.88506, 0.9121, 0.86943, 0.86943,
          0.86943, 0.86943, 0.86943, 0.85284, 0.87508, 0.90399, 0.90399,
          0.90399, 0.90399, 0.77892, 0.79795, 0.90807, 0.88762, 0.88762,
          0.88762, 0.88762, 0.88762, 0.88762, 0.8715, 0.75241, 0.90518, 0.90518,
          0.90518, 0.90518, 0.88401, 0.88401, 0.88401, 0.88401, 0.8785, 0.8785,
          0.8801, 0.8801, 0.8801, 0.8801, 0.8801, 0.90747, 0.89049, 0.8785,
          0.8785, 0.8785, 0.8785, 0.85162, 0.8785, 0.85162, 0.83908, 0.88762,
          0.83908, 0.88762, 0.83908, 0.88762, 0.73293, 0.75241, 0.73293,
          0.75241, 0.73293, 0.75241, 0.73293, 0.75241, 0.87289, 0.83016,
          0.88506, 0.93125, 0.73133, 0.90518, 0.73133, 0.90518, 0.73133,
          0.90518, 0.73133, 0.90518, 0.73133, 0.90518, 0.81921, 0.77618,
          0.81921, 0.77618, 0.81921, 0.77618, 1, 1, 0.87356, 0.8785, 0.91075,
          0.89608, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401,
          0.95958, 0.88401, 0.95958, 0.88401, 0.76229, 0.90167, 0.59526,
          0.91916, 1, 1, 0.86304, 0.69225, 0.88401, 1, 1, 0.70424, 0.79468,
          0.91926, 0.88175, 0.70823, 0.94903, 0.9121, 0.8785, 1, 1, 0.9121,
          0.8785, 0.87802, 0.88656, 0.8785, 0.86943, 0.8801, 0.86943, 0.8801,
          0.86943, 0.8801, 0.87402, 0.89291, 0.77958, 0.91343, 1, 1, 0.77958,
          0.91343, 0.70864, 0.7173, 0.70864, 0.7173, 0.70864, 0.7173, 0.70864,
          0.7173, 1, 1, 0.81055, 0.75841, 0.81055, 1.06452, 0.90399, 0.8785,
          0.90399, 0.8785, 0.90399, 0.8785, 0.90399, 0.8785, 0.90399, 0.8785,
          0.90399, 0.8785, 0.96017, 0.95794, 0.77892, 0.85162, 0.77892, 0.78257,
          0.79492, 0.78257, 0.79492, 0.78257, 0.79492, 0.9297, 0.56892, 0.83908,
          0.88762, 0.77539, 0.8715, 0.87508, 0.89049, 1, 1, 0.81055, 1.04106,
          1.20528, 1.20528, 1, 1.15543, 0.70674, 0.98387, 0.94721, 1.33431,
          1.45894, 0.95161, 1.06303, 0.83908, 0.80352, 0.57184, 0.6965, 0.56289,
          0.82001, 0.56029, 0.81235, 1.02988, 0.83908, 0.7762, 0.68156, 0.80367,
          0.73133, 0.78257, 0.87356, 0.86943, 0.95958, 0.75727, 0.89019,
          1.04924, 0.9121, 0.7648, 0.86943, 0.87356, 0.79795, 0.78275, 0.81055,
          0.77892, 0.9762, 0.82577, 0.99819, 0.84896, 0.95958, 0.77892, 0.96108,
          1.01407, 0.89049, 1.02988, 0.94211, 0.96108, 0.8936, 0.84021, 0.87842,
          0.96399, 0.79109, 0.89049, 1.00813, 1.02988, 0.86077, 0.87445,
          0.92099, 0.84723, 0.86513, 0.8801, 0.75638, 0.85714, 0.78216, 0.79586,
          0.87965, 0.94211, 0.97747, 0.78287, 0.97926, 0.84971, 1.02988,
          0.94211, 0.8801, 0.94211, 0.84971, 0.73133, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 0.90264, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 0.90518, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90548, 1, 1,
          1, 1, 1, 1, 0.96017, 0.95794, 0.96017, 0.95794, 0.96017, 0.95794,
          0.77892, 0.85162, 1, 1, 0.89552, 0.90527, 1, 0.90363, 0.92794,
          0.92794, 0.92794, 0.92794, 0.87012, 0.87012, 0.87012, 0.89552,
          0.89552, 1.42259, 0.71143, 1.06152, 1, 1, 1.03372, 1.03372, 0.97171,
          1.4956, 2.2807, 0.93835, 0.83406, 0.91133, 0.84107, 0.91133, 1, 1, 1,
          0.72021, 1, 1.23108, 0.83489, 0.88525, 0.88525, 0.81499, 0.90527,
          1.81055, 0.90527, 1.81055, 1.31006, 1.53711, 0.94434, 1.08696, 1,
          0.95018, 0.77192, 0.85284, 0.90747, 1.17534, 0.69825, 0.9716, 1.37077,
          0.90747, 0.90747, 0.85356, 0.90747, 0.90747, 1.44947, 0.85284, 0.8941,
          0.8941, 0.70572, 0.8, 0.70572, 0.70572, 0.70572, 0.70572, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.99862, 0.99862,
          1, 1, 1, 1, 1, 1.08004, 0.91027, 1, 1, 1, 0.99862, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 0.90727, 0.90727, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1,
        ];
        exports.CalibriBoldFactors = CalibriBoldFactors;
        const CalibriBoldMetrics = {
          lineHeight: 1.2207,
          lineGap: 0.2207,
        };
        exports.CalibriBoldMetrics = CalibriBoldMetrics;
        const CalibriBoldItalicFactors = [
          1.3877, 1, 1, 1, 0.97801, 0.92482, 0.89552, 0.91133, 0.81988, 0.97566,
          0.98152, 0.93548, 0.93548, 1.2798, 0.85284, 0.92794, 1, 0.96134,
          1.56239, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133,
          0.91133, 0.91133, 0.91133, 0.91133, 0.82845, 0.82845, 0.85284,
          0.85284, 0.85284, 0.75859, 0.92138, 0.83908, 0.7762, 0.71805, 0.87289,
          0.73133, 0.7514, 0.81921, 0.87356, 0.95958, 0.59526, 0.75727, 0.69225,
          1.04924, 0.90872, 0.85938, 0.79795, 0.87068, 0.77958, 0.69766,
          0.81055, 0.90399, 0.88653, 0.96068, 0.82577, 0.77892, 0.78257,
          0.97507, 1.529, 0.97507, 0.85284, 0.89552, 0.90176, 0.94908, 0.86411,
          0.74012, 0.86411, 0.88323, 0.95015, 0.86411, 0.86331, 0.88401,
          0.91916, 0.86304, 0.88401, 0.9039, 0.86331, 0.86331, 0.86411, 0.86411,
          0.90464, 0.70852, 1.04106, 0.86331, 0.84372, 0.95794, 0.82616,
          0.84548, 0.79492, 0.88331, 1.69808, 0.88331, 0.85284, 0.97801,
          0.89552, 0.91133, 0.89552, 0.91133, 1.7801, 0.89552, 1.24487, 1.13254,
          1.19129, 0.96839, 0.85284, 0.68787, 0.70645, 0.85592, 0.90747,
          1.01466, 1.0088, 0.90323, 1, 1.07463, 1, 0.91056, 0.75806, 1.19118,
          0.96839, 0.78864, 0.82845, 0.84133, 0.75859, 0.83908, 0.83908,
          0.83908, 0.83908, 0.83908, 0.83908, 0.77539, 0.71805, 0.73133,
          0.73133, 0.73133, 0.73133, 0.95958, 0.95958, 0.95958, 0.95958,
          0.88506, 0.90872, 0.85938, 0.85938, 0.85938, 0.85938, 0.85938,
          0.85284, 0.87068, 0.90399, 0.90399, 0.90399, 0.90399, 0.77892,
          0.79795, 0.90807, 0.94908, 0.94908, 0.94908, 0.94908, 0.94908,
          0.94908, 0.85887, 0.74012, 0.88323, 0.88323, 0.88323, 0.88323,
          0.88401, 0.88401, 0.88401, 0.88401, 0.8785, 0.86331, 0.86331, 0.86331,
          0.86331, 0.86331, 0.86331, 0.90747, 0.89049, 0.86331, 0.86331,
          0.86331, 0.86331, 0.84548, 0.86411, 0.84548, 0.83908, 0.94908,
          0.83908, 0.94908, 0.83908, 0.94908, 0.71805, 0.74012, 0.71805,
          0.74012, 0.71805, 0.74012, 0.71805, 0.74012, 0.87289, 0.79538,
          0.88506, 0.92726, 0.73133, 0.88323, 0.73133, 0.88323, 0.73133,
          0.88323, 0.73133, 0.88323, 0.73133, 0.88323, 0.81921, 0.86411,
          0.81921, 0.86411, 0.81921, 0.86411, 1, 1, 0.87356, 0.86331, 0.91075,
          0.8777, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958,
          0.88401, 0.95958, 0.88401, 0.76467, 0.90167, 0.59526, 0.91916, 1, 1,
          0.86304, 0.69225, 0.88401, 1, 1, 0.70424, 0.77312, 0.91926, 0.88175,
          0.70823, 0.94903, 0.90872, 0.86331, 1, 1, 0.90872, 0.86331, 0.86906,
          0.88116, 0.86331, 0.85938, 0.86331, 0.85938, 0.86331, 0.85938,
          0.86331, 0.87402, 0.86549, 0.77958, 0.90464, 1, 1, 0.77958, 0.90464,
          0.69766, 0.70852, 0.69766, 0.70852, 0.69766, 0.70852, 0.69766,
          0.70852, 1, 1, 0.81055, 0.75841, 0.81055, 1.06452, 0.90399, 0.86331,
          0.90399, 0.86331, 0.90399, 0.86331, 0.90399, 0.86331, 0.90399,
          0.86331, 0.90399, 0.86331, 0.96068, 0.95794, 0.77892, 0.84548,
          0.77892, 0.78257, 0.79492, 0.78257, 0.79492, 0.78257, 0.79492, 0.9297,
          0.56892, 0.83908, 0.94908, 0.77539, 0.85887, 0.87068, 0.89049, 1, 1,
          0.81055, 1.04106, 1.20528, 1.20528, 1, 1.15543, 0.70088, 0.98387,
          0.94721, 1.33431, 1.45894, 0.95161, 1.48387, 0.83908, 0.80352,
          0.57118, 0.6965, 0.56347, 0.79179, 0.55853, 0.80346, 1.02988, 0.83908,
          0.7762, 0.67174, 0.86036, 0.73133, 0.78257, 0.87356, 0.86441, 0.95958,
          0.75727, 0.89019, 1.04924, 0.90872, 0.74889, 0.85938, 0.87891,
          0.79795, 0.7957, 0.81055, 0.77892, 0.97447, 0.82577, 0.97466, 0.87179,
          0.95958, 0.77892, 0.94252, 0.95612, 0.8753, 1.02988, 0.92733, 0.94252,
          0.87411, 0.84021, 0.8728, 0.95612, 0.74081, 0.8753, 1.02189, 1.02988,
          0.84814, 0.87445, 0.91822, 0.84723, 0.85668, 0.86331, 0.81344,
          0.87581, 0.76422, 0.82046, 0.96057, 0.92733, 0.99375, 0.78022,
          0.95452, 0.86015, 1.02988, 0.92733, 0.86331, 0.92733, 0.86015,
          0.73133, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90631, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.88323, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 0.85174, 1, 1, 1, 1, 1, 1, 0.96068, 0.95794,
          0.96068, 0.95794, 0.96068, 0.95794, 0.77892, 0.84548, 1, 1, 0.89552,
          0.90527, 1, 0.90363, 0.92794, 0.92794, 0.92794, 0.89807, 0.87012,
          0.87012, 0.87012, 0.89552, 0.89552, 1.42259, 0.71094, 1.06152, 1, 1,
          1.03372, 1.03372, 0.97171, 1.4956, 2.2807, 0.92972, 0.83406, 0.91133,
          0.83326, 0.91133, 1, 1, 1, 0.72021, 1, 1.23108, 0.83489, 0.88525,
          0.88525, 0.81499, 0.90616, 1.81055, 0.90527, 1.81055, 1.3107, 1.53711,
          0.94434, 1.08696, 1, 0.95018, 0.77192, 0.85284, 0.90747, 1.17534,
          0.69825, 0.9716, 1.37077, 0.90747, 0.90747, 0.85356, 0.90747, 0.90747,
          1.44947, 0.85284, 0.8941, 0.8941, 0.70572, 0.8, 0.70572, 0.70572,
          0.70572, 0.70572, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 0.99862, 0.99862, 1, 1, 1, 1, 1, 1.08004, 0.91027, 1, 1,
          1, 0.99862, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90727, 0.90727, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        ];
        exports.CalibriBoldItalicFactors = CalibriBoldItalicFactors;
        const CalibriBoldItalicMetrics = {
          lineHeight: 1.2207,
          lineGap: 0.2207,
        };
        exports.CalibriBoldItalicMetrics = CalibriBoldItalicMetrics;
        const CalibriItalicFactors = [
          1.3877, 1, 1, 1, 1.17223, 1.1293, 0.89552, 0.91133, 0.80395, 1.02269,
          1.15601, 0.91056, 0.91056, 1.2798, 0.85284, 0.89807, 1, 0.90861,
          1.39543, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133,
          0.91133, 0.91133, 0.91133, 0.91133, 0.96309, 0.96309, 0.85284,
          0.85284, 0.85284, 0.83319, 0.88071, 0.8675, 0.81552, 0.72346, 0.85193,
          0.73206, 0.7522, 0.81105, 0.86275, 0.90685, 0.6377, 0.77892, 0.75593,
          1.02638, 0.89249, 0.84118, 0.77452, 0.85374, 0.75186, 0.67789,
          0.79776, 0.88844, 0.85066, 0.94309, 0.77818, 0.7306, 0.76659, 1.10369,
          1.38313, 1.10369, 1.06139, 0.89552, 0.8739, 0.9245, 0.9245, 0.83203,
          0.9245, 0.85865, 1.09842, 0.9245, 0.9245, 1.03297, 1.07692, 0.90918,
          1.03297, 0.94959, 0.9245, 0.92274, 0.9245, 0.9245, 1.02933, 0.77832,
          1.20562, 0.9245, 0.8916, 0.98986, 0.86621, 0.89453, 0.79004, 0.94152,
          1.77256, 0.94152, 0.85284, 0.97801, 0.89552, 0.91133, 0.89552,
          0.91133, 1.91729, 0.89552, 1.17889, 1.13254, 1.16359, 0.92098,
          0.85284, 0.68787, 0.71353, 0.84737, 0.90747, 1.0088, 1.0044, 0.87683,
          1, 1.09091, 1, 0.92229, 0.739, 1.15642, 0.92098, 0.76288, 0.80504,
          0.80972, 0.75859, 0.8675, 0.8675, 0.8675, 0.8675, 0.8675, 0.8675,
          0.76318, 0.72346, 0.73206, 0.73206, 0.73206, 0.73206, 0.90685,
          0.90685, 0.90685, 0.90685, 0.86477, 0.89249, 0.84118, 0.84118,
          0.84118, 0.84118, 0.84118, 0.85284, 0.84557, 0.88844, 0.88844,
          0.88844, 0.88844, 0.7306, 0.77452, 0.86331, 0.9245, 0.9245, 0.9245,
          0.9245, 0.9245, 0.9245, 0.84843, 0.83203, 0.85865, 0.85865, 0.85865,
          0.85865, 0.82601, 0.82601, 0.82601, 0.82601, 0.94469, 0.9245, 0.92274,
          0.92274, 0.92274, 0.92274, 0.92274, 0.90747, 0.86651, 0.9245, 0.9245,
          0.9245, 0.9245, 0.89453, 0.9245, 0.89453, 0.8675, 0.9245, 0.8675,
          0.9245, 0.8675, 0.9245, 0.72346, 0.83203, 0.72346, 0.83203, 0.72346,
          0.83203, 0.72346, 0.83203, 0.85193, 0.8875, 0.86477, 0.99034, 0.73206,
          0.85865, 0.73206, 0.85865, 0.73206, 0.85865, 0.73206, 0.85865,
          0.73206, 0.85865, 0.81105, 0.9245, 0.81105, 0.9245, 0.81105, 0.9245,
          1, 1, 0.86275, 0.9245, 0.90872, 0.93591, 0.90685, 0.82601, 0.90685,
          0.82601, 0.90685, 0.82601, 0.90685, 1.03297, 0.90685, 0.82601,
          0.77896, 1.05611, 0.6377, 1.07692, 1, 1, 0.90918, 0.75593, 1.03297, 1,
          1, 0.76032, 0.9375, 0.98156, 0.93407, 0.77261, 1.11429, 0.89249,
          0.9245, 1, 1, 0.89249, 0.9245, 0.92534, 0.86698, 0.9245, 0.84118,
          0.92274, 0.84118, 0.92274, 0.84118, 0.92274, 0.8667, 0.86291, 0.75186,
          1.02933, 1, 1, 0.75186, 1.02933, 0.67789, 0.77832, 0.67789, 0.77832,
          0.67789, 0.77832, 0.67789, 0.77832, 1, 1, 0.79776, 0.97655, 0.79776,
          1.23023, 0.88844, 0.9245, 0.88844, 0.9245, 0.88844, 0.9245, 0.88844,
          0.9245, 0.88844, 0.9245, 0.88844, 0.9245, 0.94309, 0.98986, 0.7306,
          0.89453, 0.7306, 0.76659, 0.79004, 0.76659, 0.79004, 0.76659, 0.79004,
          1.09231, 0.54873, 0.8675, 0.9245, 0.76318, 0.84843, 0.84557, 0.86651,
          1, 1, 0.79776, 1.20562, 1.18622, 1.18622, 1, 1.1437, 0.67009, 0.96334,
          0.93695, 1.35191, 1.40909, 0.95161, 1.48387, 0.8675, 0.90861, 0.6192,
          0.7363, 0.64824, 0.82411, 0.56321, 0.85696, 1.23516, 0.8675, 0.81552,
          0.7286, 0.84134, 0.73206, 0.76659, 0.86275, 0.84369, 0.90685, 0.77892,
          0.85871, 1.02638, 0.89249, 0.75828, 0.84118, 0.85984, 0.77452,
          0.76466, 0.79776, 0.7306, 0.90782, 0.77818, 0.903, 0.87291, 0.90685,
          0.7306, 0.99058, 1.03667, 0.94635, 1.23516, 0.9849, 0.99058, 0.92393,
          0.8916, 0.942, 1.03667, 0.75026, 0.94635, 1.0297, 1.23516, 0.90918,
          0.94048, 0.98217, 0.89746, 0.84153, 0.92274, 0.82507, 0.88832,
          0.84438, 0.88178, 1.03525, 0.9849, 1.00225, 0.78086, 0.97248, 0.89404,
          1.23516, 0.9849, 0.92274, 0.9849, 0.89404, 0.73206, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 0.89693, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 0.85865, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          0.90933, 1, 1, 1, 1, 1, 1, 0.94309, 0.98986, 0.94309, 0.98986,
          0.94309, 0.98986, 0.7306, 0.89453, 1, 1, 0.89552, 0.90527, 1, 0.90186,
          1.12308, 1.12308, 1.12308, 1.12308, 1.2566, 1.2566, 1.2566, 0.89552,
          0.89552, 1.42259, 0.68994, 1.03809, 1, 1, 1.0176, 1.0176, 1.11523,
          1.4956, 2.01462, 0.97858, 0.82616, 0.91133, 0.83437, 0.91133, 1, 1, 1,
          0.70508, 1, 1.23108, 0.79801, 0.84426, 0.84426, 0.774, 0.90572,
          1.81055, 0.90749, 1.81055, 1.28809, 1.55469, 0.94434, 1.07806, 1,
          0.97094, 0.7589, 0.85284, 0.90747, 1.19658, 0.69825, 0.97622, 1.33512,
          0.90747, 0.90747, 0.85284, 0.90747, 0.90747, 1.44947, 0.85284, 0.8941,
          0.8941, 0.70572, 0.8, 0.70572, 0.70572, 0.70572, 0.70572, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.99862, 0.99862,
          1, 1, 1, 1, 1, 1.0336, 0.91027, 1, 1, 1, 0.99862, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1.05859, 1.05859, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1,
        ];
        exports.CalibriItalicFactors = CalibriItalicFactors;
        const CalibriItalicMetrics = {
          lineHeight: 1.2207,
          lineGap: 0.2207,
        };
        exports.CalibriItalicMetrics = CalibriItalicMetrics;
        const CalibriRegularFactors = [
          1.3877, 1, 1, 1, 1.17223, 1.1293, 0.89552, 0.91133, 0.80395, 1.02269,
          1.15601, 0.91056, 0.91056, 1.2798, 0.85284, 0.89807, 1, 0.90861,
          1.39016, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133,
          0.91133, 0.91133, 0.91133, 0.91133, 0.96309, 0.96309, 0.85284,
          0.85284, 0.85284, 0.83319, 0.88071, 0.8675, 0.81552, 0.73834, 0.85193,
          0.73206, 0.7522, 0.81105, 0.86275, 0.90685, 0.6377, 0.77892, 0.75593,
          1.02638, 0.89385, 0.85122, 0.77452, 0.86503, 0.75186, 0.68887,
          0.79776, 0.88844, 0.85066, 0.94258, 0.77818, 0.7306, 0.76659, 1.10369,
          1.39016, 1.10369, 1.06139, 0.89552, 0.8739, 0.86128, 0.94469, 0.8457,
          0.94469, 0.89464, 1.09842, 0.84636, 0.94469, 1.03297, 1.07692,
          0.90918, 1.03297, 0.95897, 0.94469, 0.9482, 0.94469, 0.94469, 1.04692,
          0.78223, 1.20562, 0.94469, 0.90332, 0.98986, 0.86621, 0.90527,
          0.79004, 0.94152, 1.77256, 0.94152, 0.85284, 0.97801, 0.89552,
          0.91133, 0.89552, 0.91133, 1.91729, 0.89552, 1.17889, 1.13254,
          1.08707, 0.92098, 0.85284, 0.68787, 0.71353, 0.84737, 0.90747, 1.0088,
          1.0044, 0.87683, 1, 1.09091, 1, 0.92229, 0.739, 1.15642, 0.92098,
          0.76288, 0.80504, 0.80972, 0.75859, 0.8675, 0.8675, 0.8675, 0.8675,
          0.8675, 0.8675, 0.76318, 0.73834, 0.73206, 0.73206, 0.73206, 0.73206,
          0.90685, 0.90685, 0.90685, 0.90685, 0.86477, 0.89385, 0.85122,
          0.85122, 0.85122, 0.85122, 0.85122, 0.85284, 0.85311, 0.88844,
          0.88844, 0.88844, 0.88844, 0.7306, 0.77452, 0.86331, 0.86128, 0.86128,
          0.86128, 0.86128, 0.86128, 0.86128, 0.8693, 0.8457, 0.89464, 0.89464,
          0.89464, 0.89464, 0.82601, 0.82601, 0.82601, 0.82601, 0.94469,
          0.94469, 0.9482, 0.9482, 0.9482, 0.9482, 0.9482, 0.90747, 0.86651,
          0.94469, 0.94469, 0.94469, 0.94469, 0.90527, 0.94469, 0.90527, 0.8675,
          0.86128, 0.8675, 0.86128, 0.8675, 0.86128, 0.73834, 0.8457, 0.73834,
          0.8457, 0.73834, 0.8457, 0.73834, 0.8457, 0.85193, 0.92454, 0.86477,
          0.9921, 0.73206, 0.89464, 0.73206, 0.89464, 0.73206, 0.89464, 0.73206,
          0.89464, 0.73206, 0.89464, 0.81105, 0.84636, 0.81105, 0.84636,
          0.81105, 0.84636, 1, 1, 0.86275, 0.94469, 0.90872, 0.95786, 0.90685,
          0.82601, 0.90685, 0.82601, 0.90685, 0.82601, 0.90685, 1.03297,
          0.90685, 0.82601, 0.77741, 1.05611, 0.6377, 1.07692, 1, 1, 0.90918,
          0.75593, 1.03297, 1, 1, 0.76032, 0.90452, 0.98156, 1.11842, 0.77261,
          1.11429, 0.89385, 0.94469, 1, 1, 0.89385, 0.94469, 0.95877, 0.86901,
          0.94469, 0.85122, 0.9482, 0.85122, 0.9482, 0.85122, 0.9482, 0.8667,
          0.90016, 0.75186, 1.04692, 1, 1, 0.75186, 1.04692, 0.68887, 0.78223,
          0.68887, 0.78223, 0.68887, 0.78223, 0.68887, 0.78223, 1, 1, 0.79776,
          0.92188, 0.79776, 1.23023, 0.88844, 0.94469, 0.88844, 0.94469,
          0.88844, 0.94469, 0.88844, 0.94469, 0.88844, 0.94469, 0.88844,
          0.94469, 0.94258, 0.98986, 0.7306, 0.90527, 0.7306, 0.76659, 0.79004,
          0.76659, 0.79004, 0.76659, 0.79004, 1.09231, 0.54873, 0.8675, 0.86128,
          0.76318, 0.8693, 0.85311, 0.86651, 1, 1, 0.79776, 1.20562, 1.18622,
          1.18622, 1, 1.1437, 0.67742, 0.96334, 0.93695, 1.35191, 1.40909,
          0.95161, 1.48387, 0.86686, 0.90861, 0.62267, 0.74359, 0.65649,
          0.85498, 0.56963, 0.88254, 1.23516, 0.8675, 0.81552, 0.75443, 0.84503,
          0.73206, 0.76659, 0.86275, 0.85122, 0.90685, 0.77892, 0.85746,
          1.02638, 0.89385, 0.75657, 0.85122, 0.86275, 0.77452, 0.74171,
          0.79776, 0.7306, 0.95165, 0.77818, 0.89772, 0.88831, 0.90685, 0.7306,
          0.98142, 1.02191, 0.96576, 1.23516, 0.99018, 0.98142, 0.9236, 0.89258,
          0.94035, 1.02191, 0.78848, 0.96576, 0.9561, 1.23516, 0.90918, 0.92578,
          0.95424, 0.89746, 0.83969, 0.9482, 0.80113, 0.89442, 0.85208, 0.86155,
          0.98022, 0.99018, 1.00452, 0.81209, 0.99247, 0.89181, 1.23516,
          0.99018, 0.9482, 0.99018, 0.89181, 0.73206, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 0.88844, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 0.89464, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.96766, 1, 1,
          1, 1, 1, 1, 0.94258, 0.98986, 0.94258, 0.98986, 0.94258, 0.98986,
          0.7306, 0.90527, 1, 1, 0.89552, 0.90527, 1, 0.90186, 1.12308, 1.12308,
          1.12308, 1.12308, 1.2566, 1.2566, 1.2566, 0.89552, 0.89552, 1.42259,
          0.69043, 1.03809, 1, 1, 1.0176, 1.0176, 1.11523, 1.4956, 2.01462,
          0.99331, 0.82616, 0.91133, 0.84286, 0.91133, 1, 1, 1, 0.70508, 1,
          1.23108, 0.79801, 0.84426, 0.84426, 0.774, 0.90527, 1.81055, 0.90527,
          1.81055, 1.28809, 1.55469, 0.94434, 1.07806, 1, 0.97094, 0.7589,
          0.85284, 0.90747, 1.19658, 0.69825, 0.97622, 1.33512, 0.90747,
          0.90747, 0.85356, 0.90747, 0.90747, 1.44947, 0.85284, 0.8941, 0.8941,
          0.70572, 0.8, 0.70572, 0.70572, 0.70572, 0.70572, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.99862, 0.99862, 1, 1, 1,
          1, 1, 1.0336, 0.91027, 1, 1, 1, 0.99862, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1.05859, 1.05859, 1, 1, 1, 1.07185, 0.99413, 0.96334, 1.08065,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        ];
        exports.CalibriRegularFactors = CalibriRegularFactors;
        const CalibriRegularMetrics = {
          lineHeight: 1.2207,
          lineGap: 0.2207,
        };
        exports.CalibriRegularMetrics = CalibriRegularMetrics;

        /***/
      },
      /* 53 */
      /***/ (__unused_webpack_module, exports) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.HelveticaRegularMetrics =
          exports.HelveticaRegularFactors =
          exports.HelveticaItalicMetrics =
          exports.HelveticaItalicFactors =
          exports.HelveticaBoldMetrics =
          exports.HelveticaBoldItalicMetrics =
          exports.HelveticaBoldItalicFactors =
          exports.HelveticaBoldFactors =
            void 0;
        const HelveticaBoldFactors = [
          0.76116, 1, 1, 1.0006, 0.99998, 0.99974, 0.99973, 0.99973, 0.99982,
          0.99977, 1.00087, 0.99998, 0.99998, 0.99959, 1.00003, 1.0006, 0.99998,
          1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973,
          0.99973, 0.99973, 0.99973, 0.99973, 0.99998, 1, 1.00003, 1.00003,
          1.00003, 1.00026, 0.9999, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001,
          1.00026, 1.00022, 0.99977, 1.0006, 0.99973, 0.99977, 1.00026, 0.99999,
          0.99977, 1.00022, 1.00001, 1.00022, 0.99977, 1.00001, 1.00026,
          0.99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, 0.99998, 1.0006,
          0.99998, 1.00003, 0.99973, 0.99998, 0.99973, 1.00026, 0.99973,
          1.00026, 0.99973, 0.99998, 1.00026, 1.00026, 1.0006, 1.0006, 0.99973,
          1.0006, 0.99982, 1.00026, 1.00026, 1.00026, 1.00026, 0.99959, 0.99973,
          0.99998, 1.00026, 0.99973, 1.00022, 0.99973, 0.99973, 1, 0.99959,
          1.00077, 0.99959, 1.00003, 0.99998, 0.99973, 0.99973, 0.99973,
          0.99973, 1.00077, 0.99973, 0.99998, 1.00025, 0.99968, 0.99973,
          1.00003, 1.00025, 0.60299, 1.00024, 1.06409, 1, 1, 0.99998, 1,
          0.99973, 1.0006, 0.99998, 1, 0.99936, 0.99973, 1.00002, 1.00002,
          1.00002, 1.00026, 0.99977, 0.99977, 0.99977, 0.99977, 0.99977,
          0.99977, 1, 0.99977, 1.00001, 1.00001, 1.00001, 1.00001, 1.0006,
          1.0006, 1.0006, 1.0006, 0.99977, 0.99977, 1.00022, 1.00022, 1.00022,
          1.00022, 1.00022, 1.00003, 1.00022, 0.99977, 0.99977, 0.99977,
          0.99977, 1.00001, 1.00001, 1.00026, 0.99973, 0.99973, 0.99973,
          0.99973, 0.99973, 0.99973, 0.99982, 0.99973, 0.99973, 0.99973,
          0.99973, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.00026, 1.00026,
          1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.06409, 1.00026,
          1.00026, 1.00026, 1.00026, 1.00026, 0.99973, 1.00026, 0.99973,
          0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977,
          0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973,
          0.99977, 1.03374, 0.99977, 1.00026, 1.00001, 0.99973, 1.00001,
          0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973,
          1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022,
          1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 1.0006, 1.0006, 1.0006,
          1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.00042,
          0.99973, 0.99973, 1.0006, 0.99977, 0.99973, 0.99973, 1.00026, 1.0006,
          1.00026, 1.0006, 1.00026, 1.03828, 1.00026, 0.99999, 1.00026, 1.0006,
          0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.9993, 0.9998,
          1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1,
          1.00016, 0.99977, 0.99959, 0.99977, 0.99959, 0.99977, 0.99959,
          1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001,
          0.99973, 1.00026, 0.99998, 1.00026, 0.8121, 1.00026, 0.99998, 0.99977,
          1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026,
          0.99977, 1.00026, 0.99977, 1.00026, 1.00016, 1.00022, 1.00001,
          0.99973, 1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, 1.0006, 0.99973,
          0.99977, 0.99973, 1, 0.99982, 1.00022, 1.00026, 1.00001, 0.99973,
          1.00026, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998,
          0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 1.00034, 0.99977, 1,
          0.99997, 1.00026, 1.00078, 1.00036, 0.99973, 1.00013, 1.0006, 0.99977,
          0.99977, 0.99988, 0.85148, 1.00001, 1.00026, 0.99977, 1.00022, 1.0006,
          0.99977, 1.00001, 0.99999, 0.99977, 1.00069, 1.00022, 0.99977,
          1.00001, 0.99984, 1.00026, 1.00001, 1.00024, 1.00001, 0.9999, 1,
          1.0006, 1.00001, 1.00041, 0.99962, 1.00026, 1.0006, 0.99995, 1.00041,
          0.99942, 0.99973, 0.99927, 1.00082, 0.99902, 1.00026, 1.00087, 1.0006,
          1.00069, 0.99973, 0.99867, 0.99973, 0.9993, 1.00026, 1.00049, 1.00056,
          1, 0.99988, 0.99935, 0.99995, 0.99954, 1.00055, 0.99945, 1.00032,
          1.0006, 0.99995, 1.00026, 0.99995, 1.00032, 1.00001, 1.00008, 0.99971,
          1.00019, 0.9994, 1.00001, 1.0006, 1.00044, 0.99973, 1.00023, 1.00047,
          1, 0.99942, 0.99561, 0.99989, 1.00035, 0.99977, 1.00035, 0.99977,
          1.00019, 0.99944, 1.00001, 1.00021, 0.99926, 1.00035, 1.00035,
          0.99942, 1.00048, 0.99999, 0.99977, 1.00022, 1.00035, 1.00001,
          0.99977, 1.00026, 0.99989, 1.00057, 1.00001, 0.99936, 1.00052,
          1.00012, 0.99996, 1.00043, 1, 1.00035, 0.9994, 0.99976, 1.00035,
          0.99973, 1.00052, 1.00041, 1.00119, 1.00037, 0.99973, 1.00002,
          0.99986, 1.00041, 1.00041, 0.99902, 0.9996, 1.00034, 0.99999, 1.00026,
          0.99999, 1.00026, 0.99973, 1.00052, 0.99973, 1, 0.99973, 1.00041,
          1.00075, 0.9994, 1.0003, 0.99999, 1, 1.00041, 0.99955, 1, 0.99915,
          0.99973, 0.99973, 1.00026, 1.00119, 0.99955, 0.99973, 1.0006, 0.99911,
          1.0006, 1.00026, 0.99972, 1.00026, 0.99902, 1.00041, 0.99973, 0.99999,
          1, 1, 1.00038, 1.0005, 1.00016, 1.00022, 1.00016, 1.00022, 1.00016,
          1.00022, 1.00001, 0.99973, 1, 1, 0.99973, 1, 1, 0.99955, 1.0006,
          1.0006, 1.0006, 1.0006, 1, 1, 1, 0.99973, 0.99973, 0.99972, 1, 1,
          1.00106, 0.99999, 0.99998, 0.99998, 0.99999, 0.99998, 1.66475, 1,
          0.99973, 0.99973, 1.00023, 0.99973, 0.99971, 1.00047, 1.00023, 1,
          0.99991, 0.99984, 1.00002, 1.00002, 1.00002, 1.00002, 1, 1, 1, 1, 1,
          1, 1, 0.99972, 1, 1.20985, 1.39713, 1.00003, 1.00031, 1.00015, 1,
          0.99561, 1.00027, 1.00031, 1.00031, 0.99915, 1.00031, 1.00031,
          0.99999, 1.00003, 0.99999, 0.99999, 1.41144, 1.6, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.40579,
          1.40579, 1.36625, 0.99999, 1, 0.99861, 0.99861, 1, 1.00026, 1.00026,
          1.00026, 1.00026, 0.99972, 0.99999, 0.99999, 0.99999, 0.99999,
          1.40483, 1, 0.99977, 1.00054, 1, 1, 0.99953, 0.99962, 1.00042, 0.9995,
          1, 1, 1, 1, 1, 1, 1, 1, 0.99998, 0.99998, 0.99998, 0.99998, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1,
        ];
        exports.HelveticaBoldFactors = HelveticaBoldFactors;
        const HelveticaBoldMetrics = {
          lineHeight: 1.2,
          lineGap: 0.2,
        };
        exports.HelveticaBoldMetrics = HelveticaBoldMetrics;
        const HelveticaBoldItalicFactors = [
          0.76116, 1, 1, 1.0006, 0.99998, 0.99974, 0.99973, 0.99973, 0.99982,
          0.99977, 1.00087, 0.99998, 0.99998, 0.99959, 1.00003, 1.0006, 0.99998,
          1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973,
          0.99973, 0.99973, 0.99973, 0.99973, 0.99998, 1, 1.00003, 1.00003,
          1.00003, 1.00026, 0.9999, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001,
          1.00026, 1.00022, 0.99977, 1.0006, 0.99973, 0.99977, 1.00026, 0.99999,
          0.99977, 1.00022, 1.00001, 1.00022, 0.99977, 1.00001, 1.00026,
          0.99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, 0.99998, 1.0006,
          0.99998, 1.00003, 0.99973, 0.99998, 0.99973, 1.00026, 0.99973,
          1.00026, 0.99973, 0.99998, 1.00026, 1.00026, 1.0006, 1.0006, 0.99973,
          1.0006, 0.99982, 1.00026, 1.00026, 1.00026, 1.00026, 0.99959, 0.99973,
          0.99998, 1.00026, 0.99973, 1.00022, 0.99973, 0.99973, 1, 0.99959,
          1.00077, 0.99959, 1.00003, 0.99998, 0.99973, 0.99973, 0.99973,
          0.99973, 1.00077, 0.99973, 0.99998, 1.00025, 0.99968, 0.99973,
          1.00003, 1.00025, 0.60299, 1.00024, 1.06409, 1, 1, 0.99998, 1,
          0.99973, 1.0006, 0.99998, 1, 0.99936, 0.99973, 1.00002, 1.00002,
          1.00002, 1.00026, 0.99977, 0.99977, 0.99977, 0.99977, 0.99977,
          0.99977, 1, 0.99977, 1.00001, 1.00001, 1.00001, 1.00001, 1.0006,
          1.0006, 1.0006, 1.0006, 0.99977, 0.99977, 1.00022, 1.00022, 1.00022,
          1.00022, 1.00022, 1.00003, 1.00022, 0.99977, 0.99977, 0.99977,
          0.99977, 1.00001, 1.00001, 1.00026, 0.99973, 0.99973, 0.99973,
          0.99973, 0.99973, 0.99973, 0.99982, 0.99973, 0.99973, 0.99973,
          0.99973, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.00026, 1.00026,
          1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.06409, 1.00026,
          1.00026, 1.00026, 1.00026, 1.00026, 0.99973, 1.00026, 0.99973,
          0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977,
          0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973,
          0.99977, 1.0044, 0.99977, 1.00026, 1.00001, 0.99973, 1.00001, 0.99973,
          1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00022,
          1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026,
          0.99977, 1.00026, 0.99977, 1.00026, 1.0006, 1.0006, 1.0006, 1.0006,
          1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 0.99971, 0.99973,
          0.99973, 1.0006, 0.99977, 0.99973, 0.99973, 1.00026, 1.0006, 1.00026,
          1.0006, 1.00026, 1.01011, 1.00026, 0.99999, 1.00026, 1.0006, 0.99977,
          1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.9993, 0.9998, 1.00026,
          1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1, 1.00016,
          0.99977, 0.99959, 0.99977, 0.99959, 0.99977, 0.99959, 1.00001,
          0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973,
          1.00026, 0.99998, 1.00026, 0.8121, 1.00026, 0.99998, 0.99977, 1.00026,
          0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977,
          1.00026, 0.99977, 1.00026, 1.00016, 1.00022, 1.00001, 0.99973,
          1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, 1.0006, 0.99973, 0.99977,
          0.99973, 1, 0.99982, 1.00022, 1.00026, 1.00001, 0.99973, 1.00026,
          0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998,
          0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99977, 1, 1, 1.00026,
          0.99969, 0.99972, 0.99981, 0.9998, 1.0006, 0.99977, 0.99977, 1.00022,
          0.91155, 1.00001, 1.00026, 0.99977, 1.00022, 1.0006, 0.99977, 1.00001,
          0.99999, 0.99977, 0.99966, 1.00022, 1.00032, 1.00001, 0.99944,
          1.00026, 1.00001, 0.99968, 1.00001, 1.00047, 1, 1.0006, 1.00001,
          0.99981, 1.00101, 1.00026, 1.0006, 0.99948, 0.99981, 1.00064, 0.99973,
          0.99942, 1.00101, 1.00061, 1.00026, 1.00069, 1.0006, 1.00014, 0.99973,
          1.01322, 0.99973, 1.00065, 1.00026, 1.00012, 0.99923, 1, 1.00064,
          1.00076, 0.99948, 1.00055, 1.00063, 1.00007, 0.99943, 1.0006, 0.99948,
          1.00026, 0.99948, 0.99943, 1.00001, 1.00001, 1.00029, 1.00038,
          1.00035, 1.00001, 1.0006, 1.0006, 0.99973, 0.99978, 1.00001, 1.00057,
          0.99989, 0.99967, 0.99964, 0.99967, 0.99977, 0.99999, 0.99977,
          1.00038, 0.99977, 1.00001, 0.99973, 1.00066, 0.99967, 0.99967,
          1.00041, 0.99998, 0.99999, 0.99977, 1.00022, 0.99967, 1.00001,
          0.99977, 1.00026, 0.99964, 1.00031, 1.00001, 0.99999, 0.99999, 1,
          1.00023, 1, 1, 0.99999, 1.00035, 1.00001, 0.99999, 0.99973, 0.99977,
          0.99999, 1.00058, 0.99973, 0.99973, 0.99955, 0.9995, 1.00026, 1.00026,
          1.00032, 0.99989, 1.00034, 0.99999, 1.00026, 1.00026, 1.00026,
          0.99973, 0.45998, 0.99973, 1.00026, 0.99973, 1.00001, 0.99999,
          0.99982, 0.99994, 0.99996, 1, 1.00042, 1.00044, 1.00029, 1.00023,
          0.99973, 0.99973, 1.00026, 0.99949, 1.00002, 0.99973, 1.0006, 1.0006,
          1.0006, 0.99975, 1.00026, 1.00026, 1.00032, 0.98685, 0.99973, 1.00026,
          1, 1, 0.99966, 1.00044, 1.00016, 1.00022, 1.00016, 1.00022, 1.00016,
          1.00022, 1.00001, 0.99973, 1, 1, 0.99973, 1, 1, 0.99955, 1.0006,
          1.0006, 1.0006, 1.0006, 1, 1, 1, 0.99973, 0.99973, 0.99972, 1, 1,
          1.00106, 0.99999, 0.99998, 0.99998, 0.99999, 0.99998, 1.66475, 1,
          0.99973, 0.99973, 1, 0.99973, 0.99971, 0.99978, 1, 1, 0.99991,
          0.99984, 1.00002, 1.00002, 1.00002, 1.00002, 1.00098, 1, 1, 1,
          1.00049, 1, 1, 0.99972, 1, 1.20985, 1.39713, 1.00003, 1.00031,
          1.00015, 1, 0.99561, 1.00027, 1.00031, 1.00031, 0.99915, 1.00031,
          1.00031, 0.99999, 1.00003, 0.99999, 0.99999, 1.41144, 1.6, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.40579, 1.40579, 1.36625, 0.99999, 1, 0.99861, 0.99861, 1, 1.00026,
          1.00026, 1.00026, 1.00026, 0.99972, 0.99999, 0.99999, 0.99999,
          0.99999, 1.40483, 1, 0.99977, 1.00054, 1, 1, 0.99953, 0.99962,
          1.00042, 0.9995, 1, 1, 1, 1, 1, 1, 1, 1, 0.99998, 0.99998, 0.99998,
          0.99998, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        ];
        exports.HelveticaBoldItalicFactors = HelveticaBoldItalicFactors;
        const HelveticaBoldItalicMetrics = {
          lineHeight: 1.35,
          lineGap: 0.2,
        };
        exports.HelveticaBoldItalicMetrics = HelveticaBoldItalicMetrics;
        const HelveticaItalicFactors = [
          0.76116, 1, 1, 1.0006, 1.0006, 1.00006, 0.99973, 0.99973, 0.99982,
          1.00001, 1.00043, 0.99998, 0.99998, 0.99959, 1.00003, 1.0006, 0.99998,
          1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973,
          0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1, 1.00003, 1.00003,
          1.00003, 0.99973, 0.99987, 1.00001, 1.00001, 0.99977, 0.99977,
          1.00001, 1.00026, 1.00022, 0.99977, 1.0006, 1, 1.00001, 0.99973,
          0.99999, 0.99977, 1.00022, 1.00001, 1.00022, 0.99977, 1.00001,
          1.00026, 0.99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, 1.0006,
          1.0006, 1.0006, 0.99949, 0.99973, 0.99998, 0.99973, 0.99973, 1,
          0.99973, 0.99973, 1.0006, 0.99973, 0.99973, 0.99924, 0.99924, 1,
          0.99924, 0.99999, 0.99973, 0.99973, 0.99973, 0.99973, 0.99998, 1,
          1.0006, 0.99973, 1, 0.99977, 1, 1, 1, 1.00005, 1.0009, 1.00005,
          1.00003, 0.99998, 0.99973, 0.99973, 0.99973, 0.99973, 1.0009, 0.99973,
          0.99998, 1.00025, 0.99968, 0.99973, 1.00003, 1.00025, 0.60299,
          1.00024, 1.06409, 1, 1, 0.99998, 1, 0.9998, 1.0006, 0.99998, 1,
          0.99936, 0.99973, 1.00002, 1.00002, 1.00002, 1.00026, 1.00001,
          1.00001, 1.00001, 1.00001, 1.00001, 1.00001, 1, 0.99977, 1.00001,
          1.00001, 1.00001, 1.00001, 1.0006, 1.0006, 1.0006, 1.0006, 0.99977,
          0.99977, 1.00022, 1.00022, 1.00022, 1.00022, 1.00022, 1.00003,
          1.00022, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00001,
          1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973,
          0.99982, 1, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1.0006,
          1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973,
          0.99973, 1.06409, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 1,
          0.99973, 1, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973,
          0.99977, 1, 0.99977, 1, 0.99977, 1, 0.99977, 1, 0.99977, 1.0288,
          0.99977, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001,
          0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00022, 0.99973,
          1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 0.99977,
          0.99973, 0.99977, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006,
          1.0006, 1.0006, 0.99924, 1.0006, 1.0006, 0.99946, 1.00034, 1, 0.99924,
          1.00001, 1, 1, 0.99973, 0.99924, 0.99973, 0.99924, 0.99973, 1.06311,
          0.99973, 1.00024, 0.99973, 0.99924, 0.99977, 0.99973, 0.99977,
          0.99973, 0.99977, 0.99973, 1.00041, 0.9998, 0.99973, 1.00022, 0.99973,
          1.00022, 0.99973, 1.00022, 0.99973, 1, 1.00016, 0.99977, 0.99998,
          0.99977, 0.99998, 0.99977, 0.99998, 1.00001, 1, 1.00001, 1, 1.00001,
          1, 1.00001, 1, 1.00026, 1.0006, 1.00026, 0.89547, 1.00026, 1.0006,
          0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977,
          0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 1.00016, 0.99977,
          1.00001, 1, 1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, 0.99924,
          0.99973, 1.00001, 0.99973, 1, 0.99982, 1.00022, 1.00026, 1.00001, 1,
          1.00026, 1.0006, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998,
          0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 1.00001, 1, 1.00054,
          0.99977, 1.00084, 1.00007, 0.99973, 1.00013, 0.99924, 1.00001,
          1.00001, 0.99945, 0.91221, 1.00001, 1.00026, 0.99977, 1.00022, 1.0006,
          1.00001, 1.00001, 0.99999, 0.99977, 0.99933, 1.00022, 1.00054,
          1.00001, 1.00065, 1.00026, 1.00001, 1.0001, 1.00001, 1.00052, 1,
          1.0006, 1.00001, 0.99945, 0.99897, 0.99968, 0.99924, 1.00036, 0.99945,
          0.99949, 1, 1.0006, 0.99897, 0.99918, 0.99968, 0.99911, 0.99924, 1,
          0.99962, 1.01487, 1, 1.0005, 0.99973, 1.00012, 1.00043, 1, 0.99995,
          0.99994, 1.00036, 0.99947, 1.00019, 1.00063, 1.00025, 0.99924,
          1.00036, 0.99973, 1.00036, 1.00025, 1.00001, 1.00001, 1.00027, 1.0001,
          1.00068, 1.00001, 1.0006, 1.0006, 1, 1.00008, 0.99957, 0.99972,
          0.9994, 0.99954, 0.99975, 1.00051, 1.00001, 1.00019, 1.00001, 1.0001,
          0.99986, 1.00001, 1.00001, 1.00038, 0.99954, 0.99954, 0.9994, 1.00066,
          0.99999, 0.99977, 1.00022, 1.00054, 1.00001, 0.99977, 1.00026,
          0.99975, 1.0001, 1.00001, 0.99993, 0.9995, 0.99955, 1.00016, 0.99978,
          0.99974, 1.00019, 1.00022, 0.99955, 1.00053, 0.99973, 1.00089,
          1.00005, 0.99967, 1.00048, 0.99973, 1.00002, 1.00034, 0.99973,
          0.99973, 0.99964, 1.00006, 1.00066, 0.99947, 0.99973, 0.98894,
          0.99973, 1, 0.44898, 1, 0.99946, 1, 1.00039, 1.00082, 0.99991,
          0.99991, 0.99985, 1.00022, 1.00023, 1.00061, 1.00006, 0.99966,
          0.99973, 0.99973, 0.99973, 1.00019, 1.0008, 1, 0.99924, 0.99924,
          0.99924, 0.99983, 1.00044, 0.99973, 0.99964, 0.98332, 1, 0.99973, 1,
          1, 0.99962, 0.99895, 1.00016, 0.99977, 1.00016, 0.99977, 1.00016,
          0.99977, 1.00001, 1, 1, 1, 0.99973, 1, 1, 0.99955, 0.99924, 0.99924,
          0.99924, 0.99924, 0.99998, 0.99998, 0.99998, 0.99973, 0.99973,
          0.99972, 1, 1, 1.00267, 0.99999, 0.99998, 0.99998, 1, 0.99998,
          1.66475, 1, 0.99973, 0.99973, 1.00023, 0.99973, 1.00423, 0.99925,
          0.99999, 1, 0.99991, 0.99984, 1.00002, 1.00002, 1.00002, 1.00002,
          1.00049, 1, 1.00245, 1, 1, 1, 1, 0.96329, 1, 1.20985, 1.39713,
          1.00003, 0.8254, 1.00015, 1, 1.00035, 1.00027, 1.00031, 1.00031,
          1.00003, 1.00031, 1.00031, 0.99999, 1.00003, 0.99999, 0.99999,
          1.41144, 1.6, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.40579, 1.40579, 1.36625, 0.99999, 1, 0.99861,
          0.99861, 1, 1.00026, 1.00026, 1.00026, 1.00026, 0.95317, 0.99999,
          0.99999, 0.99999, 0.99999, 1.40483, 1, 0.99977, 1.00054, 1, 1,
          0.99953, 0.99962, 1.00042, 0.9995, 1, 1, 1, 1, 1, 1, 1, 1, 0.99998,
          0.99998, 0.99998, 0.99998, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        ];
        exports.HelveticaItalicFactors = HelveticaItalicFactors;
        const HelveticaItalicMetrics = {
          lineHeight: 1.35,
          lineGap: 0.2,
        };
        exports.HelveticaItalicMetrics = HelveticaItalicMetrics;
        const HelveticaRegularFactors = [
          0.76116, 1, 1, 1.0006, 1.0006, 1.00006, 0.99973, 0.99973, 0.99982,
          1.00001, 1.00043, 0.99998, 0.99998, 0.99959, 1.00003, 1.0006, 0.99998,
          1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973,
          0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1, 1.00003, 1.00003,
          1.00003, 0.99973, 0.99987, 1.00001, 1.00001, 0.99977, 0.99977,
          1.00001, 1.00026, 1.00022, 0.99977, 1.0006, 1, 1.00001, 0.99973,
          0.99999, 0.99977, 1.00022, 1.00001, 1.00022, 0.99977, 1.00001,
          1.00026, 0.99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, 1.0006,
          1.0006, 1.0006, 0.99949, 0.99973, 0.99998, 0.99973, 0.99973, 1,
          0.99973, 0.99973, 1.0006, 0.99973, 0.99973, 0.99924, 0.99924, 1,
          0.99924, 0.99999, 0.99973, 0.99973, 0.99973, 0.99973, 0.99998, 1,
          1.0006, 0.99973, 1, 0.99977, 1, 1, 1, 1.00005, 1.0009, 1.00005,
          1.00003, 0.99998, 0.99973, 0.99973, 0.99973, 0.99973, 1.0009, 0.99973,
          0.99998, 1.00025, 0.99968, 0.99973, 1.00003, 1.00025, 0.60299,
          1.00024, 1.06409, 1, 1, 0.99998, 1, 0.9998, 1.0006, 0.99998, 1,
          0.99936, 0.99973, 1.00002, 1.00002, 1.00002, 1.00026, 1.00001,
          1.00001, 1.00001, 1.00001, 1.00001, 1.00001, 1, 0.99977, 1.00001,
          1.00001, 1.00001, 1.00001, 1.0006, 1.0006, 1.0006, 1.0006, 0.99977,
          0.99977, 1.00022, 1.00022, 1.00022, 1.00022, 1.00022, 1.00003,
          1.00022, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00001,
          1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973,
          0.99982, 1, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1.0006,
          1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973,
          0.99973, 1.06409, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 1,
          0.99973, 1, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973,
          0.99977, 1, 0.99977, 1, 0.99977, 1, 0.99977, 1, 0.99977, 1.04596,
          0.99977, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001,
          0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00022, 0.99973,
          1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 0.99977,
          0.99973, 0.99977, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006,
          1.0006, 1.0006, 0.99924, 1.0006, 1.0006, 1.00019, 1.00034, 1, 0.99924,
          1.00001, 1, 1, 0.99973, 0.99924, 0.99973, 0.99924, 0.99973, 1.02572,
          0.99973, 1.00005, 0.99973, 0.99924, 0.99977, 0.99973, 0.99977,
          0.99973, 0.99977, 0.99973, 0.99999, 0.9998, 0.99973, 1.00022, 0.99973,
          1.00022, 0.99973, 1.00022, 0.99973, 1, 1.00016, 0.99977, 0.99998,
          0.99977, 0.99998, 0.99977, 0.99998, 1.00001, 1, 1.00001, 1, 1.00001,
          1, 1.00001, 1, 1.00026, 1.0006, 1.00026, 0.84533, 1.00026, 1.0006,
          0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977,
          0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 1.00016, 0.99977,
          1.00001, 1, 1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, 0.99924,
          0.99973, 1.00001, 0.99973, 1, 0.99982, 1.00022, 1.00026, 1.00001, 1,
          1.00026, 1.0006, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998,
          0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99928, 1, 0.99977,
          1.00013, 1.00055, 0.99947, 0.99945, 0.99941, 0.99924, 1.00001,
          1.00001, 1.0004, 0.91621, 1.00001, 1.00026, 0.99977, 1.00022, 1.0006,
          1.00001, 1.00005, 0.99999, 0.99977, 1.00015, 1.00022, 0.99977,
          1.00001, 0.99973, 1.00026, 1.00001, 1.00019, 1.00001, 0.99946, 1,
          1.0006, 1.00001, 0.99978, 1.00045, 0.99973, 0.99924, 1.00023, 0.99978,
          0.99966, 1, 1.00065, 1.00045, 1.00019, 0.99973, 0.99973, 0.99924, 1,
          1, 0.96499, 1, 1.00055, 0.99973, 1.00008, 1.00027, 1, 0.9997, 0.99995,
          1.00023, 0.99933, 1.00019, 1.00015, 1.00031, 0.99924, 1.00023,
          0.99973, 1.00023, 1.00031, 1.00001, 0.99928, 1.00029, 1.00092,
          1.00035, 1.00001, 1.0006, 1.0006, 1, 0.99988, 0.99975, 1, 1.00082,
          0.99561, 0.9996, 1.00035, 1.00001, 0.99962, 1.00001, 1.00092, 0.99964,
          1.00001, 0.99963, 0.99999, 1.00035, 1.00035, 1.00082, 0.99962,
          0.99999, 0.99977, 1.00022, 1.00035, 1.00001, 0.99977, 1.00026, 0.9996,
          0.99967, 1.00001, 1.00034, 1.00074, 1.00054, 1.00053, 1.00063,
          0.99971, 0.99962, 1.00035, 0.99975, 0.99977, 0.99973, 1.00043,
          0.99953, 1.0007, 0.99915, 0.99973, 1.00008, 0.99892, 1.00073, 1.00073,
          1.00114, 0.99915, 1.00073, 0.99955, 0.99973, 1.00092, 0.99973, 1,
          0.99998, 1, 1.0003, 1, 1.00043, 1.00001, 0.99969, 1.0003, 1, 1.00035,
          1.00001, 0.9995, 1, 1.00092, 0.99973, 0.99973, 0.99973, 1.0007,
          0.9995, 1, 0.99924, 1.0006, 0.99924, 0.99972, 1.00062, 0.99973,
          1.00114, 1.00073, 1, 0.99955, 1, 1, 1.00047, 0.99968, 1.00016,
          0.99977, 1.00016, 0.99977, 1.00016, 0.99977, 1.00001, 1, 1, 1,
          0.99973, 1, 1, 0.99955, 0.99924, 0.99924, 0.99924, 0.99924, 0.99998,
          0.99998, 0.99998, 0.99973, 0.99973, 0.99972, 1, 1, 1.00267, 0.99999,
          0.99998, 0.99998, 1, 0.99998, 1.66475, 1, 0.99973, 0.99973, 1.00023,
          0.99973, 0.99971, 0.99925, 1.00023, 1, 0.99991, 0.99984, 1.00002,
          1.00002, 1.00002, 1.00002, 1, 1, 1, 1, 1, 1, 1, 0.96329, 1, 1.20985,
          1.39713, 1.00003, 0.8254, 1.00015, 1, 1.00035, 1.00027, 1.00031,
          1.00031, 0.99915, 1.00031, 1.00031, 0.99999, 1.00003, 0.99999,
          0.99999, 1.41144, 1.6, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144,
          1.41144, 1.41144, 1.41144, 1.40579, 1.40579, 1.36625, 0.99999, 1,
          0.99861, 0.99861, 1, 1.00026, 1.00026, 1.00026, 1.00026, 0.95317,
          0.99999, 0.99999, 0.99999, 0.99999, 1.40483, 1, 0.99977, 1.00054, 1,
          1, 0.99953, 0.99962, 1.00042, 0.9995, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        ];
        exports.HelveticaRegularFactors = HelveticaRegularFactors;
        const HelveticaRegularMetrics = {
          lineHeight: 1.2,
          lineGap: 0.2,
        };
        exports.HelveticaRegularMetrics = HelveticaRegularMetrics;

        /***/
      },
      /* 54 */
      /***/ (__unused_webpack_module, exports) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.LiberationSansRegularWidths =
          exports.LiberationSansRegularMapping =
          exports.LiberationSansItalicWidths =
          exports.LiberationSansItalicMapping =
          exports.LiberationSansBoldWidths =
          exports.LiberationSansBoldMapping =
          exports.LiberationSansBoldItalicWidths =
          exports.LiberationSansBoldItalicMapping =
            void 0;
        const LiberationSansBoldWidths = [
          365, 0, 333, 278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389,
          584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556,
          556, 333, 333, 584, 584, 584, 611, 975, 722, 722, 722, 722, 667, 611,
          778, 722, 278, 556, 722, 611, 833, 722, 778, 667, 778, 722, 667, 611,
          722, 667, 944, 667, 667, 611, 333, 278, 333, 584, 556, 333, 556, 611,
          556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889, 611, 611, 611,
          611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389, 584,
          333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 737, 552,
          400, 549, 333, 333, 333, 576, 556, 278, 333, 333, 365, 556, 834, 834,
          834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667,
          278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722,
          722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 556,
          556, 556, 556, 556, 278, 278, 278, 278, 611, 611, 611, 611, 611, 611,
          611, 549, 611, 611, 611, 611, 611, 556, 611, 556, 722, 556, 722, 556,
          722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 719, 722, 611,
          667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 611, 778, 611,
          778, 611, 778, 611, 722, 611, 722, 611, 278, 278, 278, 278, 278, 278,
          278, 278, 278, 278, 785, 556, 556, 278, 722, 556, 556, 611, 278, 611,
          278, 611, 385, 611, 479, 611, 278, 722, 611, 722, 611, 722, 611, 708,
          723, 611, 778, 611, 778, 611, 778, 611, 1000, 944, 722, 389, 722, 389,
          722, 389, 667, 556, 667, 556, 667, 556, 667, 556, 611, 333, 611, 479,
          611, 333, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611,
          944, 778, 667, 556, 667, 611, 500, 611, 500, 611, 500, 278, 556, 722,
          556, 1000, 889, 778, 611, 667, 556, 611, 333, 333, 333, 333, 333, 333,
          333, 333, 333, 333, 333, 465, 722, 333, 853, 906, 474, 825, 927, 838,
          278, 722, 722, 601, 719, 667, 611, 722, 778, 278, 722, 667, 833, 722,
          644, 778, 722, 667, 600, 611, 667, 821, 667, 809, 802, 278, 667, 615,
          451, 611, 278, 582, 615, 610, 556, 606, 475, 460, 611, 541, 278, 558,
          556, 612, 556, 445, 611, 766, 619, 520, 684, 446, 582, 715, 576, 753,
          845, 278, 582, 611, 582, 845, 667, 669, 885, 567, 711, 667, 278, 276,
          556, 1094, 1062, 875, 610, 722, 622, 719, 722, 719, 722, 567, 712,
          667, 904, 626, 719, 719, 610, 702, 833, 722, 778, 719, 667, 722, 611,
          622, 854, 667, 730, 703, 1005, 1019, 870, 979, 719, 711, 1031, 719,
          556, 618, 615, 417, 635, 556, 709, 497, 615, 615, 500, 635, 740, 604,
          611, 604, 611, 556, 490, 556, 875, 556, 615, 581, 833, 844, 729, 854,
          615, 552, 854, 583, 556, 556, 611, 417, 552, 556, 278, 281, 278, 969,
          906, 611, 500, 615, 556, 604, 778, 611, 487, 447, 944, 778, 944, 778,
          944, 778, 667, 556, 333, 333, 556, 1000, 1000, 552, 278, 278, 278,
          278, 500, 500, 500, 556, 556, 350, 1000, 1000, 240, 479, 333, 333,
          604, 333, 167, 396, 556, 556, 1094, 556, 885, 489, 1115, 1000, 768,
          600, 834, 834, 834, 834, 1000, 500, 1000, 500, 1000, 500, 500, 494,
          612, 823, 713, 584, 549, 713, 979, 722, 274, 549, 549, 583, 549, 549,
          604, 584, 604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708,
          708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708,
          708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708,
          708, 708, 708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354,
          1000, 990, 990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052,
          917, 750, 750, 531, 656, 594, 510, 500, 750, 750, 611, 611, 333, 333,
          333, 333, 333, 333, 333, 333, 222, 222, 333, 333, 333, 333, 333, 333,
          333, 333,
        ];
        exports.LiberationSansBoldWidths = LiberationSansBoldWidths;
        const LiberationSansBoldMapping = [
          -1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
          46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
          63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
          80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
          97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
          111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
          125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
          174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
          188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
          202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
          216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
          230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
          244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
          258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
          272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285,
          286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299,
          300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313,
          314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327,
          328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341,
          342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355,
          356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369,
          370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383,
          402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713,
          728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908,
          910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923,
          924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938,
          939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952,
          953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
          967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028,
          1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
          1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
          1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
          1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072,
          1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083,
          1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
          1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
          1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
          1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811,
          7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216,
          8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240,
          8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359,
          8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542,
          8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721,
          8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805,
          8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500,
          9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558,
          9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569,
          9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580,
          9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642,
          9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689,
          9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834,
          9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1,
          -1, -1, -1, -1, -1, -1, -1, -1,
        ];
        exports.LiberationSansBoldMapping = LiberationSansBoldMapping;
        const LiberationSansBoldItalicWidths = [
          365, 0, 333, 278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389,
          584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556,
          556, 333, 333, 584, 584, 584, 611, 975, 722, 722, 722, 722, 667, 611,
          778, 722, 278, 556, 722, 611, 833, 722, 778, 667, 778, 722, 667, 611,
          722, 667, 944, 667, 667, 611, 333, 278, 333, 584, 556, 333, 556, 611,
          556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889, 611, 611, 611,
          611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389, 584,
          333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 737, 552,
          400, 549, 333, 333, 333, 576, 556, 278, 333, 333, 365, 556, 834, 834,
          834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667,
          278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722,
          722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 556,
          556, 556, 556, 556, 278, 278, 278, 278, 611, 611, 611, 611, 611, 611,
          611, 549, 611, 611, 611, 611, 611, 556, 611, 556, 722, 556, 722, 556,
          722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 740, 722, 611,
          667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 611, 778, 611,
          778, 611, 778, 611, 722, 611, 722, 611, 278, 278, 278, 278, 278, 278,
          278, 278, 278, 278, 782, 556, 556, 278, 722, 556, 556, 611, 278, 611,
          278, 611, 396, 611, 479, 611, 278, 722, 611, 722, 611, 722, 611, 708,
          723, 611, 778, 611, 778, 611, 778, 611, 1000, 944, 722, 389, 722, 389,
          722, 389, 667, 556, 667, 556, 667, 556, 667, 556, 611, 333, 611, 479,
          611, 333, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611,
          944, 778, 667, 556, 667, 611, 500, 611, 500, 611, 500, 278, 556, 722,
          556, 1000, 889, 778, 611, 667, 556, 611, 333, 333, 333, 333, 333, 333,
          333, 333, 333, 333, 333, 333, 722, 333, 854, 906, 473, 844, 930, 847,
          278, 722, 722, 610, 671, 667, 611, 722, 778, 278, 722, 667, 833, 722,
          657, 778, 718, 667, 590, 611, 667, 822, 667, 829, 781, 278, 667, 620,
          479, 611, 278, 591, 620, 621, 556, 610, 479, 492, 611, 558, 278, 566,
          556, 603, 556, 450, 611, 712, 605, 532, 664, 409, 591, 704, 578, 773,
          834, 278, 591, 611, 591, 834, 667, 667, 886, 614, 719, 667, 278, 278,
          556, 1094, 1042, 854, 622, 719, 677, 719, 722, 708, 722, 614, 722,
          667, 927, 643, 719, 719, 615, 687, 833, 722, 778, 719, 667, 722, 611,
          677, 781, 667, 729, 708, 979, 989, 854, 1000, 708, 719, 1042, 729,
          556, 619, 604, 534, 618, 556, 736, 510, 611, 611, 507, 622, 740, 604,
          611, 611, 611, 556, 889, 556, 885, 556, 646, 583, 889, 935, 707, 854,
          594, 552, 865, 589, 556, 556, 611, 469, 563, 556, 278, 278, 278, 969,
          906, 611, 507, 619, 556, 611, 778, 611, 575, 467, 944, 778, 944, 778,
          944, 778, 667, 556, 333, 333, 556, 1000, 1000, 552, 278, 278, 278,
          278, 500, 500, 500, 556, 556, 350, 1000, 1000, 240, 479, 333, 333,
          604, 333, 167, 396, 556, 556, 1104, 556, 885, 516, 1146, 1000, 768,
          600, 834, 834, 834, 834, 999, 500, 1000, 500, 1000, 500, 500, 494,
          612, 823, 713, 584, 549, 713, 979, 722, 274, 549, 549, 583, 549, 549,
          604, 584, 604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708,
          708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708,
          708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708,
          708, 708, 708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354,
          1000, 990, 990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052,
          917, 750, 750, 531, 656, 594, 510, 500, 750, 750, 611, 611, 333, 333,
          333, 333, 333, 333, 333, 333, 222, 222, 333, 333, 333, 333, 333, 333,
          333, 333,
        ];
        exports.LiberationSansBoldItalicWidths = LiberationSansBoldItalicWidths;
        const LiberationSansBoldItalicMapping = [
          -1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
          46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
          63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
          80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
          97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
          111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
          125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
          174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
          188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
          202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
          216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
          230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
          244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
          258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
          272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285,
          286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299,
          300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313,
          314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327,
          328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341,
          342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355,
          356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369,
          370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383,
          402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713,
          728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908,
          910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923,
          924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938,
          939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952,
          953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
          967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028,
          1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
          1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
          1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
          1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072,
          1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083,
          1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
          1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
          1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
          1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811,
          7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216,
          8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240,
          8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359,
          8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542,
          8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721,
          8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805,
          8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500,
          9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558,
          9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569,
          9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580,
          9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642,
          9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689,
          9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834,
          9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1,
          -1, -1, -1, -1, -1, -1, -1, -1,
        ];
        exports.LiberationSansBoldItalicMapping =
          LiberationSansBoldItalicMapping;
        const LiberationSansItalicWidths = [
          365, 0, 333, 278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389,
          584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556,
          556, 278, 278, 584, 584, 584, 556, 1015, 667, 667, 722, 722, 667, 611,
          778, 722, 278, 500, 667, 556, 833, 722, 778, 667, 778, 722, 667, 611,
          722, 667, 944, 667, 667, 611, 278, 278, 278, 469, 556, 333, 556, 556,
          500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833, 556, 556, 556,
          556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334, 584,
          333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 737, 552,
          400, 549, 333, 333, 333, 576, 537, 278, 333, 333, 365, 556, 834, 834,
          834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667,
          278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722,
          722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 500,
          556, 556, 556, 556, 278, 278, 278, 278, 556, 556, 556, 556, 556, 556,
          556, 549, 611, 556, 556, 556, 556, 500, 556, 500, 667, 556, 667, 556,
          667, 556, 722, 500, 722, 500, 722, 500, 722, 500, 722, 625, 722, 556,
          667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 556, 778, 556,
          778, 556, 778, 556, 722, 556, 722, 556, 278, 278, 278, 278, 278, 278,
          278, 222, 278, 278, 733, 444, 500, 222, 667, 500, 500, 556, 222, 556,
          222, 556, 281, 556, 400, 556, 222, 722, 556, 722, 556, 722, 556, 615,
          723, 556, 778, 556, 778, 556, 778, 556, 1000, 944, 722, 333, 722, 333,
          722, 333, 667, 500, 667, 500, 667, 500, 667, 500, 611, 278, 611, 354,
          611, 278, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556,
          944, 722, 667, 500, 667, 611, 500, 611, 500, 611, 500, 222, 556, 667,
          556, 1000, 889, 778, 611, 667, 500, 611, 278, 333, 333, 333, 333, 333,
          333, 333, 333, 333, 333, 333, 667, 278, 789, 846, 389, 794, 865, 775,
          222, 667, 667, 570, 671, 667, 611, 722, 778, 278, 667, 667, 833, 722,
          648, 778, 725, 667, 600, 611, 667, 837, 667, 831, 761, 278, 667, 570,
          439, 555, 222, 550, 570, 571, 500, 556, 439, 463, 555, 542, 222, 500,
          492, 548, 500, 447, 556, 670, 573, 486, 603, 374, 550, 652, 546, 728,
          779, 222, 550, 556, 550, 779, 667, 667, 843, 544, 708, 667, 278, 278,
          500, 1066, 982, 844, 589, 715, 639, 724, 667, 651, 667, 544, 704, 667,
          917, 614, 715, 715, 589, 686, 833, 722, 778, 725, 667, 722, 611, 639,
          795, 667, 727, 673, 920, 923, 805, 886, 651, 694, 1022, 682, 556, 562,
          522, 493, 553, 556, 688, 465, 556, 556, 472, 564, 686, 550, 556, 556,
          556, 500, 833, 500, 835, 500, 572, 518, 830, 851, 621, 736, 526, 492,
          752, 534, 556, 556, 556, 378, 496, 500, 222, 222, 222, 910, 828, 556,
          472, 565, 500, 556, 778, 556, 492, 339, 944, 722, 944, 722, 944, 722,
          667, 500, 333, 333, 556, 1000, 1000, 552, 222, 222, 222, 222, 333,
          333, 333, 556, 556, 350, 1000, 1000, 188, 354, 333, 333, 500, 333,
          167, 365, 556, 556, 1094, 556, 885, 323, 1083, 1000, 768, 600, 834,
          834, 834, 834, 1000, 500, 998, 500, 1000, 500, 500, 494, 612, 823,
          713, 584, 549, 713, 979, 719, 274, 549, 549, 584, 549, 549, 604, 584,
          604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708,
          708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708,
          708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708,
          708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354, 1000, 990,
          990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052, 917, 750,
          750, 531, 656, 594, 510, 500, 750, 750, 500, 500, 333, 333, 333, 333,
          333, 333, 333, 333, 222, 222, 294, 294, 324, 324, 316, 328, 398, 285,
        ];
        exports.LiberationSansItalicWidths = LiberationSansItalicWidths;
        const LiberationSansItalicMapping = [
          -1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
          46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
          63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
          80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
          97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
          111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
          125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
          174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
          188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
          202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
          216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
          230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
          244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
          258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
          272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285,
          286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299,
          300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313,
          314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327,
          328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341,
          342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355,
          356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369,
          370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383,
          402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713,
          728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908,
          910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923,
          924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938,
          939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952,
          953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
          967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028,
          1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
          1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
          1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
          1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072,
          1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083,
          1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
          1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
          1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
          1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811,
          7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216,
          8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240,
          8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359,
          8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542,
          8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721,
          8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805,
          8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500,
          9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558,
          9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569,
          9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580,
          9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642,
          9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689,
          9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834,
          9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1,
          -1, -1, -1, -1, -1, -1, -1, -1,
        ];
        exports.LiberationSansItalicMapping = LiberationSansItalicMapping;
        const LiberationSansRegularWidths = [
          365, 0, 333, 278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389,
          584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556,
          556, 278, 278, 584, 584, 584, 556, 1015, 667, 667, 722, 722, 667, 611,
          778, 722, 278, 500, 667, 556, 833, 722, 778, 667, 778, 722, 667, 611,
          722, 667, 944, 667, 667, 611, 278, 278, 278, 469, 556, 333, 556, 556,
          500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833, 556, 556, 556,
          556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334, 584,
          333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 737, 552,
          400, 549, 333, 333, 333, 576, 537, 278, 333, 333, 365, 556, 834, 834,
          834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667,
          278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722,
          722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 500,
          556, 556, 556, 556, 278, 278, 278, 278, 556, 556, 556, 556, 556, 556,
          556, 549, 611, 556, 556, 556, 556, 500, 556, 500, 667, 556, 667, 556,
          667, 556, 722, 500, 722, 500, 722, 500, 722, 500, 722, 615, 722, 556,
          667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 556, 778, 556,
          778, 556, 778, 556, 722, 556, 722, 556, 278, 278, 278, 278, 278, 278,
          278, 222, 278, 278, 735, 444, 500, 222, 667, 500, 500, 556, 222, 556,
          222, 556, 292, 556, 334, 556, 222, 722, 556, 722, 556, 722, 556, 604,
          723, 556, 778, 556, 778, 556, 778, 556, 1000, 944, 722, 333, 722, 333,
          722, 333, 667, 500, 667, 500, 667, 500, 667, 500, 611, 278, 611, 375,
          611, 278, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556,
          944, 722, 667, 500, 667, 611, 500, 611, 500, 611, 500, 222, 556, 667,
          556, 1000, 889, 778, 611, 667, 500, 611, 278, 333, 333, 333, 333, 333,
          333, 333, 333, 333, 333, 333, 667, 278, 784, 838, 384, 774, 855, 752,
          222, 667, 667, 551, 668, 667, 611, 722, 778, 278, 667, 668, 833, 722,
          650, 778, 722, 667, 618, 611, 667, 798, 667, 835, 748, 278, 667, 578,
          446, 556, 222, 547, 578, 575, 500, 557, 446, 441, 556, 556, 222, 500,
          500, 576, 500, 448, 556, 690, 569, 482, 617, 395, 547, 648, 525, 713,
          781, 222, 547, 556, 547, 781, 667, 667, 865, 542, 719, 667, 278, 278,
          500, 1057, 1010, 854, 583, 722, 635, 719, 667, 656, 667, 542, 677,
          667, 923, 604, 719, 719, 583, 656, 833, 722, 778, 719, 667, 722, 611,
          635, 760, 667, 740, 667, 917, 938, 792, 885, 656, 719, 1010, 722, 556,
          573, 531, 365, 583, 556, 669, 458, 559, 559, 438, 583, 688, 552, 556,
          542, 556, 500, 458, 500, 823, 500, 573, 521, 802, 823, 625, 719, 521,
          510, 750, 542, 556, 556, 556, 365, 510, 500, 222, 278, 222, 906, 812,
          556, 438, 559, 500, 552, 778, 556, 489, 411, 944, 722, 944, 722, 944,
          722, 667, 500, 333, 333, 556, 1000, 1000, 552, 222, 222, 222, 222,
          333, 333, 333, 556, 556, 350, 1000, 1000, 188, 354, 333, 333, 500,
          333, 167, 365, 556, 556, 1094, 556, 885, 323, 1073, 1000, 768, 600,
          834, 834, 834, 834, 1000, 500, 1000, 500, 1000, 500, 500, 494, 612,
          823, 713, 584, 549, 713, 979, 719, 274, 549, 549, 583, 549, 549, 604,
          584, 604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708, 708,
          708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708,
          708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708,
          708, 708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354, 1000,
          990, 990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052, 917,
          750, 750, 531, 656, 594, 510, 500, 750, 750, 500, 500, 333, 333, 333,
          333, 333, 333, 333, 333, 222, 222, 294, 294, 324, 324, 316, 328, 398,
          285,
        ];
        exports.LiberationSansRegularWidths = LiberationSansRegularWidths;
        const LiberationSansRegularMapping = [
          -1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
          46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
          63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
          80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
          97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
          111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
          125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
          174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
          188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
          202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
          216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
          230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
          244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
          258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
          272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285,
          286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299,
          300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313,
          314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327,
          328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341,
          342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355,
          356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369,
          370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383,
          402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713,
          728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908,
          910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923,
          924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938,
          939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952,
          953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
          967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028,
          1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
          1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
          1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
          1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072,
          1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083,
          1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
          1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
          1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
          1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811,
          7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216,
          8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240,
          8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359,
          8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542,
          8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721,
          8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805,
          8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500,
          9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558,
          9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569,
          9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580,
          9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642,
          9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689,
          9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834,
          9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1,
          -1, -1, -1, -1, -1, -1, -1, -1,
        ];
        exports.LiberationSansRegularMapping = LiberationSansRegularMapping;

        /***/
      },
      /* 55 */
      /***/ (__unused_webpack_module, exports) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.MyriadProRegularMetrics =
          exports.MyriadProRegularFactors =
          exports.MyriadProItalicMetrics =
          exports.MyriadProItalicFactors =
          exports.MyriadProBoldMetrics =
          exports.MyriadProBoldItalicMetrics =
          exports.MyriadProBoldItalicFactors =
          exports.MyriadProBoldFactors =
            void 0;
        const MyriadProBoldFactors = [
          1.36898, 1, 1, 0.72706, 0.80479, 0.83734, 0.98894, 0.99793, 0.9897,
          0.93884, 0.86209, 0.94292, 0.94292, 1.16661, 1.02058, 0.93582,
          0.96694, 0.93582, 1.19137, 0.99793, 0.99793, 0.99793, 0.99793,
          0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.78076,
          0.78076, 1.02058, 1.02058, 1.02058, 0.72851, 0.78966, 0.90838,
          0.83637, 0.82391, 0.96376, 0.80061, 0.86275, 0.8768, 0.95407, 1.0258,
          0.73901, 0.85022, 0.83655, 1.0156, 0.95546, 0.92179, 0.87107, 0.92179,
          0.82114, 0.8096, 0.89713, 0.94438, 0.95353, 0.94083, 0.91905, 0.90406,
          0.9446, 0.94292, 1.18777, 0.94292, 1.02058, 0.89903, 0.90088, 0.94938,
          0.97898, 0.81093, 0.97571, 0.94938, 1.024, 0.9577, 0.95933, 0.98621,
          1.0474, 0.97455, 0.98981, 0.9672, 0.95933, 0.9446, 0.97898, 0.97407,
          0.97646, 0.78036, 1.10208, 0.95442, 0.95298, 0.97579, 0.9332, 0.94039,
          0.938, 0.80687, 1.01149, 0.80687, 1.02058, 0.80479, 0.99793, 0.99793,
          0.99793, 0.99793, 1.01149, 1.00872, 0.90088, 0.91882, 1.0213, 0.8361,
          1.02058, 0.62295, 0.54324, 0.89022, 1.08595, 1, 1, 0.90088, 1,
          0.97455, 0.93582, 0.90088, 1, 1.05686, 0.8361, 0.99642, 0.99642,
          0.99642, 0.72851, 0.90838, 0.90838, 0.90838, 0.90838, 0.90838,
          0.90838, 0.868, 0.82391, 0.80061, 0.80061, 0.80061, 0.80061, 1.0258,
          1.0258, 1.0258, 1.0258, 0.97484, 0.95546, 0.92179, 0.92179, 0.92179,
          0.92179, 0.92179, 1.02058, 0.92179, 0.94438, 0.94438, 0.94438,
          0.94438, 0.90406, 0.86958, 0.98225, 0.94938, 0.94938, 0.94938,
          0.94938, 0.94938, 0.94938, 0.9031, 0.81093, 0.94938, 0.94938, 0.94938,
          0.94938, 0.98621, 0.98621, 0.98621, 0.98621, 0.93969, 0.95933, 0.9446,
          0.9446, 0.9446, 0.9446, 0.9446, 1.08595, 0.9446, 0.95442, 0.95442,
          0.95442, 0.95442, 0.94039, 0.97898, 0.94039, 0.90838, 0.94938,
          0.90838, 0.94938, 0.90838, 0.94938, 0.82391, 0.81093, 0.82391,
          0.81093, 0.82391, 0.81093, 0.82391, 0.81093, 0.96376, 0.84313,
          0.97484, 0.97571, 0.80061, 0.94938, 0.80061, 0.94938, 0.80061,
          0.94938, 0.80061, 0.94938, 0.80061, 0.94938, 0.8768, 0.9577, 0.8768,
          0.9577, 0.8768, 0.9577, 1, 1, 0.95407, 0.95933, 0.97069, 0.95933,
          1.0258, 0.98621, 1.0258, 0.98621, 1.0258, 0.98621, 1.0258, 0.98621,
          1.0258, 0.98621, 0.887, 1.01591, 0.73901, 1.0474, 1, 1, 0.97455,
          0.83655, 0.98981, 1, 1, 0.83655, 0.73977, 0.83655, 0.73903, 0.84638,
          1.033, 0.95546, 0.95933, 1, 1, 0.95546, 0.95933, 0.8271, 0.95417,
          0.95933, 0.92179, 0.9446, 0.92179, 0.9446, 0.92179, 0.9446, 0.936,
          0.91964, 0.82114, 0.97646, 1, 1, 0.82114, 0.97646, 0.8096, 0.78036,
          0.8096, 0.78036, 1, 1, 0.8096, 0.78036, 1, 1, 0.89713, 0.77452,
          0.89713, 1.10208, 0.94438, 0.95442, 0.94438, 0.95442, 0.94438,
          0.95442, 0.94438, 0.95442, 0.94438, 0.95442, 0.94438, 0.95442,
          0.94083, 0.97579, 0.90406, 0.94039, 0.90406, 0.9446, 0.938, 0.9446,
          0.938, 0.9446, 0.938, 1, 0.99793, 0.90838, 0.94938, 0.868, 0.9031,
          0.92179, 0.9446, 1, 1, 0.89713, 1.10208, 0.90088, 0.90088, 0.90088,
          0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90989, 0.9358,
          0.91945, 0.83181, 0.75261, 0.87992, 0.82976, 0.96034, 0.83689,
          0.97268, 1.0078, 0.90838, 0.83637, 0.8019, 0.90157, 0.80061, 0.9446,
          0.95407, 0.92436, 1.0258, 0.85022, 0.97153, 1.0156, 0.95546, 0.89192,
          0.92179, 0.92361, 0.87107, 0.96318, 0.89713, 0.93704, 0.95638,
          0.91905, 0.91709, 0.92796, 1.0258, 0.93704, 0.94836, 1.0373, 0.95933,
          1.0078, 0.95871, 0.94836, 0.96174, 0.92601, 0.9498, 0.98607, 0.95776,
          0.95933, 1.05453, 1.0078, 0.98275, 0.9314, 0.95617, 0.91701, 1.05993,
          0.9446, 0.78367, 0.9553, 1, 0.86832, 1.0128, 0.95871, 0.99394,
          0.87548, 0.96361, 0.86774, 1.0078, 0.95871, 0.9446, 0.95871, 0.86774,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 0.94083, 0.97579, 0.94083, 0.97579, 0.94083,
          0.97579, 0.90406, 0.94039, 0.96694, 1, 0.89903, 1, 1, 1, 0.93582,
          0.93582, 0.93582, 1, 0.908, 0.908, 0.918, 0.94219, 0.94219, 0.96544,
          1, 1.285, 1, 1, 0.81079, 0.81079, 1, 1, 0.74854, 1, 1, 1, 1, 0.99793,
          1, 1, 1, 0.65, 1, 1.36145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.17173,
          1, 0.80535, 0.76169, 1.02058, 1.0732, 1.05486, 1, 1, 1.30692, 1.08595,
          1.08595, 1, 1.08595, 1.08595, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1.16161, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        ];
        exports.MyriadProBoldFactors = MyriadProBoldFactors;
        const MyriadProBoldMetrics = {
          lineHeight: 1.2,
          lineGap: 0.2,
        };
        exports.MyriadProBoldMetrics = MyriadProBoldMetrics;
        const MyriadProBoldItalicFactors = [
          1.36898, 1, 1, 0.66227, 0.80779, 0.81625, 0.97276, 0.97276, 0.97733,
          0.92222, 0.83266, 0.94292, 0.94292, 1.16148, 1.02058, 0.93582,
          0.96694, 0.93582, 1.17337, 0.97276, 0.97276, 0.97276, 0.97276,
          0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.78076,
          0.78076, 1.02058, 1.02058, 1.02058, 0.71541, 0.76813, 0.85576,
          0.80591, 0.80729, 0.94299, 0.77512, 0.83655, 0.86523, 0.92222,
          0.98621, 0.71743, 0.81698, 0.79726, 0.98558, 0.92222, 0.90637,
          0.83809, 0.90637, 0.80729, 0.76463, 0.86275, 0.90699, 0.91605, 0.9154,
          0.85308, 0.85458, 0.90531, 0.94292, 1.21296, 0.94292, 1.02058,
          0.89903, 1.18616, 0.99613, 0.91677, 0.78216, 0.91677, 0.90083,
          0.98796, 0.9135, 0.92168, 0.95381, 0.98981, 0.95298, 0.95381, 0.93459,
          0.92168, 0.91513, 0.92004, 0.91677, 0.95077, 0.748, 1.04502, 0.91677,
          0.92061, 0.94236, 0.89544, 0.89364, 0.9, 0.80687, 0.8578, 0.80687,
          1.02058, 0.80779, 0.97276, 0.97276, 0.97276, 0.97276, 0.8578, 0.99973,
          1.18616, 0.91339, 1.08074, 0.82891, 1.02058, 0.55509, 0.71526,
          0.89022, 1.08595, 1, 1, 1.18616, 1, 0.96736, 0.93582, 1.18616, 1,
          1.04864, 0.82711, 0.99043, 0.99043, 0.99043, 0.71541, 0.85576,
          0.85576, 0.85576, 0.85576, 0.85576, 0.85576, 0.845, 0.80729, 0.77512,
          0.77512, 0.77512, 0.77512, 0.98621, 0.98621, 0.98621, 0.98621,
          0.95961, 0.92222, 0.90637, 0.90637, 0.90637, 0.90637, 0.90637,
          1.02058, 0.90251, 0.90699, 0.90699, 0.90699, 0.90699, 0.85458,
          0.83659, 0.94951, 0.99613, 0.99613, 0.99613, 0.99613, 0.99613,
          0.99613, 0.85811, 0.78216, 0.90083, 0.90083, 0.90083, 0.90083,
          0.95381, 0.95381, 0.95381, 0.95381, 0.9135, 0.92168, 0.91513, 0.91513,
          0.91513, 0.91513, 0.91513, 1.08595, 0.91677, 0.91677, 0.91677,
          0.91677, 0.91677, 0.89364, 0.92332, 0.89364, 0.85576, 0.99613,
          0.85576, 0.99613, 0.85576, 0.99613, 0.80729, 0.78216, 0.80729,
          0.78216, 0.80729, 0.78216, 0.80729, 0.78216, 0.94299, 0.76783,
          0.95961, 0.91677, 0.77512, 0.90083, 0.77512, 0.90083, 0.77512,
          0.90083, 0.77512, 0.90083, 0.77512, 0.90083, 0.86523, 0.9135, 0.86523,
          0.9135, 0.86523, 0.9135, 1, 1, 0.92222, 0.92168, 0.92222, 0.92168,
          0.98621, 0.95381, 0.98621, 0.95381, 0.98621, 0.95381, 0.98621,
          0.95381, 0.98621, 0.95381, 0.86036, 0.97096, 0.71743, 0.98981, 1, 1,
          0.95298, 0.79726, 0.95381, 1, 1, 0.79726, 0.6894, 0.79726, 0.74321,
          0.81691, 1.0006, 0.92222, 0.92168, 1, 1, 0.92222, 0.92168, 0.79464,
          0.92098, 0.92168, 0.90637, 0.91513, 0.90637, 0.91513, 0.90637,
          0.91513, 0.909, 0.87514, 0.80729, 0.95077, 1, 1, 0.80729, 0.95077,
          0.76463, 0.748, 0.76463, 0.748, 1, 1, 0.76463, 0.748, 1, 1, 0.86275,
          0.72651, 0.86275, 1.04502, 0.90699, 0.91677, 0.90699, 0.91677,
          0.90699, 0.91677, 0.90699, 0.91677, 0.90699, 0.91677, 0.90699,
          0.91677, 0.9154, 0.94236, 0.85458, 0.89364, 0.85458, 0.90531, 0.9,
          0.90531, 0.9, 0.90531, 0.9, 1, 0.97276, 0.85576, 0.99613, 0.845,
          0.85811, 0.90251, 0.91677, 1, 1, 0.86275, 1.04502, 1.18616, 1.18616,
          1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616,
          1.00899, 1.30628, 0.85576, 0.80178, 0.66862, 0.7927, 0.69323, 0.88127,
          0.72459, 0.89711, 0.95381, 0.85576, 0.80591, 0.7805, 0.94729, 0.77512,
          0.90531, 0.92222, 0.90637, 0.98621, 0.81698, 0.92655, 0.98558,
          0.92222, 0.85359, 0.90637, 0.90976, 0.83809, 0.94523, 0.86275,
          0.83509, 0.93157, 0.85308, 0.83392, 0.92346, 0.98621, 0.83509,
          0.92886, 0.91324, 0.92168, 0.95381, 0.90646, 0.92886, 0.90557,
          0.86847, 0.90276, 0.91324, 0.86842, 0.92168, 0.99531, 0.95381, 0.9224,
          0.85408, 0.92699, 0.86847, 1.0051, 0.91513, 0.80487, 0.93481, 1,
          0.88159, 1.05214, 0.90646, 0.97355, 0.81539, 0.89398, 0.85923,
          0.95381, 0.90646, 0.91513, 0.90646, 0.85923, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          0.9154, 0.94236, 0.9154, 0.94236, 0.9154, 0.94236, 0.85458, 0.89364,
          0.96694, 1, 0.89903, 1, 1, 1, 0.91782, 0.91782, 0.91782, 1, 0.896,
          0.896, 0.896, 0.9332, 0.9332, 0.95973, 1, 1.26, 1, 1, 0.80479,
          0.80178, 1, 1, 0.85633, 1, 1, 1, 1, 0.97276, 1, 1, 1, 0.698, 1,
          1.36145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.14542, 1, 0.79199,
          0.78694, 1.02058, 1.03493, 1.05486, 1, 1, 1.23026, 1.08595, 1.08595,
          1, 1.08595, 1.08595, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1.20006, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        ];
        exports.MyriadProBoldItalicFactors = MyriadProBoldItalicFactors;
        const MyriadProBoldItalicMetrics = {
          lineHeight: 1.2,
          lineGap: 0.2,
        };
        exports.MyriadProBoldItalicMetrics = MyriadProBoldItalicMetrics;
        const MyriadProItalicFactors = [
          1.36898, 1, 1, 0.65507, 0.84943, 0.85639, 0.88465, 0.88465, 0.86936,
          0.88307, 0.86948, 0.85283, 0.85283, 1.06383, 1.02058, 0.75945, 0.9219,
          0.75945, 1.17337, 0.88465, 0.88465, 0.88465, 0.88465, 0.88465,
          0.88465, 0.88465, 0.88465, 0.88465, 0.88465, 0.75945, 0.75945,
          1.02058, 1.02058, 1.02058, 0.69046, 0.70926, 0.85158, 0.77812,
          0.76852, 0.89591, 0.70466, 0.76125, 0.80094, 0.86822, 0.83864, 0.728,
          0.77212, 0.79475, 0.93637, 0.87514, 0.8588, 0.76013, 0.8588, 0.72421,
          0.69866, 0.77598, 0.85991, 0.80811, 0.87832, 0.78112, 0.77512, 0.8562,
          1.0222, 1.18417, 1.0222, 1.27014, 0.89903, 1.15012, 0.93859, 0.94399,
          0.846, 0.94399, 0.81453, 1.0186, 0.94219, 0.96017, 1.03075, 1.02175,
          0.912, 1.03075, 0.96998, 0.96017, 0.93859, 0.94399, 0.94399, 0.95493,
          0.746, 1.12658, 0.94578, 0.91, 0.979, 0.882, 0.882, 0.83, 0.85034,
          0.83537, 0.85034, 1.02058, 0.70869, 0.88465, 0.88465, 0.88465,
          0.88465, 0.83537, 0.90083, 1.15012, 0.9161, 0.94565, 0.73541, 1.02058,
          0.53609, 0.69353, 0.79519, 1.08595, 1, 1, 1.15012, 1, 0.91974,
          0.75945, 1.15012, 1, 0.9446, 0.73361, 0.9005, 0.9005, 0.9005, 0.62864,
          0.85158, 0.85158, 0.85158, 0.85158, 0.85158, 0.85158, 0.773, 0.76852,
          0.70466, 0.70466, 0.70466, 0.70466, 0.83864, 0.83864, 0.83864,
          0.83864, 0.90561, 0.87514, 0.8588, 0.8588, 0.8588, 0.8588, 0.8588,
          1.02058, 0.85751, 0.85991, 0.85991, 0.85991, 0.85991, 0.77512,
          0.76013, 0.88075, 0.93859, 0.93859, 0.93859, 0.93859, 0.93859,
          0.93859, 0.8075, 0.846, 0.81453, 0.81453, 0.81453, 0.81453, 0.82424,
          0.82424, 0.82424, 0.82424, 0.9278, 0.96017, 0.93859, 0.93859, 0.93859,
          0.93859, 0.93859, 1.08595, 0.8562, 0.94578, 0.94578, 0.94578, 0.94578,
          0.882, 0.94578, 0.882, 0.85158, 0.93859, 0.85158, 0.93859, 0.85158,
          0.93859, 0.76852, 0.846, 0.76852, 0.846, 0.76852, 0.846, 0.76852,
          0.846, 0.89591, 0.8544, 0.90561, 0.94399, 0.70466, 0.81453, 0.70466,
          0.81453, 0.70466, 0.81453, 0.70466, 0.81453, 0.70466, 0.81453,
          0.80094, 0.94219, 0.80094, 0.94219, 0.80094, 0.94219, 1, 1, 0.86822,
          0.96017, 0.86822, 0.96017, 0.83864, 0.82424, 0.83864, 0.82424,
          0.83864, 0.82424, 0.83864, 1.03075, 0.83864, 0.82424, 0.81402,
          1.02738, 0.728, 1.02175, 1, 1, 0.912, 0.79475, 1.03075, 1, 1, 0.79475,
          0.83911, 0.79475, 0.66266, 0.80553, 1.06676, 0.87514, 0.96017, 1, 1,
          0.87514, 0.96017, 0.86865, 0.87396, 0.96017, 0.8588, 0.93859, 0.8588,
          0.93859, 0.8588, 0.93859, 0.867, 0.84759, 0.72421, 0.95493, 1, 1,
          0.72421, 0.95493, 0.69866, 0.746, 0.69866, 0.746, 1, 1, 0.69866,
          0.746, 1, 1, 0.77598, 0.88417, 0.77598, 1.12658, 0.85991, 0.94578,
          0.85991, 0.94578, 0.85991, 0.94578, 0.85991, 0.94578, 0.85991,
          0.94578, 0.85991, 0.94578, 0.87832, 0.979, 0.77512, 0.882, 0.77512,
          0.8562, 0.83, 0.8562, 0.83, 0.8562, 0.83, 1, 0.88465, 0.85158,
          0.93859, 0.773, 0.8075, 0.85751, 0.8562, 1, 1, 0.77598, 1.12658,
          1.15012, 1.15012, 1.15012, 1.15012, 1.15012, 1.15313, 1.15012,
          1.15012, 1.15012, 1.08106, 1.03901, 0.85158, 0.77025, 0.62264, 0.7646,
          0.65351, 0.86026, 0.69461, 0.89947, 1.03075, 0.85158, 0.77812,
          0.76449, 0.88836, 0.70466, 0.8562, 0.86822, 0.8588, 0.83864, 0.77212,
          0.85308, 0.93637, 0.87514, 0.82352, 0.8588, 0.85701, 0.76013, 0.89058,
          0.77598, 0.8156, 0.82565, 0.78112, 0.77899, 0.89386, 0.83864, 0.8156,
          0.9486, 0.92388, 0.96186, 1.03075, 0.91123, 0.9486, 0.93298, 0.878,
          0.93942, 0.92388, 0.84596, 0.96186, 0.95119, 1.03075, 0.922, 0.88787,
          0.95829, 0.88, 0.93559, 0.93859, 0.78815, 0.93758, 1, 0.89217,
          1.03737, 0.91123, 0.93969, 0.77487, 0.85769, 0.86799, 1.03075,
          0.91123, 0.93859, 0.91123, 0.86799, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.87832,
          0.979, 0.87832, 0.979, 0.87832, 0.979, 0.77512, 0.882, 0.9219, 1,
          0.89903, 1, 1, 1, 0.87321, 0.87321, 0.87321, 1, 1.027, 1.027, 1.027,
          0.86847, 0.86847, 0.79121, 1, 1.124, 1, 1, 0.73572, 0.73572, 1, 1,
          0.85034, 1, 1, 1, 1, 0.88465, 1, 1, 1, 0.669, 1, 1.36145, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1.04828, 1, 0.74948, 0.75187, 1.02058, 0.98391,
          1.02119, 1, 1, 1.06233, 1.08595, 1.08595, 1, 1.08595, 1.08595, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.05233, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1,
        ];
        exports.MyriadProItalicFactors = MyriadProItalicFactors;
        const MyriadProItalicMetrics = {
          lineHeight: 1.2,
          lineGap: 0.2,
        };
        exports.MyriadProItalicMetrics = MyriadProItalicMetrics;
        const MyriadProRegularFactors = [
          1.36898, 1, 1, 0.76305, 0.82784, 0.94935, 0.89364, 0.92241, 0.89073,
          0.90706, 0.98472, 0.85283, 0.85283, 1.0664, 1.02058, 0.74505, 0.9219,
          0.74505, 1.23456, 0.92241, 0.92241, 0.92241, 0.92241, 0.92241,
          0.92241, 0.92241, 0.92241, 0.92241, 0.92241, 0.74505, 0.74505,
          1.02058, 1.02058, 1.02058, 0.73002, 0.72601, 0.91755, 0.8126, 0.80314,
          0.92222, 0.73764, 0.79726, 0.83051, 0.90284, 0.86023, 0.74, 0.8126,
          0.84869, 0.96518, 0.91115, 0.8858, 0.79761, 0.8858, 0.74498, 0.73914,
          0.81363, 0.89591, 0.83659, 0.89633, 0.85608, 0.8111, 0.90531, 1.0222,
          1.22736, 1.0222, 1.27014, 0.89903, 0.90088, 0.86667, 1.0231, 0.896,
          1.01411, 0.90083, 1.05099, 1.00512, 0.99793, 1.05326, 1.09377, 0.938,
          1.06226, 1.00119, 0.99793, 0.98714, 1.0231, 1.01231, 0.98196, 0.792,
          1.19137, 0.99074, 0.962, 1.01915, 0.926, 0.942, 0.856, 0.85034,
          0.92006, 0.85034, 1.02058, 0.69067, 0.92241, 0.92241, 0.92241,
          0.92241, 0.92006, 0.9332, 0.90088, 0.91882, 0.93484, 0.75339, 1.02058,
          0.56866, 0.54324, 0.79519, 1.08595, 1, 1, 0.90088, 1, 0.95325,
          0.74505, 0.90088, 1, 0.97198, 0.75339, 0.91009, 0.91009, 0.91009,
          0.66466, 0.91755, 0.91755, 0.91755, 0.91755, 0.91755, 0.91755, 0.788,
          0.80314, 0.73764, 0.73764, 0.73764, 0.73764, 0.86023, 0.86023,
          0.86023, 0.86023, 0.92915, 0.91115, 0.8858, 0.8858, 0.8858, 0.8858,
          0.8858, 1.02058, 0.8858, 0.89591, 0.89591, 0.89591, 0.89591, 0.8111,
          0.79611, 0.89713, 0.86667, 0.86667, 0.86667, 0.86667, 0.86667,
          0.86667, 0.86936, 0.896, 0.90083, 0.90083, 0.90083, 0.90083, 0.84224,
          0.84224, 0.84224, 0.84224, 0.97276, 0.99793, 0.98714, 0.98714,
          0.98714, 0.98714, 0.98714, 1.08595, 0.89876, 0.99074, 0.99074,
          0.99074, 0.99074, 0.942, 1.0231, 0.942, 0.91755, 0.86667, 0.91755,
          0.86667, 0.91755, 0.86667, 0.80314, 0.896, 0.80314, 0.896, 0.80314,
          0.896, 0.80314, 0.896, 0.92222, 0.93372, 0.92915, 1.01411, 0.73764,
          0.90083, 0.73764, 0.90083, 0.73764, 0.90083, 0.73764, 0.90083,
          0.73764, 0.90083, 0.83051, 1.00512, 0.83051, 1.00512, 0.83051,
          1.00512, 1, 1, 0.90284, 0.99793, 0.90976, 0.99793, 0.86023, 0.84224,
          0.86023, 0.84224, 0.86023, 0.84224, 0.86023, 1.05326, 0.86023,
          0.84224, 0.82873, 1.07469, 0.74, 1.09377, 1, 1, 0.938, 0.84869,
          1.06226, 1, 1, 0.84869, 0.83704, 0.84869, 0.81441, 0.85588, 1.08927,
          0.91115, 0.99793, 1, 1, 0.91115, 0.99793, 0.91887, 0.90991, 0.99793,
          0.8858, 0.98714, 0.8858, 0.98714, 0.8858, 0.98714, 0.894, 0.91434,
          0.74498, 0.98196, 1, 1, 0.74498, 0.98196, 0.73914, 0.792, 0.73914,
          0.792, 1, 1, 0.73914, 0.792, 1, 1, 0.81363, 0.904, 0.81363, 1.19137,
          0.89591, 0.99074, 0.89591, 0.99074, 0.89591, 0.99074, 0.89591,
          0.99074, 0.89591, 0.99074, 0.89591, 0.99074, 0.89633, 1.01915, 0.8111,
          0.942, 0.8111, 0.90531, 0.856, 0.90531, 0.856, 0.90531, 0.856, 1,
          0.92241, 0.91755, 0.86667, 0.788, 0.86936, 0.8858, 0.89876, 1, 1,
          0.81363, 1.19137, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088,
          0.90088, 0.90088, 0.90088, 0.90088, 0.90388, 1.03901, 0.92138,
          0.78105, 0.7154, 0.86169, 0.80513, 0.94007, 0.82528, 0.98612, 1.06226,
          0.91755, 0.8126, 0.81884, 0.92819, 0.73764, 0.90531, 0.90284, 0.8858,
          0.86023, 0.8126, 0.91172, 0.96518, 0.91115, 0.83089, 0.8858, 0.87791,
          0.79761, 0.89297, 0.81363, 0.88157, 0.89992, 0.85608, 0.81992,
          0.94307, 0.86023, 0.88157, 0.95308, 0.98699, 0.99793, 1.06226,
          0.95817, 0.95308, 0.97358, 0.928, 0.98088, 0.98699, 0.92761, 0.99793,
          0.96017, 1.06226, 0.986, 0.944, 0.95978, 0.938, 0.96705, 0.98714,
          0.80442, 0.98972, 1, 0.89762, 1.04552, 0.95817, 0.99007, 0.87064,
          0.91879, 0.88888, 1.06226, 0.95817, 0.98714, 0.95817, 0.88888, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 0.89633, 1.01915, 0.89633, 1.01915, 0.89633,
          1.01915, 0.8111, 0.942, 0.9219, 1, 0.89903, 1, 1, 1, 0.93173, 0.93173,
          0.93173, 1, 1.06304, 1.06304, 1.06904, 0.89903, 0.89903, 0.80549, 1,
          1.156, 1, 1, 0.76575, 0.76575, 1, 1, 0.72458, 1, 1, 1, 1, 0.92241, 1,
          1, 1, 0.619, 1, 1.36145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.07257, 1,
          0.74705, 0.71119, 1.02058, 1.024, 1.02119, 1, 1, 1.1536, 1.08595,
          1.08595, 1, 1.08595, 1.08595, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1.05638, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        ];
        exports.MyriadProRegularFactors = MyriadProRegularFactors;
        const MyriadProRegularMetrics = {
          lineHeight: 1.2,
          lineGap: 0.2,
        };
        exports.MyriadProRegularMetrics = MyriadProRegularMetrics;

        /***/
      },
      /* 56 */
      /***/ (__unused_webpack_module, exports) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.SegoeuiRegularMetrics =
          exports.SegoeuiRegularFactors =
          exports.SegoeuiItalicMetrics =
          exports.SegoeuiItalicFactors =
          exports.SegoeuiBoldMetrics =
          exports.SegoeuiBoldItalicMetrics =
          exports.SegoeuiBoldItalicFactors =
          exports.SegoeuiBoldFactors =
            void 0;
        const SegoeuiBoldFactors = [
          1.76738, 1, 1, 0.99297, 0.9824, 1.04016, 1.06497, 1.03424, 0.97529,
          1.17647, 1.23203, 1.1085, 1.1085, 1.16939, 1.2107, 0.9754, 1.21408,
          0.9754, 1.59578, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424,
          1.03424, 1.03424, 1.03424, 1.03424, 0.81378, 0.81378, 1.2107, 1.2107,
          1.2107, 0.71703, 0.97847, 0.97363, 0.88776, 0.8641, 1.02096, 0.79795,
          0.85132, 0.914, 1.06085, 1.1406, 0.8007, 0.89858, 0.83693, 1.14889,
          1.09398, 0.97489, 0.92094, 0.97489, 0.90399, 0.84041, 0.95923,
          1.00135, 1, 1.06467, 0.98243, 0.90996, 0.99361, 1.1085, 1.56942,
          1.1085, 1.2107, 0.74627, 0.94282, 0.96752, 1.01519, 0.86304, 1.01359,
          0.97278, 1.15103, 1.01359, 0.98561, 1.02285, 1.02285, 1.00527,
          1.02285, 1.0302, 0.99041, 1.0008, 1.01519, 1.01359, 1.02258, 0.79104,
          1.16862, 0.99041, 0.97454, 1.02511, 0.99298, 0.96752, 0.95801,
          0.94856, 1.16579, 0.94856, 1.2107, 0.9824, 1.03424, 1.03424, 1,
          1.03424, 1.16579, 0.8727, 1.3871, 1.18622, 1.10818, 1.04478, 1.2107,
          1.18622, 0.75155, 0.94994, 1.28826, 1.21408, 1.21408, 0.91056, 1,
          0.91572, 0.9754, 0.64663, 1.18328, 1.24866, 1.04478, 1.14169, 1.15749,
          1.17389, 0.71703, 0.97363, 0.97363, 0.97363, 0.97363, 0.97363,
          0.97363, 0.93506, 0.8641, 0.79795, 0.79795, 0.79795, 0.79795, 1.1406,
          1.1406, 1.1406, 1.1406, 1.02096, 1.09398, 0.97426, 0.97426, 0.97426,
          0.97426, 0.97426, 1.2107, 0.97489, 1.00135, 1.00135, 1.00135, 1.00135,
          0.90996, 0.92094, 1.02798, 0.96752, 0.96752, 0.96752, 0.96752,
          0.96752, 0.96752, 0.93136, 0.86304, 0.97278, 0.97278, 0.97278,
          0.97278, 1.02285, 1.02285, 1.02285, 1.02285, 0.97122, 0.99041, 1, 1,
          1, 1, 1, 1.28826, 1.0008, 0.99041, 0.99041, 0.99041, 0.99041, 0.96752,
          1.01519, 0.96752, 0.97363, 0.96752, 0.97363, 0.96752, 0.97363,
          0.96752, 0.8641, 0.86304, 0.8641, 0.86304, 0.8641, 0.86304, 0.8641,
          0.86304, 1.02096, 1.03057, 1.02096, 1.03517, 0.79795, 0.97278,
          0.79795, 0.97278, 0.79795, 0.97278, 0.79795, 0.97278, 0.79795,
          0.97278, 0.914, 1.01359, 0.914, 1.01359, 0.914, 1.01359, 1, 1,
          1.06085, 0.98561, 1.06085, 1.00879, 1.1406, 1.02285, 1.1406, 1.02285,
          1.1406, 1.02285, 1.1406, 1.02285, 1.1406, 1.02285, 0.97138, 1.08692,
          0.8007, 1.02285, 1, 1, 1.00527, 0.83693, 1.02285, 1, 1, 0.83693,
          0.9455, 0.83693, 0.90418, 0.83693, 1.13005, 1.09398, 0.99041, 1, 1,
          1.09398, 0.99041, 0.96692, 1.09251, 0.99041, 0.97489, 1.0008, 0.97489,
          1.0008, 0.97489, 1.0008, 0.93994, 0.97931, 0.90399, 1.02258, 1, 1,
          0.90399, 1.02258, 0.84041, 0.79104, 0.84041, 0.79104, 0.84041,
          0.79104, 0.84041, 0.79104, 1, 1, 0.95923, 1.07034, 0.95923, 1.16862,
          1.00135, 0.99041, 1.00135, 0.99041, 1.00135, 0.99041, 1.00135,
          0.99041, 1.00135, 0.99041, 1.00135, 0.99041, 1.06467, 1.02511,
          0.90996, 0.96752, 0.90996, 0.99361, 0.95801, 0.99361, 0.95801,
          0.99361, 0.95801, 1.07733, 1.03424, 0.97363, 0.96752, 0.93506,
          0.93136, 0.97489, 1.0008, 1, 1, 0.95923, 1.16862, 1.15103, 1.15103,
          1.01173, 1.03959, 0.75953, 0.81378, 0.79912, 1.15103, 1.21994,
          0.95161, 0.87815, 1.01149, 0.81525, 0.7676, 0.98167, 1.01134, 1.02546,
          0.84097, 1.03089, 1.18102, 0.97363, 0.88776, 0.85134, 0.97826,
          0.79795, 0.99361, 1.06085, 0.97489, 1.1406, 0.89858, 1.0388, 1.14889,
          1.09398, 0.86039, 0.97489, 1.0595, 0.92094, 0.94793, 0.95923, 0.90996,
          0.99346, 0.98243, 1.02112, 0.95493, 1.1406, 0.90996, 1.03574, 1.02597,
          1.0008, 1.18102, 1.06628, 1.03574, 1.0192, 1.01932, 1.00886, 0.97531,
          1.0106, 1.0008, 1.13189, 1.18102, 1.02277, 0.98683, 1.0016, 0.99561,
          1.07237, 1.0008, 0.90434, 0.99921, 0.93803, 0.8965, 1.23085, 1.06628,
          1.04983, 0.96268, 1.0499, 0.98439, 1.18102, 1.06628, 1.0008, 1.06628,
          0.98439, 0.79795, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.09466, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.97278, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.02065, 1, 1, 1, 1, 1, 1, 1.06467,
          1.02511, 1.06467, 1.02511, 1.06467, 1.02511, 0.90996, 0.96752, 1,
          1.21408, 0.89903, 1, 1, 0.75155, 1.04394, 1.04394, 1.04394, 1.04394,
          0.98633, 0.98633, 0.98633, 0.73047, 0.73047, 1.20642, 0.91211,
          1.25635, 1.222, 1.02956, 1.03372, 1.03372, 0.96039, 1.24633, 1,
          1.12454, 0.93503, 1.03424, 1.19687, 1.03424, 1, 1, 1, 0.771, 1, 1,
          1.15749, 1.15749, 1.15749, 1.10948, 0.86279, 0.94434, 0.86279,
          0.94434, 0.86182, 1, 1, 1.16897, 1, 0.96085, 0.90137, 1.2107, 1.18416,
          1.13973, 0.69825, 0.9716, 2.10339, 1.29004, 1.29004, 1.21172, 1.29004,
          1.29004, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1.42603, 1, 0.99862, 0.99862, 1, 0.87025,
          0.87025, 0.87025, 0.87025, 1.18874, 1.42603, 1, 1.42603, 1.42603,
          0.99862, 1, 1, 1, 1, 1, 1.2886, 1.04315, 1.15296, 1.34163, 1, 1, 1,
          1.09193, 1.09193, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1,
        ];
        exports.SegoeuiBoldFactors = SegoeuiBoldFactors;
        const SegoeuiBoldMetrics = {
          lineHeight: 1.33008,
          lineGap: 0,
        };
        exports.SegoeuiBoldMetrics = SegoeuiBoldMetrics;
        const SegoeuiBoldItalicFactors = [
          1.76738, 1, 1, 0.98946, 1.03959, 1.04016, 1.02809, 1.036, 0.97639,
          1.10953, 1.23203, 1.11144, 1.11144, 1.16939, 1.21237, 0.9754, 1.21261,
          0.9754, 1.59754, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036,
          1.036, 1.036, 1.036, 0.81378, 0.81378, 1.21237, 1.21237, 1.21237,
          0.73541, 0.97847, 0.97363, 0.89723, 0.87897, 1.0426, 0.79429, 0.85292,
          0.91149, 1.05815, 1.1406, 0.79631, 0.90128, 0.83853, 1.04396, 1.10615,
          0.97552, 0.94436, 0.97552, 0.88641, 0.80527, 0.96083, 1.00135, 1,
          1.06777, 0.9817, 0.91142, 0.99361, 1.11144, 1.57293, 1.11144, 1.21237,
          0.74627, 1.31818, 1.06585, 0.97042, 0.83055, 0.97042, 0.93503, 1.1261,
          0.97042, 0.97922, 1.14236, 0.94552, 1.01054, 1.14236, 1.02471,
          0.97922, 0.94165, 0.97042, 0.97042, 1.0276, 0.78929, 1.1261, 0.97922,
          0.95874, 1.02197, 0.98507, 0.96752, 0.97168, 0.95107, 1.16579,
          0.95107, 1.21237, 1.03959, 1.036, 1.036, 1, 1.036, 1.16579, 0.87357,
          1.31818, 1.18754, 1.26781, 1.05356, 1.21237, 1.18622, 0.79487,
          0.94994, 1.29004, 1.24047, 1.24047, 1.31818, 1, 0.91484, 0.9754,
          1.31818, 1.1349, 1.24866, 1.05356, 1.13934, 1.15574, 1.17389, 0.73541,
          0.97363, 0.97363, 0.97363, 0.97363, 0.97363, 0.97363, 0.94385,
          0.87897, 0.79429, 0.79429, 0.79429, 0.79429, 1.1406, 1.1406, 1.1406,
          1.1406, 1.0426, 1.10615, 0.97552, 0.97552, 0.97552, 0.97552, 0.97552,
          1.21237, 0.97552, 1.00135, 1.00135, 1.00135, 1.00135, 0.91142,
          0.94436, 0.98721, 1.06585, 1.06585, 1.06585, 1.06585, 1.06585,
          1.06585, 0.96705, 0.83055, 0.93503, 0.93503, 0.93503, 0.93503,
          1.14236, 1.14236, 1.14236, 1.14236, 0.93125, 0.97922, 0.94165,
          0.94165, 0.94165, 0.94165, 0.94165, 1.29004, 0.94165, 0.97922,
          0.97922, 0.97922, 0.97922, 0.96752, 0.97042, 0.96752, 0.97363,
          1.06585, 0.97363, 1.06585, 0.97363, 1.06585, 0.87897, 0.83055,
          0.87897, 0.83055, 0.87897, 0.83055, 0.87897, 0.83055, 1.0426, 1.0033,
          1.0426, 0.97042, 0.79429, 0.93503, 0.79429, 0.93503, 0.79429, 0.93503,
          0.79429, 0.93503, 0.79429, 0.93503, 0.91149, 0.97042, 0.91149,
          0.97042, 0.91149, 0.97042, 1, 1, 1.05815, 0.97922, 1.05815, 0.97922,
          1.1406, 1.14236, 1.1406, 1.14236, 1.1406, 1.14236, 1.1406, 1.14236,
          1.1406, 1.14236, 0.97441, 1.04302, 0.79631, 1.01582, 1, 1, 1.01054,
          0.83853, 1.14236, 1, 1, 0.83853, 1.09125, 0.83853, 0.90418, 0.83853,
          1.19508, 1.10615, 0.97922, 1, 1, 1.10615, 0.97922, 1.01034, 1.10466,
          0.97922, 0.97552, 0.94165, 0.97552, 0.94165, 0.97552, 0.94165,
          0.91602, 0.91981, 0.88641, 1.0276, 1, 1, 0.88641, 1.0276, 0.80527,
          0.78929, 0.80527, 0.78929, 0.80527, 0.78929, 0.80527, 0.78929, 1, 1,
          0.96083, 1.05403, 0.95923, 1.16862, 1.00135, 0.97922, 1.00135,
          0.97922, 1.00135, 0.97922, 1.00135, 0.97922, 1.00135, 0.97922,
          1.00135, 0.97922, 1.06777, 1.02197, 0.91142, 0.96752, 0.91142,
          0.99361, 0.97168, 0.99361, 0.97168, 0.99361, 0.97168, 1.23199, 1.036,
          0.97363, 1.06585, 0.94385, 0.96705, 0.97552, 0.94165, 1, 1, 0.96083,
          1.1261, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818,
          1.31818, 1.31818, 0.95161, 1.27126, 1.00811, 0.83284, 0.77702,
          0.99137, 0.95253, 1.0347, 0.86142, 1.07205, 1.14236, 0.97363, 0.89723,
          0.86869, 1.09818, 0.79429, 0.99361, 1.05815, 0.97552, 1.1406, 0.90128,
          1.06662, 1.04396, 1.10615, 0.84918, 0.97552, 1.04694, 0.94436,
          0.98015, 0.96083, 0.91142, 1.00356, 0.9817, 1.01945, 0.98999, 1.1406,
          0.91142, 1.04961, 0.9898, 1.00639, 1.14236, 1.07514, 1.04961, 0.99607,
          1.02897, 1.008, 0.9898, 0.95134, 1.00639, 1.11121, 1.14236, 1.00518,
          0.97981, 1.02186, 1, 1.08578, 0.94165, 0.99314, 0.98387, 0.93028,
          0.93377, 1.35125, 1.07514, 1.10687, 0.93491, 1.04232, 1.00351,
          1.14236, 1.07514, 0.94165, 1.07514, 1.00351, 0.79429, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1.09097, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 0.93503, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          0.96609, 1, 1, 1, 1, 1, 1, 1.06777, 1.02197, 1.06777, 1.02197,
          1.06777, 1.02197, 0.91142, 0.96752, 1, 1.21261, 0.89903, 1, 1,
          0.75155, 1.04745, 1.04745, 1.04745, 1.04394, 0.98633, 0.98633,
          0.98633, 0.72959, 0.72959, 1.20502, 0.91406, 1.26514, 1.222, 1.02956,
          1.03372, 1.03372, 0.96039, 1.24633, 1, 1.09125, 0.93327, 1.03336,
          1.16541, 1.036, 1, 1, 1, 0.771, 1, 1, 1.15574, 1.15574, 1.15574,
          1.15574, 0.86364, 0.94434, 0.86279, 0.94434, 0.86224, 1, 1, 1.16798,
          1, 0.96085, 0.90068, 1.21237, 1.18416, 1.13904, 0.69825, 0.9716,
          2.10339, 1.29004, 1.29004, 1.21339, 1.29004, 1.29004, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1.42603, 1, 0.99862, 0.99862, 1, 0.87025, 0.87025, 0.87025,
          0.87025, 1.18775, 1.42603, 1, 1.42603, 1.42603, 0.99862, 1, 1, 1, 1,
          1, 1.2886, 1.04315, 1.15296, 1.34163, 1, 1, 1, 1.13269, 1.13269, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        ];
        exports.SegoeuiBoldItalicFactors = SegoeuiBoldItalicFactors;
        const SegoeuiBoldItalicMetrics = {
          lineHeight: 1.33008,
          lineGap: 0,
        };
        exports.SegoeuiBoldItalicMetrics = SegoeuiBoldItalicMetrics;
        const SegoeuiItalicFactors = [
          1.76738, 1, 1, 0.98946, 1.14763, 1.05365, 1.06234, 0.96927, 0.92586,
          1.15373, 1.18414, 0.91349, 0.91349, 1.07403, 1.17308, 0.78383,
          1.20088, 0.78383, 1.42531, 0.96927, 0.96927, 0.96927, 0.96927,
          0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.78383,
          0.78383, 1.17308, 1.17308, 1.17308, 0.77349, 0.94565, 0.94729,
          0.85944, 0.88506, 0.9858, 0.74817, 0.80016, 0.88449, 0.98039, 0.95782,
          0.69238, 0.89898, 0.83231, 0.98183, 1.03989, 0.96924, 0.86237,
          0.96924, 0.80595, 0.74524, 0.86091, 0.95402, 0.94143, 0.98448, 0.8858,
          0.83089, 0.93285, 1.0949, 1.39016, 1.0949, 1.45994, 0.74627, 1.04839,
          0.97454, 0.97454, 0.87207, 0.97454, 0.87533, 1.06151, 0.97454,
          1.00176, 1.16484, 1.08132, 0.98047, 1.16484, 1.02989, 1.01054,
          0.96225, 0.97454, 0.97454, 1.06598, 0.79004, 1.16344, 1.00351,
          0.94629, 0.9973, 0.91016, 0.96777, 0.9043, 0.91082, 0.92481, 0.91082,
          1.17308, 0.95748, 0.96927, 0.96927, 1, 0.96927, 0.92481, 0.80597,
          1.04839, 1.23393, 1.1781, 0.9245, 1.17308, 1.20808, 0.63218, 0.94261,
          1.24822, 1.09971, 1.09971, 1.04839, 1, 0.85273, 0.78032, 1.04839,
          1.09971, 1.22326, 0.9245, 1.09836, 1.13525, 1.15222, 0.70424, 0.94729,
          0.94729, 0.94729, 0.94729, 0.94729, 0.94729, 0.85498, 0.88506,
          0.74817, 0.74817, 0.74817, 0.74817, 0.95782, 0.95782, 0.95782,
          0.95782, 0.9858, 1.03989, 0.96924, 0.96924, 0.96924, 0.96924, 0.96924,
          1.17308, 0.96924, 0.95402, 0.95402, 0.95402, 0.95402, 0.83089,
          0.86237, 0.88409, 0.97454, 0.97454, 0.97454, 0.97454, 0.97454,
          0.97454, 0.92916, 0.87207, 0.87533, 0.87533, 0.87533, 0.87533,
          0.93146, 0.93146, 0.93146, 0.93146, 0.93854, 1.01054, 0.96225,
          0.96225, 0.96225, 0.96225, 0.96225, 1.24822, 0.8761, 1.00351, 1.00351,
          1.00351, 1.00351, 0.96777, 0.97454, 0.96777, 0.94729, 0.97454,
          0.94729, 0.97454, 0.94729, 0.97454, 0.88506, 0.87207, 0.88506,
          0.87207, 0.88506, 0.87207, 0.88506, 0.87207, 0.9858, 0.95391, 0.9858,
          0.97454, 0.74817, 0.87533, 0.74817, 0.87533, 0.74817, 0.87533,
          0.74817, 0.87533, 0.74817, 0.87533, 0.88449, 0.97454, 0.88449,
          0.97454, 0.88449, 0.97454, 1, 1, 0.98039, 1.00176, 0.98039, 1.00176,
          0.95782, 0.93146, 0.95782, 0.93146, 0.95782, 0.93146, 0.95782,
          1.16484, 0.95782, 0.93146, 0.84421, 1.12761, 0.69238, 1.08132, 1, 1,
          0.98047, 0.83231, 1.16484, 1, 1, 0.84723, 1.04861, 0.84723, 0.78755,
          0.83231, 1.23736, 1.03989, 1.01054, 1, 1, 1.03989, 1.01054, 0.9857,
          1.03849, 1.01054, 0.96924, 0.96225, 0.96924, 0.96225, 0.96924,
          0.96225, 0.92383, 0.90171, 0.80595, 1.06598, 1, 1, 0.80595, 1.06598,
          0.74524, 0.79004, 0.74524, 0.79004, 0.74524, 0.79004, 0.74524,
          0.79004, 1, 1, 0.86091, 1.02759, 0.85771, 1.16344, 0.95402, 1.00351,
          0.95402, 1.00351, 0.95402, 1.00351, 0.95402, 1.00351, 0.95402,
          1.00351, 0.95402, 1.00351, 0.98448, 0.9973, 0.83089, 0.96777, 0.83089,
          0.93285, 0.9043, 0.93285, 0.9043, 0.93285, 0.9043, 1.31868, 0.96927,
          0.94729, 0.97454, 0.85498, 0.92916, 0.96924, 0.8761, 1, 1, 0.86091,
          1.16344, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839,
          1.04839, 1.04839, 1.04839, 0.81965, 0.81965, 0.94729, 0.78032,
          0.71022, 0.90883, 0.84171, 0.99877, 0.77596, 1.05734, 1.2, 0.94729,
          0.85944, 0.82791, 0.9607, 0.74817, 0.93285, 0.98039, 0.96924, 0.95782,
          0.89898, 0.98316, 0.98183, 1.03989, 0.78614, 0.96924, 0.97642,
          0.86237, 0.86075, 0.86091, 0.83089, 0.90082, 0.8858, 0.97296, 1.01284,
          0.95782, 0.83089, 1.0976, 1.04, 1.03342, 1.2, 1.0675, 1.0976, 0.98205,
          1.03809, 1.05097, 1.04, 0.95364, 1.03342, 1.05401, 1.2, 1.02148,
          1.0119, 1.04724, 1.0127, 1.02732, 0.96225, 0.8965, 0.97783, 0.93574,
          0.94818, 1.30679, 1.0675, 1.11826, 0.99821, 1.0557, 1.0326, 1.2,
          1.0675, 0.96225, 1.0675, 1.0326, 0.74817, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1.03754, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 0.87533, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.98705, 1, 1,
          1, 1, 1, 1, 0.98448, 0.9973, 0.98448, 0.9973, 0.98448, 0.9973,
          0.83089, 0.96777, 1, 1.20088, 0.89903, 1, 1, 0.75155, 0.94945,
          0.94945, 0.94945, 0.94945, 1.12317, 1.12317, 1.12317, 0.67603,
          0.67603, 1.15621, 0.73584, 1.21191, 1.22135, 1.06483, 0.94868,
          0.94868, 0.95996, 1.24633, 1, 1.07497, 0.87709, 0.96927, 1.01473,
          0.96927, 1, 1, 1, 0.77295, 1, 1, 1.09836, 1.09836, 1.09836, 1.01522,
          0.86321, 0.94434, 0.8649, 0.94434, 0.86182, 1, 1, 1.083, 1, 0.91578,
          0.86438, 1.17308, 1.18416, 1.14589, 0.69825, 0.97622, 1.96791,
          1.24822, 1.24822, 1.17308, 1.24822, 1.24822, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1.42603, 1, 0.99862, 0.99862, 1, 0.87025, 0.87025, 0.87025, 0.87025,
          1.17984, 1.42603, 1, 1.42603, 1.42603, 0.99862, 1, 1, 1, 1, 1, 1.2886,
          1.04315, 1.15296, 1.34163, 1, 1, 1, 1.10742, 1.10742, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        ];
        exports.SegoeuiItalicFactors = SegoeuiItalicFactors;
        const SegoeuiItalicMetrics = {
          lineHeight: 1.33008,
          lineGap: 0,
        };
        exports.SegoeuiItalicMetrics = SegoeuiItalicMetrics;
        const SegoeuiRegularFactors = [
          1.76738, 1, 1, 0.98594, 1.02285, 1.10454, 1.06234, 0.96927, 0.92037,
          1.19985, 1.2046, 0.90616, 0.90616, 1.07152, 1.1714, 0.78032, 1.20088,
          0.78032, 1.40246, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927,
          0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.78032, 0.78032, 1.1714,
          1.1714, 1.1714, 0.80597, 0.94084, 0.96706, 0.85944, 0.85734, 0.97093,
          0.75842, 0.79936, 0.88198, 0.9831, 0.95782, 0.71387, 0.86969, 0.84636,
          1.07796, 1.03584, 0.96924, 0.83968, 0.96924, 0.82826, 0.79649,
          0.85771, 0.95132, 0.93119, 0.98965, 0.88433, 0.8287, 0.93365, 1.08612,
          1.3638, 1.08612, 1.45786, 0.74627, 0.80499, 0.91484, 1.05707, 0.92383,
          1.05882, 0.9403, 1.12654, 1.05882, 1.01756, 1.09011, 1.09011, 0.99414,
          1.09011, 1.034, 1.01756, 1.05356, 1.05707, 1.05882, 1.04399, 0.84863,
          1.21968, 1.01756, 0.95801, 1.00068, 0.91797, 0.96777, 0.9043, 0.90351,
          0.92105, 0.90351, 1.1714, 0.85337, 0.96927, 0.96927, 0.99912, 0.96927,
          0.92105, 0.80597, 1.2434, 1.20808, 1.05937, 0.90957, 1.1714, 1.20808,
          0.75155, 0.94261, 1.24644, 1.09971, 1.09971, 0.84751, 1, 0.85273,
          0.78032, 0.61584, 1.05425, 1.17914, 0.90957, 1.08665, 1.11593,
          1.14169, 0.73381, 0.96706, 0.96706, 0.96706, 0.96706, 0.96706,
          0.96706, 0.86035, 0.85734, 0.75842, 0.75842, 0.75842, 0.75842,
          0.95782, 0.95782, 0.95782, 0.95782, 0.97093, 1.03584, 0.96924,
          0.96924, 0.96924, 0.96924, 0.96924, 1.1714, 0.96924, 0.95132, 0.95132,
          0.95132, 0.95132, 0.8287, 0.83968, 0.89049, 0.91484, 0.91484, 0.91484,
          0.91484, 0.91484, 0.91484, 0.93575, 0.92383, 0.9403, 0.9403, 0.9403,
          0.9403, 0.8717, 0.8717, 0.8717, 0.8717, 1.00527, 1.01756, 1.05356,
          1.05356, 1.05356, 1.05356, 1.05356, 1.24644, 0.95923, 1.01756,
          1.01756, 1.01756, 1.01756, 0.96777, 1.05707, 0.96777, 0.96706,
          0.91484, 0.96706, 0.91484, 0.96706, 0.91484, 0.85734, 0.92383,
          0.85734, 0.92383, 0.85734, 0.92383, 0.85734, 0.92383, 0.97093, 1.0969,
          0.97093, 1.05882, 0.75842, 0.9403, 0.75842, 0.9403, 0.75842, 0.9403,
          0.75842, 0.9403, 0.75842, 0.9403, 0.88198, 1.05882, 0.88198, 1.05882,
          0.88198, 1.05882, 1, 1, 0.9831, 1.01756, 0.9831, 1.01756, 0.95782,
          0.8717, 0.95782, 0.8717, 0.95782, 0.8717, 0.95782, 1.09011, 0.95782,
          0.8717, 0.84784, 1.11551, 0.71387, 1.09011, 1, 1, 0.99414, 0.84636,
          1.09011, 1, 1, 0.84636, 1.0536, 0.84636, 0.94298, 0.84636, 1.23297,
          1.03584, 1.01756, 1, 1, 1.03584, 1.01756, 1.00323, 1.03444, 1.01756,
          0.96924, 1.05356, 0.96924, 1.05356, 0.96924, 1.05356, 0.93066,
          0.98293, 0.82826, 1.04399, 1, 1, 0.82826, 1.04399, 0.79649, 0.84863,
          0.79649, 0.84863, 0.79649, 0.84863, 0.79649, 0.84863, 1, 1, 0.85771,
          1.17318, 0.85771, 1.21968, 0.95132, 1.01756, 0.95132, 1.01756,
          0.95132, 1.01756, 0.95132, 1.01756, 0.95132, 1.01756, 0.95132,
          1.01756, 0.98965, 1.00068, 0.8287, 0.96777, 0.8287, 0.93365, 0.9043,
          0.93365, 0.9043, 0.93365, 0.9043, 1.08571, 0.96927, 0.96706, 0.91484,
          0.86035, 0.93575, 0.96924, 0.95923, 1, 1, 0.85771, 1.21968, 1.11437,
          1.11437, 0.93109, 0.91202, 0.60411, 0.84164, 0.55572, 1.01173,
          0.97361, 0.81818, 0.81818, 0.96635, 0.78032, 0.72727, 0.92366,
          0.98601, 1.03405, 0.77968, 1.09799, 1.2, 0.96706, 0.85944, 0.85638,
          0.96491, 0.75842, 0.93365, 0.9831, 0.96924, 0.95782, 0.86969, 0.94152,
          1.07796, 1.03584, 0.78437, 0.96924, 0.98715, 0.83968, 0.83491,
          0.85771, 0.8287, 0.94492, 0.88433, 0.9287, 1.0098, 0.95782, 0.8287,
          1.0625, 0.98248, 1.03424, 1.2, 1.01071, 1.0625, 0.95246, 1.03809,
          1.04912, 0.98248, 1.00221, 1.03424, 1.05443, 1.2, 1.04785, 0.99609,
          1.00169, 1.05176, 0.99346, 1.05356, 0.9087, 1.03004, 0.95542, 0.93117,
          1.23362, 1.01071, 1.07831, 1.02512, 1.05205, 1.03502, 1.2, 1.01071,
          1.05356, 1.01071, 1.03502, 0.75842, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1.03719, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 0.9403, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.04021, 1, 1, 1, 1, 1,
          1, 0.98965, 1.00068, 0.98965, 1.00068, 0.98965, 1.00068, 0.8287,
          0.96777, 1, 1.20088, 0.89903, 1, 1, 0.75155, 1.03077, 1.03077,
          1.03077, 1.03077, 1.13196, 1.13196, 1.13196, 0.67428, 0.67428,
          1.16039, 0.73291, 1.20996, 1.22135, 1.06483, 0.94868, 0.94868,
          0.95996, 1.24633, 1, 1.07497, 0.87796, 0.96927, 1.01518, 0.96927, 1,
          1, 1, 0.77295, 1, 1, 1.10539, 1.10539, 1.11358, 1.06967, 0.86279,
          0.94434, 0.86279, 0.94434, 0.86182, 1, 1, 1.083, 1, 0.91578, 0.86507,
          1.1714, 1.18416, 1.14589, 0.69825, 0.97622, 1.9697, 1.24822, 1.24822,
          1.17238, 1.24822, 1.24822, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.42603, 1, 0.99862,
          0.99862, 1, 0.87025, 0.87025, 0.87025, 0.87025, 1.18083, 1.42603, 1,
          1.42603, 1.42603, 0.99862, 1, 1, 1, 1, 1, 1.2886, 1.04315, 1.15296,
          1.34163, 1, 1, 1, 1.10938, 1.10938, 1, 1, 1, 1.05425, 1.09971,
          1.09971, 1.09971, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        ];
        exports.SegoeuiRegularFactors = SegoeuiRegularFactors;
        const SegoeuiRegularMetrics = {
          lineHeight: 1.33008,
          lineGap: 0,
        };
        exports.SegoeuiRegularMetrics = SegoeuiRegularMetrics;

        /***/
      },
      /* 57 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.PostScriptEvaluator =
          exports.PostScriptCompiler =
          exports.PDFFunctionFactory =
            void 0;
        exports.isPDFFunction = isPDFFunction;
        var _primitives = __w_pdfjs_require__(4);
        var _util = __w_pdfjs_require__(2);
        var _ps_parser = __w_pdfjs_require__(58);
        var _base_stream = __w_pdfjs_require__(5);
        var _image_utils = __w_pdfjs_require__(59);
        class PDFFunctionFactory {
          constructor({ xref, isEvalSupported = true }) {
            this.xref = xref;
            this.isEvalSupported = isEvalSupported !== false;
          }
          create(fn) {
            const cachedFunction = this.getCached(fn);
            if (cachedFunction) {
              return cachedFunction;
            }
            const parsedFunction = PDFFunction.parse({
              xref: this.xref,
              isEvalSupported: this.isEvalSupported,
              fn: fn instanceof _primitives.Ref ? this.xref.fetch(fn) : fn,
            });
            this._cache(fn, parsedFunction);
            return parsedFunction;
          }
          createFromArray(fnObj) {
            const cachedFunction = this.getCached(fnObj);
            if (cachedFunction) {
              return cachedFunction;
            }
            const parsedFunction = PDFFunction.parseArray({
              xref: this.xref,
              isEvalSupported: this.isEvalSupported,
              fnObj:
                fnObj instanceof _primitives.Ref
                  ? this.xref.fetch(fnObj)
                  : fnObj,
            });
            this._cache(fnObj, parsedFunction);
            return parsedFunction;
          }
          getCached(cacheKey) {
            let fnRef;
            if (cacheKey instanceof _primitives.Ref) {
              fnRef = cacheKey;
            } else if (cacheKey instanceof _primitives.Dict) {
              fnRef = cacheKey.objId;
            } else if (cacheKey instanceof _base_stream.BaseStream) {
              fnRef = cacheKey.dict?.objId;
            }
            if (fnRef) {
              const localFunction = this._localFunctionCache.getByRef(fnRef);
              if (localFunction) {
                return localFunction;
              }
            }
            return null;
          }
          _cache(cacheKey, parsedFunction) {
            if (!parsedFunction) {
              throw new Error(
                'PDFFunctionFactory._cache - expected "parsedFunction" argument.'
              );
            }
            let fnRef;
            if (cacheKey instanceof _primitives.Ref) {
              fnRef = cacheKey;
            } else if (cacheKey instanceof _primitives.Dict) {
              fnRef = cacheKey.objId;
            } else if (cacheKey instanceof _base_stream.BaseStream) {
              fnRef = cacheKey.dict?.objId;
            }
            if (fnRef) {
              this._localFunctionCache.set(null, fnRef, parsedFunction);
            }
          }
          get _localFunctionCache() {
            return (0, _util.shadow)(
              this,
              "_localFunctionCache",
              new _image_utils.LocalFunctionCache()
            );
          }
        }
        exports.PDFFunctionFactory = PDFFunctionFactory;
        function toNumberArray(arr) {
          if (!Array.isArray(arr)) {
            return null;
          }
          const length = arr.length;
          for (let i = 0; i < length; i++) {
            if (typeof arr[i] !== "number") {
              const result = new Array(length);
              for (let j = 0; j < length; j++) {
                result[j] = +arr[j];
              }
              return result;
            }
          }
          return arr;
        }
        class PDFFunction {
          static getSampleArray(size, outputSize, bps, stream) {
            let i, ii;
            let length = 1;
            for (i = 0, ii = size.length; i < ii; i++) {
              length *= size[i];
            }
            length *= outputSize;
            const array = new Array(length);
            let codeSize = 0;
            let codeBuf = 0;
            const sampleMul = 1.0 / (2.0 ** bps - 1);
            const strBytes = stream.getBytes((length * bps + 7) / 8);
            let strIdx = 0;
            for (i = 0; i < length; i++) {
              while (codeSize < bps) {
                codeBuf <<= 8;
                codeBuf |= strBytes[strIdx++];
                codeSize += 8;
              }
              codeSize -= bps;
              array[i] = (codeBuf >> codeSize) * sampleMul;
              codeBuf &= (1 << codeSize) - 1;
            }
            return array;
          }
          static parse({ xref, isEvalSupported, fn }) {
            const dict = fn.dict || fn;
            const typeNum = dict.get("FunctionType");
            switch (typeNum) {
              case 0:
                return this.constructSampled({
                  xref,
                  isEvalSupported,
                  fn,
                  dict,
                });
              case 1:
                break;
              case 2:
                return this.constructInterpolated({
                  xref,
                  isEvalSupported,
                  dict,
                });
              case 3:
                return this.constructStiched({
                  xref,
                  isEvalSupported,
                  dict,
                });
              case 4:
                return this.constructPostScript({
                  xref,
                  isEvalSupported,
                  fn,
                  dict,
                });
            }
            throw new _util.FormatError("Unknown type of function");
          }
          static parseArray({ xref, isEvalSupported, fnObj }) {
            if (!Array.isArray(fnObj)) {
              return this.parse({
                xref,
                isEvalSupported,
                fn: fnObj,
              });
            }
            const fnArray = [];
            for (const fn of fnObj) {
              fnArray.push(
                this.parse({
                  xref,
                  isEvalSupported,
                  fn: xref.fetchIfRef(fn),
                })
              );
            }
            return function (src, srcOffset, dest, destOffset) {
              for (let i = 0, ii = fnArray.length; i < ii; i++) {
                fnArray[i](src, srcOffset, dest, destOffset + i);
              }
            };
          }
          static constructSampled({ xref, isEvalSupported, fn, dict }) {
            function toMultiArray(arr) {
              const inputLength = arr.length;
              const out = [];
              let index = 0;
              for (let i = 0; i < inputLength; i += 2) {
                out[index++] = [arr[i], arr[i + 1]];
              }
              return out;
            }
            function interpolate(x, xmin, xmax, ymin, ymax) {
              return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));
            }
            let domain = toNumberArray(dict.getArray("Domain"));
            let range = toNumberArray(dict.getArray("Range"));
            if (!domain || !range) {
              throw new _util.FormatError("No domain or range");
            }
            const inputSize = domain.length / 2;
            const outputSize = range.length / 2;
            domain = toMultiArray(domain);
            range = toMultiArray(range);
            const size = toNumberArray(dict.getArray("Size"));
            const bps = dict.get("BitsPerSample");
            const order = dict.get("Order") || 1;
            if (order !== 1) {
              (0, _util.info)(
                "No support for cubic spline interpolation: " + order
              );
            }
            let encode = toNumberArray(dict.getArray("Encode"));
            if (!encode) {
              encode = [];
              for (let i = 0; i < inputSize; ++i) {
                encode.push([0, size[i] - 1]);
              }
            } else {
              encode = toMultiArray(encode);
            }
            let decode = toNumberArray(dict.getArray("Decode"));
            decode = !decode ? range : toMultiArray(decode);
            const samples = this.getSampleArray(size, outputSize, bps, fn);
            return function constructSampledFn(
              src,
              srcOffset,
              dest,
              destOffset
            ) {
              const cubeVertices = 1 << inputSize;
              const cubeN = new Float64Array(cubeVertices);
              const cubeVertex = new Uint32Array(cubeVertices);
              let i, j;
              for (j = 0; j < cubeVertices; j++) {
                cubeN[j] = 1;
              }
              let k = outputSize,
                pos = 1;
              for (i = 0; i < inputSize; ++i) {
                const domain_2i = domain[i][0];
                const domain_2i_1 = domain[i][1];
                const xi = Math.min(
                  Math.max(src[srcOffset + i], domain_2i),
                  domain_2i_1
                );
                let e = interpolate(
                  xi,
                  domain_2i,
                  domain_2i_1,
                  encode[i][0],
                  encode[i][1]
                );
                const size_i = size[i];
                e = Math.min(Math.max(e, 0), size_i - 1);
                const e0 = e < size_i - 1 ? Math.floor(e) : e - 1;
                const n0 = e0 + 1 - e;
                const n1 = e - e0;
                const offset0 = e0 * k;
                const offset1 = offset0 + k;
                for (j = 0; j < cubeVertices; j++) {
                  if (j & pos) {
                    cubeN[j] *= n1;
                    cubeVertex[j] += offset1;
                  } else {
                    cubeN[j] *= n0;
                    cubeVertex[j] += offset0;
                  }
                }
                k *= size_i;
                pos <<= 1;
              }
              for (j = 0; j < outputSize; ++j) {
                let rj = 0;
                for (i = 0; i < cubeVertices; i++) {
                  rj += samples[cubeVertex[i] + j] * cubeN[i];
                }
                rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);
                dest[destOffset + j] = Math.min(
                  Math.max(rj, range[j][0]),
                  range[j][1]
                );
              }
            };
          }
          static constructInterpolated({ xref, isEvalSupported, dict }) {
            const c0 = toNumberArray(dict.getArray("C0")) || [0];
            const c1 = toNumberArray(dict.getArray("C1")) || [1];
            const n = dict.get("N");
            const diff = [];
            for (let i = 0, ii = c0.length; i < ii; ++i) {
              diff.push(c1[i] - c0[i]);
            }
            const length = diff.length;
            return function constructInterpolatedFn(
              src,
              srcOffset,
              dest,
              destOffset
            ) {
              const x = n === 1 ? src[srcOffset] : src[srcOffset] ** n;
              for (let j = 0; j < length; ++j) {
                dest[destOffset + j] = c0[j] + x * diff[j];
              }
            };
          }
          static constructStiched({ xref, isEvalSupported, dict }) {
            const domain = toNumberArray(dict.getArray("Domain"));
            if (!domain) {
              throw new _util.FormatError("No domain");
            }
            const inputSize = domain.length / 2;
            if (inputSize !== 1) {
              throw new _util.FormatError("Bad domain for stiched function");
            }
            const fns = [];
            for (const fn of dict.get("Functions")) {
              fns.push(
                this.parse({
                  xref,
                  isEvalSupported,
                  fn: xref.fetchIfRef(fn),
                })
              );
            }
            const bounds = toNumberArray(dict.getArray("Bounds"));
            const encode = toNumberArray(dict.getArray("Encode"));
            const tmpBuf = new Float32Array(1);
            return function constructStichedFn(
              src,
              srcOffset,
              dest,
              destOffset
            ) {
              const clip = function constructStichedFromIRClip(v, min, max) {
                if (v > max) {
                  v = max;
                } else if (v < min) {
                  v = min;
                }
                return v;
              };
              const v = clip(src[srcOffset], domain[0], domain[1]);
              const length = bounds.length;
              let i;
              for (i = 0; i < length; ++i) {
                if (v < bounds[i]) {
                  break;
                }
              }
              let dmin = domain[0];
              if (i > 0) {
                dmin = bounds[i - 1];
              }
              let dmax = domain[1];
              if (i < bounds.length) {
                dmax = bounds[i];
              }
              const rmin = encode[2 * i];
              const rmax = encode[2 * i + 1];
              tmpBuf[0] =
                dmin === dmax
                  ? rmin
                  : rmin + ((v - dmin) * (rmax - rmin)) / (dmax - dmin);
              fns[i](tmpBuf, 0, dest, destOffset);
            };
          }
          static constructPostScript({ xref, isEvalSupported, fn, dict }) {
            const domain = toNumberArray(dict.getArray("Domain"));
            const range = toNumberArray(dict.getArray("Range"));
            if (!domain) {
              throw new _util.FormatError("No domain.");
            }
            if (!range) {
              throw new _util.FormatError("No range.");
            }
            const lexer = new _ps_parser.PostScriptLexer(fn);
            const parser = new _ps_parser.PostScriptParser(lexer);
            const code = parser.parse();
            if (isEvalSupported && _util.FeatureTest.isEvalSupported) {
              const compiled = new PostScriptCompiler().compile(
                code,
                domain,
                range
              );
              if (compiled) {
                return new Function(
                  "src",
                  "srcOffset",
                  "dest",
                  "destOffset",
                  compiled
                );
              }
            }
            (0, _util.info)("Unable to compile PS function");
            const numOutputs = range.length >> 1;
            const numInputs = domain.length >> 1;
            const evaluator = new PostScriptEvaluator(code);
            const cache = Object.create(null);
            const MAX_CACHE_SIZE = 2048 * 4;
            let cache_available = MAX_CACHE_SIZE;
            const tmpBuf = new Float32Array(numInputs);
            return function constructPostScriptFn(
              src,
              srcOffset,
              dest,
              destOffset
            ) {
              let i, value;
              let key = "";
              const input = tmpBuf;
              for (i = 0; i < numInputs; i++) {
                value = src[srcOffset + i];
                input[i] = value;
                key += value + "_";
              }
              const cachedValue = cache[key];
              if (cachedValue !== undefined) {
                dest.set(cachedValue, destOffset);
                return;
              }
              const output = new Float32Array(numOutputs);
              const stack = evaluator.execute(input);
              const stackIndex = stack.length - numOutputs;
              for (i = 0; i < numOutputs; i++) {
                value = stack[stackIndex + i];
                let bound = range[i * 2];
                if (value < bound) {
                  value = bound;
                } else {
                  bound = range[i * 2 + 1];
                  if (value > bound) {
                    value = bound;
                  }
                }
                output[i] = value;
              }
              if (cache_available > 0) {
                cache_available--;
                cache[key] = output;
              }
              dest.set(output, destOffset);
            };
          }
        }
        function isPDFFunction(v) {
          let fnDict;
          if (v instanceof _primitives.Dict) {
            fnDict = v;
          } else if (v instanceof _base_stream.BaseStream) {
            fnDict = v.dict;
          } else {
            return false;
          }
          return fnDict.has("FunctionType");
        }
        class PostScriptStack {
          static MAX_STACK_SIZE = 100;
          constructor(initialStack) {
            this.stack = initialStack ? Array.from(initialStack) : [];
          }
          push(value) {
            if (this.stack.length >= PostScriptStack.MAX_STACK_SIZE) {
              throw new Error("PostScript function stack overflow.");
            }
            this.stack.push(value);
          }
          pop() {
            if (this.stack.length <= 0) {
              throw new Error("PostScript function stack underflow.");
            }
            return this.stack.pop();
          }
          copy(n) {
            if (this.stack.length + n >= PostScriptStack.MAX_STACK_SIZE) {
              throw new Error("PostScript function stack overflow.");
            }
            const stack = this.stack;
            for (let i = stack.length - n, j = n - 1; j >= 0; j--, i++) {
              stack.push(stack[i]);
            }
          }
          index(n) {
            this.push(this.stack[this.stack.length - n - 1]);
          }
          roll(n, p) {
            const stack = this.stack;
            const l = stack.length - n;
            const r = stack.length - 1;
            const c = l + (p - Math.floor(p / n) * n);
            for (let i = l, j = r; i < j; i++, j--) {
              const t = stack[i];
              stack[i] = stack[j];
              stack[j] = t;
            }
            for (let i = l, j = c - 1; i < j; i++, j--) {
              const t = stack[i];
              stack[i] = stack[j];
              stack[j] = t;
            }
            for (let i = c, j = r; i < j; i++, j--) {
              const t = stack[i];
              stack[i] = stack[j];
              stack[j] = t;
            }
          }
        }
        class PostScriptEvaluator {
          constructor(operators) {
            this.operators = operators;
          }
          execute(initialStack) {
            const stack = new PostScriptStack(initialStack);
            let counter = 0;
            const operators = this.operators;
            const length = operators.length;
            let operator, a, b;
            while (counter < length) {
              operator = operators[counter++];
              if (typeof operator === "number") {
                stack.push(operator);
                continue;
              }
              switch (operator) {
                case "jz":
                  b = stack.pop();
                  a = stack.pop();
                  if (!a) {
                    counter = b;
                  }
                  break;
                case "j":
                  a = stack.pop();
                  counter = a;
                  break;
                case "abs":
                  a = stack.pop();
                  stack.push(Math.abs(a));
                  break;
                case "add":
                  b = stack.pop();
                  a = stack.pop();
                  stack.push(a + b);
                  break;
                case "and":
                  b = stack.pop();
                  a = stack.pop();
                  if (typeof a === "boolean" && typeof b === "boolean") {
                    stack.push(a && b);
                  } else {
                    stack.push(a & b);
                  }
                  break;
                case "atan":
                  b = stack.pop();
                  a = stack.pop();
                  a = (Math.atan2(a, b) / Math.PI) * 180;
                  if (a < 0) {
                    a += 360;
                  }
                  stack.push(a);
                  break;
                case "bitshift":
                  b = stack.pop();
                  a = stack.pop();
                  if (a > 0) {
                    stack.push(a << b);
                  } else {
                    stack.push(a >> b);
                  }
                  break;
                case "ceiling":
                  a = stack.pop();
                  stack.push(Math.ceil(a));
                  break;
                case "copy":
                  a = stack.pop();
                  stack.copy(a);
                  break;
                case "cos":
                  a = stack.pop();
                  stack.push(Math.cos(((a % 360) / 180) * Math.PI));
                  break;
                case "cvi":
                  a = stack.pop() | 0;
                  stack.push(a);
                  break;
                case "cvr":
                  break;
                case "div":
                  b = stack.pop();
                  a = stack.pop();
                  stack.push(a / b);
                  break;
                case "dup":
                  stack.copy(1);
                  break;
                case "eq":
                  b = stack.pop();
                  a = stack.pop();
                  stack.push(a === b);
                  break;
                case "exch":
                  stack.roll(2, 1);
                  break;
                case "exp":
                  b = stack.pop();
                  a = stack.pop();
                  stack.push(a ** b);
                  break;
                case "false":
                  stack.push(false);
                  break;
                case "floor":
                  a = stack.pop();
                  stack.push(Math.floor(a));
                  break;
                case "ge":
                  b = stack.pop();
                  a = stack.pop();
                  stack.push(a >= b);
                  break;
                case "gt":
                  b = stack.pop();
                  a = stack.pop();
                  stack.push(a > b);
                  break;
                case "idiv":
                  b = stack.pop();
                  a = stack.pop();
                  stack.push((a / b) | 0);
                  break;
                case "index":
                  a = stack.pop();
                  stack.index(a);
                  break;
                case "le":
                  b = stack.pop();
                  a = stack.pop();
                  stack.push(a <= b);
                  break;
                case "ln":
                  a = stack.pop();
                  stack.push(Math.log(a));
                  break;
                case "log":
                  a = stack.pop();
                  stack.push(Math.log10(a));
                  break;
                case "lt":
                  b = stack.pop();
                  a = stack.pop();
                  stack.push(a < b);
                  break;
                case "mod":
                  b = stack.pop();
                  a = stack.pop();
                  stack.push(a % b);
                  break;
                case "mul":
                  b = stack.pop();
                  a = stack.pop();
                  stack.push(a * b);
                  break;
                case "ne":
                  b = stack.pop();
                  a = stack.pop();
                  stack.push(a !== b);
                  break;
                case "neg":
                  a = stack.pop();
                  stack.push(-a);
                  break;
                case "not":
                  a = stack.pop();
                  if (typeof a === "boolean") {
                    stack.push(!a);
                  } else {
                    stack.push(~a);
                  }
                  break;
                case "or":
                  b = stack.pop();
                  a = stack.pop();
                  if (typeof a === "boolean" && typeof b === "boolean") {
                    stack.push(a || b);
                  } else {
                    stack.push(a | b);
                  }
                  break;
                case "pop":
                  stack.pop();
                  break;
                case "roll":
                  b = stack.pop();
                  a = stack.pop();
                  stack.roll(a, b);
                  break;
                case "round":
                  a = stack.pop();
                  stack.push(Math.round(a));
                  break;
                case "sin":
                  a = stack.pop();
                  stack.push(Math.sin(((a % 360) / 180) * Math.PI));
                  break;
                case "sqrt":
                  a = stack.pop();
                  stack.push(Math.sqrt(a));
                  break;
                case "sub":
                  b = stack.pop();
                  a = stack.pop();
                  stack.push(a - b);
                  break;
                case "true":
                  stack.push(true);
                  break;
                case "truncate":
                  a = stack.pop();
                  a = a < 0 ? Math.ceil(a) : Math.floor(a);
                  stack.push(a);
                  break;
                case "xor":
                  b = stack.pop();
                  a = stack.pop();
                  if (typeof a === "boolean" && typeof b === "boolean") {
                    stack.push(a !== b);
                  } else {
                    stack.push(a ^ b);
                  }
                  break;
                default:
                  throw new _util.FormatError(`Unknown operator ${operator}`);
              }
            }
            return stack.stack;
          }
        }
        exports.PostScriptEvaluator = PostScriptEvaluator;
        class AstNode {
          constructor(type) {
            this.type = type;
          }
          visit(visitor) {
            (0, _util.unreachable)("abstract method");
          }
        }
        class AstArgument extends AstNode {
          constructor(index, min, max) {
            super("args");
            this.index = index;
            this.min = min;
            this.max = max;
          }
          visit(visitor) {
            visitor.visitArgument(this);
          }
        }
        class AstLiteral extends AstNode {
          constructor(number) {
            super("literal");
            this.number = number;
            this.min = number;
            this.max = number;
          }
          visit(visitor) {
            visitor.visitLiteral(this);
          }
        }
        class AstBinaryOperation extends AstNode {
          constructor(op, arg1, arg2, min, max) {
            super("binary");
            this.op = op;
            this.arg1 = arg1;
            this.arg2 = arg2;
            this.min = min;
            this.max = max;
          }
          visit(visitor) {
            visitor.visitBinaryOperation(this);
          }
        }
        class AstMin extends AstNode {
          constructor(arg, max) {
            super("max");
            this.arg = arg;
            this.min = arg.min;
            this.max = max;
          }
          visit(visitor) {
            visitor.visitMin(this);
          }
        }
        class AstVariable extends AstNode {
          constructor(index, min, max) {
            super("var");
            this.index = index;
            this.min = min;
            this.max = max;
          }
          visit(visitor) {
            visitor.visitVariable(this);
          }
        }
        class AstVariableDefinition extends AstNode {
          constructor(variable, arg) {
            super("definition");
            this.variable = variable;
            this.arg = arg;
          }
          visit(visitor) {
            visitor.visitVariableDefinition(this);
          }
        }
        class ExpressionBuilderVisitor {
          constructor() {
            this.parts = [];
          }
          visitArgument(arg) {
            this.parts.push(
              "Math.max(",
              arg.min,
              ", Math.min(",
              arg.max,
              ", src[srcOffset + ",
              arg.index,
              "]))"
            );
          }
          visitVariable(variable) {
            this.parts.push("v", variable.index);
          }
          visitLiteral(literal) {
            this.parts.push(literal.number);
          }
          visitBinaryOperation(operation) {
            this.parts.push("(");
            operation.arg1.visit(this);
            this.parts.push(" ", operation.op, " ");
            operation.arg2.visit(this);
            this.parts.push(")");
          }
          visitVariableDefinition(definition) {
            this.parts.push("var ");
            definition.variable.visit(this);
            this.parts.push(" = ");
            definition.arg.visit(this);
            this.parts.push(";");
          }
          visitMin(max) {
            this.parts.push("Math.min(");
            max.arg.visit(this);
            this.parts.push(", ", max.max, ")");
          }
          toString() {
            return this.parts.join("");
          }
        }
        function buildAddOperation(num1, num2) {
          if (num2.type === "literal" && num2.number === 0) {
            return num1;
          }
          if (num1.type === "literal" && num1.number === 0) {
            return num2;
          }
          if (num2.type === "literal" && num1.type === "literal") {
            return new AstLiteral(num1.number + num2.number);
          }
          return new AstBinaryOperation(
            "+",
            num1,
            num2,
            num1.min + num2.min,
            num1.max + num2.max
          );
        }
        function buildMulOperation(num1, num2) {
          if (num2.type === "literal") {
            if (num2.number === 0) {
              return new AstLiteral(0);
            } else if (num2.number === 1) {
              return num1;
            } else if (num1.type === "literal") {
              return new AstLiteral(num1.number * num2.number);
            }
          }
          if (num1.type === "literal") {
            if (num1.number === 0) {
              return new AstLiteral(0);
            } else if (num1.number === 1) {
              return num2;
            }
          }
          const min = Math.min(
            num1.min * num2.min,
            num1.min * num2.max,
            num1.max * num2.min,
            num1.max * num2.max
          );
          const max = Math.max(
            num1.min * num2.min,
            num1.min * num2.max,
            num1.max * num2.min,
            num1.max * num2.max
          );
          return new AstBinaryOperation("*", num1, num2, min, max);
        }
        function buildSubOperation(num1, num2) {
          if (num2.type === "literal") {
            if (num2.number === 0) {
              return num1;
            } else if (num1.type === "literal") {
              return new AstLiteral(num1.number - num2.number);
            }
          }
          if (
            num2.type === "binary" &&
            num2.op === "-" &&
            num1.type === "literal" &&
            num1.number === 1 &&
            num2.arg1.type === "literal" &&
            num2.arg1.number === 1
          ) {
            return num2.arg2;
          }
          return new AstBinaryOperation(
            "-",
            num1,
            num2,
            num1.min - num2.max,
            num1.max - num2.min
          );
        }
        function buildMinOperation(num1, max) {
          if (num1.min >= max) {
            return new AstLiteral(max);
          } else if (num1.max <= max) {
            return num1;
          }
          return new AstMin(num1, max);
        }
        class PostScriptCompiler {
          compile(code, domain, range) {
            const stack = [];
            const instructions = [];
            const inputSize = domain.length >> 1,
              outputSize = range.length >> 1;
            let lastRegister = 0;
            let n, j;
            let num1, num2, ast1, ast2, tmpVar, item;
            for (let i = 0; i < inputSize; i++) {
              stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));
            }
            for (let i = 0, ii = code.length; i < ii; i++) {
              item = code[i];
              if (typeof item === "number") {
                stack.push(new AstLiteral(item));
                continue;
              }
              switch (item) {
                case "add":
                  if (stack.length < 2) {
                    return null;
                  }
                  num2 = stack.pop();
                  num1 = stack.pop();
                  stack.push(buildAddOperation(num1, num2));
                  break;
                case "cvr":
                  if (stack.length < 1) {
                    return null;
                  }
                  break;
                case "mul":
                  if (stack.length < 2) {
                    return null;
                  }
                  num2 = stack.pop();
                  num1 = stack.pop();
                  stack.push(buildMulOperation(num1, num2));
                  break;
                case "sub":
                  if (stack.length < 2) {
                    return null;
                  }
                  num2 = stack.pop();
                  num1 = stack.pop();
                  stack.push(buildSubOperation(num1, num2));
                  break;
                case "exch":
                  if (stack.length < 2) {
                    return null;
                  }
                  ast1 = stack.pop();
                  ast2 = stack.pop();
                  stack.push(ast1, ast2);
                  break;
                case "pop":
                  if (stack.length < 1) {
                    return null;
                  }
                  stack.pop();
                  break;
                case "index":
                  if (stack.length < 1) {
                    return null;
                  }
                  num1 = stack.pop();
                  if (num1.type !== "literal") {
                    return null;
                  }
                  n = num1.number;
                  if (n < 0 || !Number.isInteger(n) || stack.length < n) {
                    return null;
                  }
                  ast1 = stack[stack.length - n - 1];
                  if (ast1.type === "literal" || ast1.type === "var") {
                    stack.push(ast1);
                    break;
                  }
                  tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);
                  stack[stack.length - n - 1] = tmpVar;
                  stack.push(tmpVar);
                  instructions.push(new AstVariableDefinition(tmpVar, ast1));
                  break;
                case "dup":
                  if (stack.length < 1) {
                    return null;
                  }
                  if (
                    typeof code[i + 1] === "number" &&
                    code[i + 2] === "gt" &&
                    code[i + 3] === i + 7 &&
                    code[i + 4] === "jz" &&
                    code[i + 5] === "pop" &&
                    code[i + 6] === code[i + 1]
                  ) {
                    num1 = stack.pop();
                    stack.push(buildMinOperation(num1, code[i + 1]));
                    i += 6;
                    break;
                  }
                  ast1 = stack.at(-1);
                  if (ast1.type === "literal" || ast1.type === "var") {
                    stack.push(ast1);
                    break;
                  }
                  tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);
                  stack[stack.length - 1] = tmpVar;
                  stack.push(tmpVar);
                  instructions.push(new AstVariableDefinition(tmpVar, ast1));
                  break;
                case "roll":
                  if (stack.length < 2) {
                    return null;
                  }
                  num2 = stack.pop();
                  num1 = stack.pop();
                  if (num2.type !== "literal" || num1.type !== "literal") {
                    return null;
                  }
                  j = num2.number;
                  n = num1.number;
                  if (
                    n <= 0 ||
                    !Number.isInteger(n) ||
                    !Number.isInteger(j) ||
                    stack.length < n
                  ) {
                    return null;
                  }
                  j = ((j % n) + n) % n;
                  if (j === 0) {
                    break;
                  }
                  stack.push(...stack.splice(stack.length - n, n - j));
                  break;
                default:
                  return null;
              }
            }
            if (stack.length !== outputSize) {
              return null;
            }
            const result = [];
            for (const instruction of instructions) {
              const statementBuilder = new ExpressionBuilderVisitor();
              instruction.visit(statementBuilder);
              result.push(statementBuilder.toString());
            }
            for (let i = 0, ii = stack.length; i < ii; i++) {
              const expr = stack[i],
                statementBuilder = new ExpressionBuilderVisitor();
              expr.visit(statementBuilder);
              const min = range[i * 2],
                max = range[i * 2 + 1];
              const out = [statementBuilder.toString()];
              if (min > expr.min) {
                out.unshift("Math.max(", min, ", ");
                out.push(")");
              }
              if (max < expr.max) {
                out.unshift("Math.min(", max, ", ");
                out.push(")");
              }
              out.unshift("dest[destOffset + ", i, "] = ");
              out.push(";");
              result.push(out.join(""));
            }
            return result.join("\n");
          }
        }
        exports.PostScriptCompiler = PostScriptCompiler;

        /***/
      },
      /* 58 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.PostScriptParser = exports.PostScriptLexer = void 0;
        var _util = __w_pdfjs_require__(2);
        var _primitives = __w_pdfjs_require__(4);
        var _core_utils = __w_pdfjs_require__(3);
        class PostScriptParser {
          constructor(lexer) {
            this.lexer = lexer;
            this.operators = [];
            this.token = null;
            this.prev = null;
          }
          nextToken() {
            this.prev = this.token;
            this.token = this.lexer.getToken();
          }
          accept(type) {
            if (this.token.type === type) {
              this.nextToken();
              return true;
            }
            return false;
          }
          expect(type) {
            if (this.accept(type)) {
              return true;
            }
            throw new _util.FormatError(
              `Unexpected symbol: found ${this.token.type} expected ${type}.`
            );
          }
          parse() {
            this.nextToken();
            this.expect(PostScriptTokenTypes.LBRACE);
            this.parseBlock();
            this.expect(PostScriptTokenTypes.RBRACE);
            return this.operators;
          }
          parseBlock() {
            while (true) {
              if (this.accept(PostScriptTokenTypes.NUMBER)) {
                this.operators.push(this.prev.value);
              } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {
                this.operators.push(this.prev.value);
              } else if (this.accept(PostScriptTokenTypes.LBRACE)) {
                this.parseCondition();
              } else {
                return;
              }
            }
          }
          parseCondition() {
            const conditionLocation = this.operators.length;
            this.operators.push(null, null);
            this.parseBlock();
            this.expect(PostScriptTokenTypes.RBRACE);
            if (this.accept(PostScriptTokenTypes.IF)) {
              this.operators[conditionLocation] = this.operators.length;
              this.operators[conditionLocation + 1] = "jz";
            } else if (this.accept(PostScriptTokenTypes.LBRACE)) {
              const jumpLocation = this.operators.length;
              this.operators.push(null, null);
              const endOfTrue = this.operators.length;
              this.parseBlock();
              this.expect(PostScriptTokenTypes.RBRACE);
              this.expect(PostScriptTokenTypes.IFELSE);
              this.operators[jumpLocation] = this.operators.length;
              this.operators[jumpLocation + 1] = "j";
              this.operators[conditionLocation] = endOfTrue;
              this.operators[conditionLocation + 1] = "jz";
            } else {
              throw new _util.FormatError(
                "PS Function: error parsing conditional."
              );
            }
          }
        }
        exports.PostScriptParser = PostScriptParser;
        const PostScriptTokenTypes = {
          LBRACE: 0,
          RBRACE: 1,
          NUMBER: 2,
          OPERATOR: 3,
          IF: 4,
          IFELSE: 5,
        };
        class PostScriptToken {
          static get opCache() {
            return (0, _util.shadow)(this, "opCache", Object.create(null));
          }
          constructor(type, value) {
            this.type = type;
            this.value = value;
          }
          static getOperator(op) {
            return (PostScriptToken.opCache[op] ||= new PostScriptToken(
              PostScriptTokenTypes.OPERATOR,
              op
            ));
          }
          static get LBRACE() {
            return (0, _util.shadow)(
              this,
              "LBRACE",
              new PostScriptToken(PostScriptTokenTypes.LBRACE, "{")
            );
          }
          static get RBRACE() {
            return (0, _util.shadow)(
              this,
              "RBRACE",
              new PostScriptToken(PostScriptTokenTypes.RBRACE, "}")
            );
          }
          static get IF() {
            return (0, _util.shadow)(
              this,
              "IF",
              new PostScriptToken(PostScriptTokenTypes.IF, "IF")
            );
          }
          static get IFELSE() {
            return (0, _util.shadow)(
              this,
              "IFELSE",
              new PostScriptToken(PostScriptTokenTypes.IFELSE, "IFELSE")
            );
          }
        }
        class PostScriptLexer {
          constructor(stream) {
            this.stream = stream;
            this.nextChar();
            this.strBuf = [];
          }
          nextChar() {
            return (this.currentChar = this.stream.getByte());
          }
          getToken() {
            let comment = false;
            let ch = this.currentChar;
            while (true) {
              if (ch < 0) {
                return _primitives.EOF;
              }
              if (comment) {
                if (ch === 0x0a || ch === 0x0d) {
                  comment = false;
                }
              } else if (ch === 0x25) {
                comment = true;
              } else if (!(0, _core_utils.isWhiteSpace)(ch)) {
                break;
              }
              ch = this.nextChar();
            }
            switch (ch | 0) {
              case 0x30:
              case 0x31:
              case 0x32:
              case 0x33:
              case 0x34:
              case 0x35:
              case 0x36:
              case 0x37:
              case 0x38:
              case 0x39:
              case 0x2b:
              case 0x2d:
              case 0x2e:
                return new PostScriptToken(
                  PostScriptTokenTypes.NUMBER,
                  this.getNumber()
                );
              case 0x7b:
                this.nextChar();
                return PostScriptToken.LBRACE;
              case 0x7d:
                this.nextChar();
                return PostScriptToken.RBRACE;
            }
            const strBuf = this.strBuf;
            strBuf.length = 0;
            strBuf[0] = String.fromCharCode(ch);
            while (
              (ch = this.nextChar()) >= 0 &&
              ((ch >= 0x41 && ch <= 0x5a) || (ch >= 0x61 && ch <= 0x7a))
            ) {
              strBuf.push(String.fromCharCode(ch));
            }
            const str = strBuf.join("");
            switch (str.toLowerCase()) {
              case "if":
                return PostScriptToken.IF;
              case "ifelse":
                return PostScriptToken.IFELSE;
              default:
                return PostScriptToken.getOperator(str);
            }
          }
          getNumber() {
            let ch = this.currentChar;
            const strBuf = this.strBuf;
            strBuf.length = 0;
            strBuf[0] = String.fromCharCode(ch);
            while ((ch = this.nextChar()) >= 0) {
              if ((ch >= 0x30 && ch <= 0x39) || ch === 0x2d || ch === 0x2e) {
                strBuf.push(String.fromCharCode(ch));
              } else {
                break;
              }
            }
            const value = parseFloat(strBuf.join(""));
            if (isNaN(value)) {
              throw new _util.FormatError(
                `Invalid floating point number: ${value}`
              );
            }
            return value;
          }
        }
        exports.PostScriptLexer = PostScriptLexer;

        /***/
      },
      /* 59 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.RegionalImageCache =
          exports.LocalTilingPatternCache =
          exports.LocalImageCache =
          exports.LocalGStateCache =
          exports.LocalFunctionCache =
          exports.LocalColorSpaceCache =
          exports.GlobalImageCache =
            void 0;
        var _util = __w_pdfjs_require__(2);
        var _primitives = __w_pdfjs_require__(4);
        class BaseLocalCache {
          constructor(options) {
            if (this.constructor === BaseLocalCache) {
              (0, _util.unreachable)("Cannot initialize BaseLocalCache.");
            }
            this._onlyRefs = options?.onlyRefs === true;
            if (!this._onlyRefs) {
              this._nameRefMap = new Map();
              this._imageMap = new Map();
            }
            this._imageCache = new _primitives.RefSetCache();
          }
          getByName(name) {
            if (this._onlyRefs) {
              (0, _util.unreachable)("Should not call `getByName` method.");
            }
            const ref = this._nameRefMap.get(name);
            if (ref) {
              return this.getByRef(ref);
            }
            return this._imageMap.get(name) || null;
          }
          getByRef(ref) {
            return this._imageCache.get(ref) || null;
          }
          set(name, ref, data) {
            (0, _util.unreachable)("Abstract method `set` called.");
          }
        }
        class LocalImageCache extends BaseLocalCache {
          set(name, ref = null, data) {
            if (typeof name !== "string") {
              throw new Error(
                'LocalImageCache.set - expected "name" argument.'
              );
            }
            if (ref) {
              if (this._imageCache.has(ref)) {
                return;
              }
              this._nameRefMap.set(name, ref);
              this._imageCache.put(ref, data);
              return;
            }
            if (this._imageMap.has(name)) {
              return;
            }
            this._imageMap.set(name, data);
          }
        }
        exports.LocalImageCache = LocalImageCache;
        class LocalColorSpaceCache extends BaseLocalCache {
          set(name = null, ref = null, data) {
            if (typeof name !== "string" && !ref) {
              throw new Error(
                'LocalColorSpaceCache.set - expected "name" and/or "ref" argument.'
              );
            }
            if (ref) {
              if (this._imageCache.has(ref)) {
                return;
              }
              if (name !== null) {
                this._nameRefMap.set(name, ref);
              }
              this._imageCache.put(ref, data);
              return;
            }
            if (this._imageMap.has(name)) {
              return;
            }
            this._imageMap.set(name, data);
          }
        }
        exports.LocalColorSpaceCache = LocalColorSpaceCache;
        class LocalFunctionCache extends BaseLocalCache {
          constructor(options) {
            super({
              onlyRefs: true,
            });
          }
          set(name = null, ref, data) {
            if (!ref) {
              throw new Error(
                'LocalFunctionCache.set - expected "ref" argument.'
              );
            }
            if (this._imageCache.has(ref)) {
              return;
            }
            this._imageCache.put(ref, data);
          }
        }
        exports.LocalFunctionCache = LocalFunctionCache;
        class LocalGStateCache extends BaseLocalCache {
          set(name, ref = null, data) {
            if (typeof name !== "string") {
              throw new Error(
                'LocalGStateCache.set - expected "name" argument.'
              );
            }
            if (ref) {
              if (this._imageCache.has(ref)) {
                return;
              }
              this._nameRefMap.set(name, ref);
              this._imageCache.put(ref, data);
              return;
            }
            if (this._imageMap.has(name)) {
              return;
            }
            this._imageMap.set(name, data);
          }
        }
        exports.LocalGStateCache = LocalGStateCache;
        class LocalTilingPatternCache extends BaseLocalCache {
          constructor(options) {
            super({
              onlyRefs: true,
            });
          }
          set(name = null, ref, data) {
            if (!ref) {
              throw new Error(
                'LocalTilingPatternCache.set - expected "ref" argument.'
              );
            }
            if (this._imageCache.has(ref)) {
              return;
            }
            this._imageCache.put(ref, data);
          }
        }
        exports.LocalTilingPatternCache = LocalTilingPatternCache;
        class RegionalImageCache extends BaseLocalCache {
          constructor(options) {
            super({
              onlyRefs: true,
            });
          }
          set(name = null, ref, data) {
            if (!ref) {
              throw new Error(
                'RegionalImageCache.set - expected "ref" argument.'
              );
            }
            if (this._imageCache.has(ref)) {
              return;
            }
            this._imageCache.put(ref, data);
          }
        }
        exports.RegionalImageCache = RegionalImageCache;
        class GlobalImageCache {
          static NUM_PAGES_THRESHOLD = 2;
          static MIN_IMAGES_TO_CACHE = 10;
          static MAX_BYTE_SIZE = 5 * _util.MAX_IMAGE_SIZE_TO_CACHE;
          constructor() {
            this._refCache = new _primitives.RefSetCache();
            this._imageCache = new _primitives.RefSetCache();
          }
          get _byteSize() {
            let byteSize = 0;
            for (const imageData of this._imageCache) {
              byteSize += imageData.byteSize;
            }
            return byteSize;
          }
          get _cacheLimitReached() {
            if (this._imageCache.size < GlobalImageCache.MIN_IMAGES_TO_CACHE) {
              return false;
            }
            if (this._byteSize < GlobalImageCache.MAX_BYTE_SIZE) {
              return false;
            }
            return true;
          }
          shouldCache(ref, pageIndex) {
            let pageIndexSet = this._refCache.get(ref);
            if (!pageIndexSet) {
              pageIndexSet = new Set();
              this._refCache.put(ref, pageIndexSet);
            }
            pageIndexSet.add(pageIndex);
            if (pageIndexSet.size < GlobalImageCache.NUM_PAGES_THRESHOLD) {
              return false;
            }
            if (!this._imageCache.has(ref) && this._cacheLimitReached) {
              return false;
            }
            return true;
          }
          addByteSize(ref, byteSize) {
            const imageData = this._imageCache.get(ref);
            if (!imageData) {
              return;
            }
            if (imageData.byteSize) {
              return;
            }
            imageData.byteSize = byteSize;
          }
          getData(ref, pageIndex) {
            const pageIndexSet = this._refCache.get(ref);
            if (!pageIndexSet) {
              return null;
            }
            if (pageIndexSet.size < GlobalImageCache.NUM_PAGES_THRESHOLD) {
              return null;
            }
            const imageData = this._imageCache.get(ref);
            if (!imageData) {
              return null;
            }
            pageIndexSet.add(pageIndex);
            return imageData;
          }
          setData(ref, data) {
            if (!this._refCache.has(ref)) {
              throw new Error(
                'GlobalImageCache.setData - expected "shouldCache" to have been called.'
              );
            }
            if (this._imageCache.has(ref)) {
              return;
            }
            if (this._cacheLimitReached) {
              (0, _util.warn)(
                "GlobalImageCache.setData - cache limit reached."
              );
              return;
            }
            this._imageCache.put(ref, data);
          }
          clear(onlyData = false) {
            if (!onlyData) {
              this._refCache.clear();
            }
            this._imageCache.clear();
          }
        }
        exports.GlobalImageCache = GlobalImageCache;

        /***/
      },
      /* 60 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.bidi = bidi;
        var _util = __w_pdfjs_require__(2);
        const baseTypes = [
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "S",
          "B",
          "S",
          "WS",
          "B",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "B",
          "B",
          "B",
          "S",
          "WS",
          "ON",
          "ON",
          "ET",
          "ET",
          "ET",
          "ON",
          "ON",
          "ON",
          "ON",
          "ON",
          "ES",
          "CS",
          "ES",
          "CS",
          "CS",
          "EN",
          "EN",
          "EN",
          "EN",
          "EN",
          "EN",
          "EN",
          "EN",
          "EN",
          "EN",
          "CS",
          "ON",
          "ON",
          "ON",
          "ON",
          "ON",
          "ON",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "ON",
          "ON",
          "ON",
          "ON",
          "ON",
          "ON",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "ON",
          "ON",
          "ON",
          "ON",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "B",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "BN",
          "CS",
          "ON",
          "ET",
          "ET",
          "ET",
          "ET",
          "ON",
          "ON",
          "ON",
          "ON",
          "L",
          "ON",
          "ON",
          "BN",
          "ON",
          "ON",
          "ET",
          "ET",
          "EN",
          "EN",
          "ON",
          "L",
          "ON",
          "ON",
          "ON",
          "EN",
          "L",
          "ON",
          "ON",
          "ON",
          "ON",
          "ON",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "ON",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "ON",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
          "L",
        ];
        const arabicTypes = [
          "AN",
          "AN",
          "AN",
          "AN",
          "AN",
          "AN",
          "ON",
          "ON",
          "AL",
          "ET",
          "ET",
          "AL",
          "CS",
          "AL",
          "ON",
          "ON",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "AL",
          "AL",
          "",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "AN",
          "AN",
          "AN",
          "AN",
          "AN",
          "AN",
          "AN",
          "AN",
          "AN",
          "AN",
          "ET",
          "AN",
          "AN",
          "AL",
          "AL",
          "AL",
          "NSM",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "AN",
          "ON",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "AL",
          "AL",
          "NSM",
          "NSM",
          "ON",
          "NSM",
          "NSM",
          "NSM",
          "NSM",
          "AL",
          "AL",
          "EN",
          "EN",
          "EN",
          "EN",
          "EN",
          "EN",
          "EN",
          "EN",
          "EN",
          "EN",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
          "AL",
        ];
        function isOdd(i) {
          return (i & 1) !== 0;
        }
        function isEven(i) {
          return (i & 1) === 0;
        }
        function findUnequal(arr, start, value) {
          let j, jj;
          for (j = start, jj = arr.length; j < jj; ++j) {
            if (arr[j] !== value) {
              return j;
            }
          }
          return j;
        }
        function setValues(arr, start, end, value) {
          for (let j = start; j < end; ++j) {
            arr[j] = value;
          }
        }
        function reverseValues(arr, start, end) {
          for (let i = start, j = end - 1; i < j; ++i, --j) {
            const temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
          }
        }
        function createBidiText(str, isLTR, vertical = false) {
          let dir = "ltr";
          if (vertical) {
            dir = "ttb";
          } else if (!isLTR) {
            dir = "rtl";
          }
          return {
            str,
            dir,
          };
        }
        const chars = [];
        const types = [];
        function bidi(str, startLevel = -1, vertical = false) {
          let isLTR = true;
          const strLength = str.length;
          if (strLength === 0 || vertical) {
            return createBidiText(str, isLTR, vertical);
          }
          chars.length = strLength;
          types.length = strLength;
          let numBidi = 0;
          let i, ii;
          for (i = 0; i < strLength; ++i) {
            chars[i] = str.charAt(i);
            const charCode = str.charCodeAt(i);
            let charType = "L";
            if (charCode <= 0x00ff) {
              charType = baseTypes[charCode];
            } else if (0x0590 <= charCode && charCode <= 0x05f4) {
              charType = "R";
            } else if (0x0600 <= charCode && charCode <= 0x06ff) {
              charType = arabicTypes[charCode & 0xff];
              if (!charType) {
                (0, _util.warn)(
                  "Bidi: invalid Unicode character " + charCode.toString(16)
                );
              }
            } else if (
              (0x0700 <= charCode && charCode <= 0x08ac) ||
              (0xfb50 <= charCode && charCode <= 0xfdff) ||
              (0xfe70 <= charCode && charCode <= 0xfeff)
            ) {
              charType = "AL";
            }
            if (charType === "R" || charType === "AL" || charType === "AN") {
              numBidi++;
            }
            types[i] = charType;
          }
          if (numBidi === 0) {
            isLTR = true;
            return createBidiText(str, isLTR);
          }
          if (startLevel === -1) {
            if (numBidi / strLength < 0.3 && strLength > 4) {
              isLTR = true;
              startLevel = 0;
            } else {
              isLTR = false;
              startLevel = 1;
            }
          }
          const levels = [];
          for (i = 0; i < strLength; ++i) {
            levels[i] = startLevel;
          }
          const e = isOdd(startLevel) ? "R" : "L";
          const sor = e;
          const eor = sor;
          let lastType = sor;
          for (i = 0; i < strLength; ++i) {
            if (types[i] === "NSM") {
              types[i] = lastType;
            } else {
              lastType = types[i];
            }
          }
          lastType = sor;
          let t;
          for (i = 0; i < strLength; ++i) {
            t = types[i];
            if (t === "EN") {
              types[i] = lastType === "AL" ? "AN" : "EN";
            } else if (t === "R" || t === "L" || t === "AL") {
              lastType = t;
            }
          }
          for (i = 0; i < strLength; ++i) {
            t = types[i];
            if (t === "AL") {
              types[i] = "R";
            }
          }
          for (i = 1; i < strLength - 1; ++i) {
            if (
              types[i] === "ES" &&
              types[i - 1] === "EN" &&
              types[i + 1] === "EN"
            ) {
              types[i] = "EN";
            }
            if (
              types[i] === "CS" &&
              (types[i - 1] === "EN" || types[i - 1] === "AN") &&
              types[i + 1] === types[i - 1]
            ) {
              types[i] = types[i - 1];
            }
          }
          for (i = 0; i < strLength; ++i) {
            if (types[i] === "EN") {
              for (let j = i - 1; j >= 0; --j) {
                if (types[j] !== "ET") {
                  break;
                }
                types[j] = "EN";
              }
              for (let j = i + 1; j < strLength; ++j) {
                if (types[j] !== "ET") {
                  break;
                }
                types[j] = "EN";
              }
            }
          }
          for (i = 0; i < strLength; ++i) {
            t = types[i];
            if (t === "WS" || t === "ES" || t === "ET" || t === "CS") {
              types[i] = "ON";
            }
          }
          lastType = sor;
          for (i = 0; i < strLength; ++i) {
            t = types[i];
            if (t === "EN") {
              types[i] = lastType === "L" ? "L" : "EN";
            } else if (t === "R" || t === "L") {
              lastType = t;
            }
          }
          for (i = 0; i < strLength; ++i) {
            if (types[i] === "ON") {
              const end = findUnequal(types, i + 1, "ON");
              let before = sor;
              if (i > 0) {
                before = types[i - 1];
              }
              let after = eor;
              if (end + 1 < strLength) {
                after = types[end + 1];
              }
              if (before !== "L") {
                before = "R";
              }
              if (after !== "L") {
                after = "R";
              }
              if (before === after) {
                setValues(types, i, end, before);
              }
              i = end - 1;
            }
          }
          for (i = 0; i < strLength; ++i) {
            if (types[i] === "ON") {
              types[i] = e;
            }
          }
          for (i = 0; i < strLength; ++i) {
            t = types[i];
            if (isEven(levels[i])) {
              if (t === "R") {
                levels[i] += 1;
              } else if (t === "AN" || t === "EN") {
                levels[i] += 2;
              }
            } else if (t === "L" || t === "AN" || t === "EN") {
              levels[i] += 1;
            }
          }
          let highestLevel = -1;
          let lowestOddLevel = 99;
          let level;
          for (i = 0, ii = levels.length; i < ii; ++i) {
            level = levels[i];
            if (highestLevel < level) {
              highestLevel = level;
            }
            if (lowestOddLevel > level && isOdd(level)) {
              lowestOddLevel = level;
            }
          }
          for (level = highestLevel; level >= lowestOddLevel; --level) {
            let start = -1;
            for (i = 0, ii = levels.length; i < ii; ++i) {
              if (levels[i] < level) {
                if (start >= 0) {
                  reverseValues(chars, start, i);
                  start = -1;
                }
              } else if (start < 0) {
                start = i;
              }
            }
            if (start >= 0) {
              reverseValues(chars, start, levels.length);
            }
          }
          for (i = 0, ii = chars.length; i < ii; ++i) {
            const ch = chars[i];
            if (ch === "<" || ch === ">") {
              chars[i] = "";
            }
          }
          return createBidiText(chars.join(""), isLTR);
        }

        /***/
      },
      /* 61 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.getFontSubstitution = getFontSubstitution;
        var _fonts_utils = __w_pdfjs_require__(38);
        var _core_utils = __w_pdfjs_require__(3);
        const NORMAL = {
          style: "normal",
          weight: "normal",
        };
        const BOLD = {
          style: "normal",
          weight: "bold",
        };
        const ITALIC = {
          style: "italic",
          weight: "normal",
        };
        const BOLDITALIC = {
          style: "italic",
          weight: "bold",
        };
        const substitutionMap = new Map([
          [
            "Times-Roman",
            {
              local: [
                "Times New Roman",
                "Times-Roman",
                "Times",
                "Liberation Serif",
                "Nimbus Roman",
                "Nimbus Roman L",
                "Tinos",
                "Thorndale",
                "TeX Gyre Termes",
                "FreeSerif",
                "DejaVu Serif",
                "Bitstream Vera Serif",
                "Ubuntu",
              ],
              style: NORMAL,
              ultimate: "serif",
            },
          ],
          [
            "Times-Bold",
            {
              alias: "Times-Roman",
              style: BOLD,
              ultimate: "serif",
            },
          ],
          [
            "Times-Italic",
            {
              alias: "Times-Roman",
              style: ITALIC,
              ultimate: "serif",
            },
          ],
          [
            "Times-BoldItalic",
            {
              alias: "Times-Roman",
              style: BOLDITALIC,
              ultimate: "serif",
            },
          ],
          [
            "Helvetica",
            {
              local: [
                "Helvetica",
                "Helvetica Neue",
                "Arial",
                "Arial Nova",
                "Liberation Sans",
                "Arimo",
                "Nimbus Sans",
                "Nimbus Sans L",
                "A030",
                "TeX Gyre Heros",
                "FreeSans",
                "DejaVu Sans",
                "Albany",
                "Bitstream Vera Sans",
                "Arial Unicode MS",
                "Microsoft Sans Serif",
                "Apple Symbols",
                "Cantarell",
              ],
              path: "LiberationSans-Regular.ttf",
              style: NORMAL,
              ultimate: "sans-serif",
            },
          ],
          [
            "Helvetica-Bold",
            {
              alias: "Helvetica",
              path: "LiberationSans-Bold.ttf",
              style: BOLD,
              ultimate: "sans-serif",
            },
          ],
          [
            "Helvetica-Oblique",
            {
              alias: "Helvetica",
              path: "LiberationSans-Italic.ttf",
              style: ITALIC,
              ultimate: "sans-serif",
            },
          ],
          [
            "Helvetica-BoldOblique",
            {
              alias: "Helvetica",
              path: "LiberationSans-BoldItalic.ttf",
              style: BOLDITALIC,
              ultimate: "sans-serif",
            },
          ],
          [
            "Courier",
            {
              local: [
                "Courier",
                "Courier New",
                "Liberation Mono",
                "Nimbus Mono",
                "Nimbus Mono L",
                "Cousine",
                "Cumberland",
                "TeX Gyre Cursor",
                "FreeMono",
              ],
              style: NORMAL,
              ultimate: "monospace",
            },
          ],
          [
            "Courier-Bold",
            {
              alias: "Courier",
              style: BOLD,
              ultimate: "monospace",
            },
          ],
          [
            "Courier-Oblique",
            {
              alias: "Courier",
              style: ITALIC,
              ultimate: "monospace",
            },
          ],
          [
            "Courier-BoldOblique",
            {
              alias: "Courier",
              style: BOLDITALIC,
              ultimate: "monospace",
            },
          ],
          [
            "ArialBlack",
            {
              local: ["Arial Black"],
              style: {
                style: "normal",
                weight: "900",
              },
              fallback: "Helvetica-Bold",
            },
          ],
          [
            "ArialBlack-Bold",
            {
              alias: "ArialBlack",
            },
          ],
          [
            "ArialBlack-Italic",
            {
              alias: "ArialBlack",
              style: {
                style: "italic",
                weight: "900",
              },
              fallback: "Helvetica-BoldOblique",
            },
          ],
          [
            "ArialBlack-BoldItalic",
            {
              alias: "ArialBlack-Italic",
            },
          ],
          [
            "ArialNarrow",
            {
              local: [
                "Arial Narrow",
                "Liberation Sans Narrow",
                "Helvetica Condensed",
                "Nimbus Sans Narrow",
                "TeX Gyre Heros Cn",
              ],
              style: NORMAL,
              fallback: "Helvetica",
            },
          ],
          [
            "ArialNarrow-Bold",
            {
              alias: "ArialNarrow",
              style: BOLD,
              fallback: "Helvetica-Bold",
            },
          ],
          [
            "ArialNarrow-Italic",
            {
              alias: "ArialNarrow",
              style: ITALIC,
              fallback: "Helvetica-Oblique",
            },
          ],
          [
            "ArialNarrow-BoldItalic",
            {
              alias: "ArialNarrow",
              style: BOLDITALIC,
              fallback: "Helvetica-BoldOblique",
            },
          ],
          [
            "Calibri",
            {
              local: ["Calibri", "Carlito"],
              style: NORMAL,
              fallback: "Helvetica",
            },
          ],
          [
            "Calibri-Bold",
            {
              alias: "Calibri",
              style: BOLD,
              fallback: "Helvetica-Bold",
            },
          ],
          [
            "Calibri-Italic",
            {
              alias: "Calibri",
              style: ITALIC,
              fallback: "Helvetica-Oblique",
            },
          ],
          [
            "Calibri-BoldItalic",
            {
              alias: "Calibri",
              style: BOLDITALIC,
              fallback: "Helvetica-BoldOblique",
            },
          ],
          [
            "Wingdings",
            {
              local: ["Wingdings", "URW Dingbats"],
              style: NORMAL,
            },
          ],
          [
            "Wingdings-Regular",
            {
              alias: "Wingdings",
            },
          ],
          [
            "Wingdings-Bold",
            {
              alias: "Wingdings",
            },
          ],
        ]);
        const fontAliases = new Map([["Arial-Black", "ArialBlack"]]);
        function getStyleToAppend(style) {
          switch (style) {
            case BOLD:
              return "Bold";
            case ITALIC:
              return "Italic";
            case BOLDITALIC:
              return "Bold Italic";
            default:
              if (style?.weight === "bold") {
                return "Bold";
              }
              if (style?.style === "italic") {
                return "Italic";
              }
          }
          return "";
        }
        function generateFont(
          { alias, local, path, fallback, style, ultimate },
          src,
          localFontPath,
          useFallback = true,
          usePath = true,
          append = ""
        ) {
          const result = {
            style: null,
            ultimate: null,
          };
          if (local) {
            const extra = append ? ` ${append}` : "";
            for (const name of local) {
              src.push(`local(${name}${extra})`);
            }
          }
          if (alias) {
            const substitution = substitutionMap.get(alias);
            const aliasAppend = append || getStyleToAppend(style);
            Object.assign(
              result,
              generateFont(
                substitution,
                src,
                localFontPath,
                useFallback && !fallback,
                usePath && !path,
                aliasAppend
              )
            );
          }
          if (style) {
            result.style = style;
          }
          if (ultimate) {
            result.ultimate = ultimate;
          }
          if (useFallback && fallback) {
            const fallbackInfo = substitutionMap.get(fallback);
            const { ultimate: fallbackUltimate } = generateFont(
              fallbackInfo,
              src,
              localFontPath,
              useFallback,
              usePath && !path,
              append
            );
            result.ultimate ||= fallbackUltimate;
          }
          if (usePath && path && localFontPath) {
            src.push(`url(${localFontPath}${path})`);
          }
          return result;
        }
        function getFontSubstitution(
          systemFontCache,
          idFactory,
          localFontPath,
          baseFontName,
          standardFontName
        ) {
          baseFontName = (0, _fonts_utils.normalizeFontName)(baseFontName);
          const key = baseFontName;
          let substitutionInfo = systemFontCache.get(key);
          if (substitutionInfo) {
            return substitutionInfo;
          }
          let substitution = substitutionMap.get(baseFontName);
          if (!substitution) {
            for (const [alias, subst] of fontAliases) {
              if (baseFontName.startsWith(alias)) {
                baseFontName = `${subst}${baseFontName.substring(
                  alias.length
                )}`;
                substitution = substitutionMap.get(baseFontName);
                break;
              }
            }
          }
          let mustAddBaseFont = false;
          if (!substitution) {
            substitution = substitutionMap.get(standardFontName);
            mustAddBaseFont = true;
          }
          const loadedName = `${idFactory.getDocId()}_s${idFactory.createFontId()}`;
          if (!substitution) {
            if (!(0, _core_utils.validateFontName)(baseFontName)) {
              systemFontCache.set(key, null);
              return null;
            }
            const bold = /bold/gi.test(baseFontName);
            const italic = /oblique|italic/gi.test(baseFontName);
            const style =
              (bold && italic && BOLDITALIC) ||
              (bold && BOLD) ||
              (italic && ITALIC) ||
              NORMAL;
            substitutionInfo = {
              css: loadedName,
              guessFallback: true,
              loadedName,
              baseFontName,
              src: `local(${baseFontName})`,
              style,
            };
            systemFontCache.set(key, substitutionInfo);
            return substitutionInfo;
          }
          const src = [];
          if (
            mustAddBaseFont &&
            (0, _core_utils.validateFontName)(baseFontName)
          ) {
            src.push(`local(${baseFontName})`);
          }
          const { style, ultimate } = generateFont(
            substitution,
            src,
            localFontPath
          );
          const guessFallback = ultimate === null;
          const fallback = guessFallback ? "" : `,${ultimate}`;
          substitutionInfo = {
            css: `${loadedName}${fallback}`,
            guessFallback,
            loadedName,
            baseFontName,
            src: src.join(","),
            style,
          };
          systemFontCache.set(key, substitutionInfo);
          return substitutionInfo;
        }

        /***/
      },
      /* 62 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.ImageResizer = void 0;
        var _util = __w_pdfjs_require__(2);
        const MIN_IMAGE_DIM = 2048;
        const MAX_IMAGE_DIM = 65537;
        const MAX_ERROR = 128;
        class ImageResizer {
          constructor(imgData, isMask) {
            this._imgData = imgData;
            this._isMask = isMask;
          }
          static needsToBeResized(width, height) {
            if (
              width <= this._goodSquareLength &&
              height <= this._goodSquareLength
            ) {
              return false;
            }
            const { MAX_DIM } = this;
            if (width > MAX_DIM || height > MAX_DIM) {
              return true;
            }
            const area = width * height;
            if (this._hasMaxArea) {
              return area > this.MAX_AREA;
            }
            if (area < this._goodSquareLength ** 2) {
              return false;
            }
            if (this._areGoodDims(width, height)) {
              this._goodSquareLength = Math.max(
                this._goodSquareLength,
                Math.floor(Math.sqrt(width * height))
              );
              return false;
            }
            this._goodSquareLength = this._guessMax(
              this._goodSquareLength,
              MAX_DIM,
              MAX_ERROR,
              0
            );
            const maxArea = (this.MAX_AREA = this._goodSquareLength ** 2);
            return area > maxArea;
          }
          static get MAX_DIM() {
            return (0, _util.shadow)(
              this,
              "MAX_DIM",
              this._guessMax(MIN_IMAGE_DIM, MAX_IMAGE_DIM, 0, 1)
            );
          }
          static get MAX_AREA() {
            this._hasMaxArea = true;
            return (0, _util.shadow)(
              this,
              "MAX_AREA",
              this._guessMax(
                ImageResizer._goodSquareLength,
                this.MAX_DIM,
                MAX_ERROR,
                0
              ) ** 2
            );
          }
          static set MAX_AREA(area) {
            if (area >= 0) {
              this._hasMaxArea = true;
              (0, _util.shadow)(this, "MAX_AREA", area);
            }
          }
          static setMaxArea(area) {
            if (!this._hasMaxArea) {
              this.MAX_AREA = area >> 2;
            }
          }
          static _areGoodDims(width, height) {
            try {
              const canvas = new OffscreenCanvas(width, height);
              const ctx = canvas.getContext("2d");
              ctx.fillRect(0, 0, 1, 1);
              const opacity = ctx.getImageData(0, 0, 1, 1).data[3];
              canvas.width = canvas.height = 1;
              return opacity !== 0;
            } catch {
              return false;
            }
          }
          static _guessMax(start, end, tolerance, defaultHeight) {
            while (start + tolerance + 1 < end) {
              const middle = Math.floor((start + end) / 2);
              const height = defaultHeight || middle;
              if (this._areGoodDims(middle, height)) {
                start = middle;
              } else {
                end = middle;
              }
            }
            return start;
          }
          static async createImage(imgData, isMask = false) {
            return new ImageResizer(imgData, isMask)._createImage();
          }
          async _createImage() {
            const data = this._encodeBMP();
            const blob = new Blob([data.buffer], {
              type: "image/bmp",
            });
            const bitmapPromise = createImageBitmap(blob);
            const { MAX_AREA, MAX_DIM } = ImageResizer;
            const { _imgData: imgData } = this;
            const { width, height } = imgData;
            const minFactor = Math.max(
              width / MAX_DIM,
              height / MAX_DIM,
              Math.sqrt((width * height) / MAX_AREA)
            );
            const firstFactor = Math.max(minFactor, 2);
            const factor =
              Math.round(10 * (minFactor + 1.25)) / 10 / firstFactor;
            const N = Math.floor(Math.log2(factor));
            const steps = new Array(N + 2).fill(2);
            steps[0] = firstFactor;
            steps.splice(-1, 1, factor / (1 << N));
            let newWidth = width;
            let newHeight = height;
            let bitmap = await bitmapPromise;
            for (const step of steps) {
              const prevWidth = newWidth;
              const prevHeight = newHeight;
              newWidth = Math.floor(newWidth / step) - 1;
              newHeight = Math.floor(newHeight / step) - 1;
              const canvas = new OffscreenCanvas(newWidth, newHeight);
              const ctx = canvas.getContext("2d");
              ctx.drawImage(
                bitmap,
                0,
                0,
                prevWidth,
                prevHeight,
                0,
                0,
                newWidth,
                newHeight
              );
              bitmap = canvas.transferToImageBitmap();
            }
            imgData.data = null;
            imgData.bitmap = bitmap;
            imgData.width = newWidth;
            imgData.height = newHeight;
            return imgData;
          }
          _encodeBMP() {
            const { width, height, kind } = this._imgData;
            let data = this._imgData.data;
            let bitPerPixel;
            let colorTable = new Uint8Array(0);
            let maskTable = colorTable;
            let compression = 0;
            switch (kind) {
              case _util.ImageKind.GRAYSCALE_1BPP: {
                bitPerPixel = 1;
                colorTable = new Uint8Array(
                  this._isMask
                    ? [255, 255, 255, 255, 0, 0, 0, 0]
                    : [0, 0, 0, 0, 255, 255, 255, 255]
                );
                const rowLen = (width + 7) >> 3;
                const rowSize = (rowLen + 3) & -4;
                if (rowLen !== rowSize) {
                  const newData = new Uint8Array(rowSize * height);
                  let k = 0;
                  for (
                    let i = 0, ii = height * rowLen;
                    i < ii;
                    i += rowLen, k += rowSize
                  ) {
                    newData.set(data.subarray(i, i + rowLen), k);
                  }
                  data = newData;
                }
                break;
              }
              case _util.ImageKind.RGB_24BPP: {
                bitPerPixel = 24;
                if (width & 3) {
                  const rowLen = 3 * width;
                  const rowSize = (rowLen + 3) & -4;
                  const extraLen = rowSize - rowLen;
                  const newData = new Uint8Array(rowSize * height);
                  let k = 0;
                  for (let i = 0, ii = height * rowLen; i < ii; i += rowLen) {
                    const row = data.subarray(i, i + rowLen);
                    for (let j = 0; j < rowLen; j += 3) {
                      newData[k++] = row[j + 2];
                      newData[k++] = row[j + 1];
                      newData[k++] = row[j];
                    }
                    k += extraLen;
                  }
                  data = newData;
                } else {
                  for (let i = 0, ii = data.length; i < ii; i += 3) {
                    const tmp = data[i];
                    data[i] = data[i + 2];
                    data[i + 2] = tmp;
                  }
                }
                break;
              }
              case _util.ImageKind.RGBA_32BPP:
                bitPerPixel = 32;
                compression = 3;
                maskTable = new Uint8Array(4 + 4 + 4 + 4 + 52);
                const view = new DataView(maskTable.buffer);
                if (_util.FeatureTest.isLittleEndian) {
                  view.setUint32(0, 0x000000ff, true);
                  view.setUint32(4, 0x0000ff00, true);
                  view.setUint32(8, 0x00ff0000, true);
                  view.setUint32(12, 0xff000000, true);
                } else {
                  view.setUint32(0, 0xff000000, true);
                  view.setUint32(4, 0x00ff0000, true);
                  view.setUint32(8, 0x0000ff00, true);
                  view.setUint32(12, 0x000000ff, true);
                }
                break;
              default:
                throw new Error("invalid format");
            }
            let i = 0;
            const headerLength = 40 + maskTable.length;
            const fileLength =
              14 + headerLength + colorTable.length + data.length;
            const bmpData = new Uint8Array(fileLength);
            const view = new DataView(bmpData.buffer);
            view.setUint16(i, 0x4d42, true);
            i += 2;
            view.setUint32(i, fileLength, true);
            i += 4;
            view.setUint32(i, 0, true);
            i += 4;
            view.setUint32(i, 14 + headerLength + colorTable.length, true);
            i += 4;
            view.setUint32(i, headerLength, true);
            i += 4;
            view.setInt32(i, width, true);
            i += 4;
            view.setInt32(i, -height, true);
            i += 4;
            view.setUint16(i, 1, true);
            i += 2;
            view.setUint16(i, bitPerPixel, true);
            i += 2;
            view.setUint32(i, compression, true);
            i += 4;
            view.setUint32(i, 0, true);
            i += 4;
            view.setInt32(i, 0, true);
            i += 4;
            view.setInt32(i, 0, true);
            i += 4;
            view.setUint32(i, colorTable.length / 4, true);
            i += 4;
            view.setUint32(i, 0, true);
            i += 4;
            bmpData.set(maskTable, i);
            i += maskTable.length;
            bmpData.set(colorTable, i);
            i += colorTable.length;
            bmpData.set(data, i);
            return bmpData;
          }
        }
        exports.ImageResizer = ImageResizer;
        ImageResizer._goodSquareLength = MIN_IMAGE_DIM;

        /***/
      },
      /* 63 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.MurmurHash3_64 = void 0;
        var _util = __w_pdfjs_require__(2);
        const SEED = 0xc3d2e1f0;
        const MASK_HIGH = 0xffff0000;
        const MASK_LOW = 0xffff;
        class MurmurHash3_64 {
          constructor(seed) {
            this.h1 = seed ? seed & 0xffffffff : SEED;
            this.h2 = seed ? seed & 0xffffffff : SEED;
          }
          update(input) {
            let data, length;
            if (typeof input === "string") {
              data = new Uint8Array(input.length * 2);
              length = 0;
              for (let i = 0, ii = input.length; i < ii; i++) {
                const code = input.charCodeAt(i);
                if (code <= 0xff) {
                  data[length++] = code;
                } else {
                  data[length++] = code >>> 8;
                  data[length++] = code & 0xff;
                }
              }
            } else if ((0, _util.isArrayBuffer)(input)) {
              data = input.slice();
              length = data.byteLength;
            } else {
              throw new Error(
                "Wrong data format in MurmurHash3_64_update. " +
                  "Input must be a string or array."
              );
            }
            const blockCounts = length >> 2;
            const tailLength = length - blockCounts * 4;
            const dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);
            let k1 = 0,
              k2 = 0;
            let h1 = this.h1,
              h2 = this.h2;
            const C1 = 0xcc9e2d51,
              C2 = 0x1b873593;
            const C1_LOW = C1 & MASK_LOW,
              C2_LOW = C2 & MASK_LOW;
            for (let i = 0; i < blockCounts; i++) {
              if (i & 1) {
                k1 = dataUint32[i];
                k1 = ((k1 * C1) & MASK_HIGH) | ((k1 * C1_LOW) & MASK_LOW);
                k1 = (k1 << 15) | (k1 >>> 17);
                k1 = ((k1 * C2) & MASK_HIGH) | ((k1 * C2_LOW) & MASK_LOW);
                h1 ^= k1;
                h1 = (h1 << 13) | (h1 >>> 19);
                h1 = h1 * 5 + 0xe6546b64;
              } else {
                k2 = dataUint32[i];
                k2 = ((k2 * C1) & MASK_HIGH) | ((k2 * C1_LOW) & MASK_LOW);
                k2 = (k2 << 15) | (k2 >>> 17);
                k2 = ((k2 * C2) & MASK_HIGH) | ((k2 * C2_LOW) & MASK_LOW);
                h2 ^= k2;
                h2 = (h2 << 13) | (h2 >>> 19);
                h2 = h2 * 5 + 0xe6546b64;
              }
            }
            k1 = 0;
            switch (tailLength) {
              case 3:
                k1 ^= data[blockCounts * 4 + 2] << 16;
              case 2:
                k1 ^= data[blockCounts * 4 + 1] << 8;
              case 1:
                k1 ^= data[blockCounts * 4];
                k1 = ((k1 * C1) & MASK_HIGH) | ((k1 * C1_LOW) & MASK_LOW);
                k1 = (k1 << 15) | (k1 >>> 17);
                k1 = ((k1 * C2) & MASK_HIGH) | ((k1 * C2_LOW) & MASK_LOW);
                if (blockCounts & 1) {
                  h1 ^= k1;
                } else {
                  h2 ^= k1;
                }
            }
            this.h1 = h1;
            this.h2 = h2;
          }
          hexdigest() {
            let h1 = this.h1,
              h2 = this.h2;
            h1 ^= h2 >>> 1;
            h1 = ((h1 * 0xed558ccd) & MASK_HIGH) | ((h1 * 0x8ccd) & MASK_LOW);
            h2 =
              ((h2 * 0xff51afd7) & MASK_HIGH) |
              (((((h2 << 16) | (h1 >>> 16)) * 0xafd7ed55) & MASK_HIGH) >>> 16);
            h1 ^= h2 >>> 1;
            h1 = ((h1 * 0x1a85ec53) & MASK_HIGH) | ((h1 * 0xec53) & MASK_LOW);
            h2 =
              ((h2 * 0xc4ceb9fe) & MASK_HIGH) |
              (((((h2 << 16) | (h1 >>> 16)) * 0xb9fe1a85) & MASK_HIGH) >>> 16);
            h1 ^= h2 >>> 1;
            return (
              (h1 >>> 0).toString(16).padStart(8, "0") +
              (h2 >>> 0).toString(16).padStart(8, "0")
            );
          }
        }
        exports.MurmurHash3_64 = MurmurHash3_64;

        /***/
      },
      /* 64 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.OperatorList = void 0;
        var _util = __w_pdfjs_require__(2);
        function addState(parentState, pattern, checkFn, iterateFn, processFn) {
          let state = parentState;
          for (let i = 0, ii = pattern.length - 1; i < ii; i++) {
            const item = pattern[i];
            state = state[item] ||= [];
          }
          state[pattern.at(-1)] = {
            checkFn,
            iterateFn,
            processFn,
          };
        }
        const InitialState = [];
        addState(
          InitialState,
          [
            _util.OPS.save,
            _util.OPS.transform,
            _util.OPS.paintInlineImageXObject,
            _util.OPS.restore,
          ],
          null,
          function iterateInlineImageGroup(context, i) {
            const fnArray = context.fnArray;
            const iFirstSave = context.iCurr - 3;
            const pos = (i - iFirstSave) % 4;
            switch (pos) {
              case 0:
                return fnArray[i] === _util.OPS.save;
              case 1:
                return fnArray[i] === _util.OPS.transform;
              case 2:
                return fnArray[i] === _util.OPS.paintInlineImageXObject;
              case 3:
                return fnArray[i] === _util.OPS.restore;
            }
            throw new Error(`iterateInlineImageGroup - invalid pos: ${pos}`);
          },
          function foundInlineImageGroup(context, i) {
            const MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;
            const MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;
            const MAX_WIDTH = 1000;
            const IMAGE_PADDING = 1;
            const fnArray = context.fnArray,
              argsArray = context.argsArray;
            const curr = context.iCurr;
            const iFirstSave = curr - 3;
            const iFirstTransform = curr - 2;
            const iFirstPIIXO = curr - 1;
            const count = Math.min(
              Math.floor((i - iFirstSave) / 4),
              MAX_IMAGES_IN_INLINE_IMAGES_BLOCK
            );
            if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {
              return i - ((i - iFirstSave) % 4);
            }
            let maxX = 0;
            const map = [];
            let maxLineHeight = 0;
            let currentX = IMAGE_PADDING,
              currentY = IMAGE_PADDING;
            for (let q = 0; q < count; q++) {
              const transform = argsArray[iFirstTransform + (q << 2)];
              const img = argsArray[iFirstPIIXO + (q << 2)][0];
              if (currentX + img.width > MAX_WIDTH) {
                maxX = Math.max(maxX, currentX);
                currentY += maxLineHeight + 2 * IMAGE_PADDING;
                currentX = 0;
                maxLineHeight = 0;
              }
              map.push({
                transform,
                x: currentX,
                y: currentY,
                w: img.width,
                h: img.height,
              });
              currentX += img.width + 2 * IMAGE_PADDING;
              maxLineHeight = Math.max(maxLineHeight, img.height);
            }
            const imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;
            const imgHeight = currentY + maxLineHeight + IMAGE_PADDING;
            const imgData = new Uint8Array(imgWidth * imgHeight * 4);
            const imgRowSize = imgWidth << 2;
            for (let q = 0; q < count; q++) {
              const data = argsArray[iFirstPIIXO + (q << 2)][0].data;
              const rowSize = map[q].w << 2;
              let dataOffset = 0;
              let offset = (map[q].x + map[q].y * imgWidth) << 2;
              imgData.set(data.subarray(0, rowSize), offset - imgRowSize);
              for (let k = 0, kk = map[q].h; k < kk; k++) {
                imgData.set(
                  data.subarray(dataOffset, dataOffset + rowSize),
                  offset
                );
                dataOffset += rowSize;
                offset += imgRowSize;
              }
              imgData.set(
                data.subarray(dataOffset - rowSize, dataOffset),
                offset
              );
              while (offset >= 0) {
                data[offset - 4] = data[offset];
                data[offset - 3] = data[offset + 1];
                data[offset - 2] = data[offset + 2];
                data[offset - 1] = data[offset + 3];
                data[offset + rowSize] = data[offset + rowSize - 4];
                data[offset + rowSize + 1] = data[offset + rowSize - 3];
                data[offset + rowSize + 2] = data[offset + rowSize - 2];
                data[offset + rowSize + 3] = data[offset + rowSize - 1];
                offset -= imgRowSize;
              }
            }
            const img = {
              width: imgWidth,
              height: imgHeight,
            };
            if (context.isOffscreenCanvasSupported) {
              const canvas = new OffscreenCanvas(imgWidth, imgHeight);
              const ctx = canvas.getContext("2d");
              ctx.putImageData(
                new ImageData(
                  new Uint8ClampedArray(imgData.buffer),
                  imgWidth,
                  imgHeight
                ),
                0,
                0
              );
              img.bitmap = canvas.transferToImageBitmap();
              img.data = null;
            } else {
              img.kind = _util.ImageKind.RGBA_32BPP;
              img.data = imgData;
            }
            fnArray.splice(
              iFirstSave,
              count * 4,
              _util.OPS.paintInlineImageXObjectGroup
            );
            argsArray.splice(iFirstSave, count * 4, [img, map]);
            return iFirstSave + 1;
          }
        );
        addState(
          InitialState,
          [
            _util.OPS.save,
            _util.OPS.transform,
            _util.OPS.paintImageMaskXObject,
            _util.OPS.restore,
          ],
          null,
          function iterateImageMaskGroup(context, i) {
            const fnArray = context.fnArray;
            const iFirstSave = context.iCurr - 3;
            const pos = (i - iFirstSave) % 4;
            switch (pos) {
              case 0:
                return fnArray[i] === _util.OPS.save;
              case 1:
                return fnArray[i] === _util.OPS.transform;
              case 2:
                return fnArray[i] === _util.OPS.paintImageMaskXObject;
              case 3:
                return fnArray[i] === _util.OPS.restore;
            }
            throw new Error(`iterateImageMaskGroup - invalid pos: ${pos}`);
          },
          function foundImageMaskGroup(context, i) {
            const MIN_IMAGES_IN_MASKS_BLOCK = 10;
            const MAX_IMAGES_IN_MASKS_BLOCK = 100;
            const MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;
            const fnArray = context.fnArray,
              argsArray = context.argsArray;
            const curr = context.iCurr;
            const iFirstSave = curr - 3;
            const iFirstTransform = curr - 2;
            const iFirstPIMXO = curr - 1;
            let count = Math.floor((i - iFirstSave) / 4);
            if (count < MIN_IMAGES_IN_MASKS_BLOCK) {
              return i - ((i - iFirstSave) % 4);
            }
            let isSameImage = false;
            let iTransform, transformArgs;
            const firstPIMXOArg0 = argsArray[iFirstPIMXO][0];
            const firstTransformArg0 = argsArray[iFirstTransform][0],
              firstTransformArg1 = argsArray[iFirstTransform][1],
              firstTransformArg2 = argsArray[iFirstTransform][2],
              firstTransformArg3 = argsArray[iFirstTransform][3];
            if (firstTransformArg1 === firstTransformArg2) {
              isSameImage = true;
              iTransform = iFirstTransform + 4;
              let iPIMXO = iFirstPIMXO + 4;
              for (let q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {
                transformArgs = argsArray[iTransform];
                if (
                  argsArray[iPIMXO][0] !== firstPIMXOArg0 ||
                  transformArgs[0] !== firstTransformArg0 ||
                  transformArgs[1] !== firstTransformArg1 ||
                  transformArgs[2] !== firstTransformArg2 ||
                  transformArgs[3] !== firstTransformArg3
                ) {
                  if (q < MIN_IMAGES_IN_MASKS_BLOCK) {
                    isSameImage = false;
                  } else {
                    count = q;
                  }
                  break;
                }
              }
            }
            if (isSameImage) {
              count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);
              const positions = new Float32Array(count * 2);
              iTransform = iFirstTransform;
              for (let q = 0; q < count; q++, iTransform += 4) {
                transformArgs = argsArray[iTransform];
                positions[q << 1] = transformArgs[4];
                positions[(q << 1) + 1] = transformArgs[5];
              }
              fnArray.splice(
                iFirstSave,
                count * 4,
                _util.OPS.paintImageMaskXObjectRepeat
              );
              argsArray.splice(iFirstSave, count * 4, [
                firstPIMXOArg0,
                firstTransformArg0,
                firstTransformArg1,
                firstTransformArg2,
                firstTransformArg3,
                positions,
              ]);
            } else {
              count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);
              const images = [];
              for (let q = 0; q < count; q++) {
                transformArgs = argsArray[iFirstTransform + (q << 2)];
                const maskParams = argsArray[iFirstPIMXO + (q << 2)][0];
                images.push({
                  data: maskParams.data,
                  width: maskParams.width,
                  height: maskParams.height,
                  interpolate: maskParams.interpolate,
                  count: maskParams.count,
                  transform: transformArgs,
                });
              }
              fnArray.splice(
                iFirstSave,
                count * 4,
                _util.OPS.paintImageMaskXObjectGroup
              );
              argsArray.splice(iFirstSave, count * 4, [images]);
            }
            return iFirstSave + 1;
          }
        );
        addState(
          InitialState,
          [
            _util.OPS.save,
            _util.OPS.transform,
            _util.OPS.paintImageXObject,
            _util.OPS.restore,
          ],
          function (context) {
            const argsArray = context.argsArray;
            const iFirstTransform = context.iCurr - 2;
            return (
              argsArray[iFirstTransform][1] === 0 &&
              argsArray[iFirstTransform][2] === 0
            );
          },
          function iterateImageGroup(context, i) {
            const fnArray = context.fnArray,
              argsArray = context.argsArray;
            const iFirstSave = context.iCurr - 3;
            const pos = (i - iFirstSave) % 4;
            switch (pos) {
              case 0:
                return fnArray[i] === _util.OPS.save;
              case 1:
                if (fnArray[i] !== _util.OPS.transform) {
                  return false;
                }
                const iFirstTransform = context.iCurr - 2;
                const firstTransformArg0 = argsArray[iFirstTransform][0];
                const firstTransformArg3 = argsArray[iFirstTransform][3];
                if (
                  argsArray[i][0] !== firstTransformArg0 ||
                  argsArray[i][1] !== 0 ||
                  argsArray[i][2] !== 0 ||
                  argsArray[i][3] !== firstTransformArg3
                ) {
                  return false;
                }
                return true;
              case 2:
                if (fnArray[i] !== _util.OPS.paintImageXObject) {
                  return false;
                }
                const iFirstPIXO = context.iCurr - 1;
                const firstPIXOArg0 = argsArray[iFirstPIXO][0];
                if (argsArray[i][0] !== firstPIXOArg0) {
                  return false;
                }
                return true;
              case 3:
                return fnArray[i] === _util.OPS.restore;
            }
            throw new Error(`iterateImageGroup - invalid pos: ${pos}`);
          },
          function (context, i) {
            const MIN_IMAGES_IN_BLOCK = 3;
            const MAX_IMAGES_IN_BLOCK = 1000;
            const fnArray = context.fnArray,
              argsArray = context.argsArray;
            const curr = context.iCurr;
            const iFirstSave = curr - 3;
            const iFirstTransform = curr - 2;
            const iFirstPIXO = curr - 1;
            const firstPIXOArg0 = argsArray[iFirstPIXO][0];
            const firstTransformArg0 = argsArray[iFirstTransform][0];
            const firstTransformArg3 = argsArray[iFirstTransform][3];
            const count = Math.min(
              Math.floor((i - iFirstSave) / 4),
              MAX_IMAGES_IN_BLOCK
            );
            if (count < MIN_IMAGES_IN_BLOCK) {
              return i - ((i - iFirstSave) % 4);
            }
            const positions = new Float32Array(count * 2);
            let iTransform = iFirstTransform;
            for (let q = 0; q < count; q++, iTransform += 4) {
              const transformArgs = argsArray[iTransform];
              positions[q << 1] = transformArgs[4];
              positions[(q << 1) + 1] = transformArgs[5];
            }
            const args = [
              firstPIXOArg0,
              firstTransformArg0,
              firstTransformArg3,
              positions,
            ];
            fnArray.splice(
              iFirstSave,
              count * 4,
              _util.OPS.paintImageXObjectRepeat
            );
            argsArray.splice(iFirstSave, count * 4, args);
            return iFirstSave + 1;
          }
        );
        addState(
          InitialState,
          [
            _util.OPS.beginText,
            _util.OPS.setFont,
            _util.OPS.setTextMatrix,
            _util.OPS.showText,
            _util.OPS.endText,
          ],
          null,
          function iterateShowTextGroup(context, i) {
            const fnArray = context.fnArray,
              argsArray = context.argsArray;
            const iFirstSave = context.iCurr - 4;
            const pos = (i - iFirstSave) % 5;
            switch (pos) {
              case 0:
                return fnArray[i] === _util.OPS.beginText;
              case 1:
                return fnArray[i] === _util.OPS.setFont;
              case 2:
                return fnArray[i] === _util.OPS.setTextMatrix;
              case 3:
                if (fnArray[i] !== _util.OPS.showText) {
                  return false;
                }
                const iFirstSetFont = context.iCurr - 3;
                const firstSetFontArg0 = argsArray[iFirstSetFont][0];
                const firstSetFontArg1 = argsArray[iFirstSetFont][1];
                if (
                  argsArray[i][0] !== firstSetFontArg0 ||
                  argsArray[i][1] !== firstSetFontArg1
                ) {
                  return false;
                }
                return true;
              case 4:
                return fnArray[i] === _util.OPS.endText;
            }
            throw new Error(`iterateShowTextGroup - invalid pos: ${pos}`);
          },
          function (context, i) {
            const MIN_CHARS_IN_BLOCK = 3;
            const MAX_CHARS_IN_BLOCK = 1000;
            const fnArray = context.fnArray,
              argsArray = context.argsArray;
            const curr = context.iCurr;
            const iFirstBeginText = curr - 4;
            const iFirstSetFont = curr - 3;
            const iFirstSetTextMatrix = curr - 2;
            const iFirstShowText = curr - 1;
            const iFirstEndText = curr;
            const firstSetFontArg0 = argsArray[iFirstSetFont][0];
            const firstSetFontArg1 = argsArray[iFirstSetFont][1];
            let count = Math.min(
              Math.floor((i - iFirstBeginText) / 5),
              MAX_CHARS_IN_BLOCK
            );
            if (count < MIN_CHARS_IN_BLOCK) {
              return i - ((i - iFirstBeginText) % 5);
            }
            let iFirst = iFirstBeginText;
            if (
              iFirstBeginText >= 4 &&
              fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] &&
              fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] &&
              fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] &&
              fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] &&
              argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 &&
              argsArray[iFirstBeginText - 4][1] === firstSetFontArg1
            ) {
              count++;
              iFirst -= 5;
            }
            let iEndText = iFirst + 4;
            for (let q = 1; q < count; q++) {
              fnArray.splice(iEndText, 3);
              argsArray.splice(iEndText, 3);
              iEndText += 2;
            }
            return iEndText + 1;
          }
        );
        class NullOptimizer {
          constructor(queue) {
            this.queue = queue;
          }
          _optimize() {}
          push(fn, args) {
            this.queue.fnArray.push(fn);
            this.queue.argsArray.push(args);
            this._optimize();
          }
          flush() {}
          reset() {}
        }
        class QueueOptimizer extends NullOptimizer {
          constructor(queue) {
            super(queue);
            this.state = null;
            this.context = {
              iCurr: 0,
              fnArray: queue.fnArray,
              argsArray: queue.argsArray,
              isOffscreenCanvasSupported: false,
            };
            this.match = null;
            this.lastProcessed = 0;
          }
          set isOffscreenCanvasSupported(value) {
            this.context.isOffscreenCanvasSupported = value;
          }
          _optimize() {
            const fnArray = this.queue.fnArray;
            let i = this.lastProcessed,
              ii = fnArray.length;
            let state = this.state;
            let match = this.match;
            if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {
              this.lastProcessed = ii;
              return;
            }
            const context = this.context;
            while (i < ii) {
              if (match) {
                const iterate = (0, match.iterateFn)(context, i);
                if (iterate) {
                  i++;
                  continue;
                }
                i = (0, match.processFn)(context, i + 1);
                ii = fnArray.length;
                match = null;
                state = null;
                if (i >= ii) {
                  break;
                }
              }
              state = (state || InitialState)[fnArray[i]];
              if (!state || Array.isArray(state)) {
                i++;
                continue;
              }
              context.iCurr = i;
              i++;
              if (state.checkFn && !(0, state.checkFn)(context)) {
                state = null;
                continue;
              }
              match = state;
              state = null;
            }
            this.state = state;
            this.match = match;
            this.lastProcessed = i;
          }
          flush() {
            while (this.match) {
              const length = this.queue.fnArray.length;
              this.lastProcessed = (0, this.match.processFn)(
                this.context,
                length
              );
              this.match = null;
              this.state = null;
              this._optimize();
            }
          }
          reset() {
            this.state = null;
            this.match = null;
            this.lastProcessed = 0;
          }
        }
        class OperatorList {
          static CHUNK_SIZE = 1000;
          static CHUNK_SIZE_ABOUT = this.CHUNK_SIZE - 5;
          constructor(intent = 0, streamSink) {
            this._streamSink = streamSink;
            this.fnArray = [];
            this.argsArray = [];
            this.optimizer =
              streamSink && !(intent & _util.RenderingIntentFlag.OPLIST)
                ? new QueueOptimizer(this)
                : new NullOptimizer(this);
            this.dependencies = new Set();
            this._totalLength = 0;
            this.weight = 0;
            this._resolved = streamSink ? null : Promise.resolve();
          }
          set isOffscreenCanvasSupported(value) {
            this.optimizer.isOffscreenCanvasSupported = value;
          }
          get length() {
            return this.argsArray.length;
          }
          get ready() {
            return this._resolved || this._streamSink.ready;
          }
          get totalLength() {
            return this._totalLength + this.length;
          }
          addOp(fn, args) {
            this.optimizer.push(fn, args);
            this.weight++;
            if (this._streamSink) {
              if (this.weight >= OperatorList.CHUNK_SIZE) {
                this.flush();
              } else if (
                this.weight >= OperatorList.CHUNK_SIZE_ABOUT &&
                (fn === _util.OPS.restore || fn === _util.OPS.endText)
              ) {
                this.flush();
              }
            }
          }
          addImageOps(fn, args, optionalContent) {
            if (optionalContent !== undefined) {
              this.addOp(_util.OPS.beginMarkedContentProps, [
                "OC",
                optionalContent,
              ]);
            }
            this.addOp(fn, args);
            if (optionalContent !== undefined) {
              this.addOp(_util.OPS.endMarkedContent, []);
            }
          }
          addDependency(dependency) {
            if (this.dependencies.has(dependency)) {
              return;
            }
            this.dependencies.add(dependency);
            this.addOp(_util.OPS.dependency, [dependency]);
          }
          addDependencies(dependencies) {
            for (const dependency of dependencies) {
              this.addDependency(dependency);
            }
          }
          addOpList(opList) {
            if (!(opList instanceof OperatorList)) {
              (0, _util.warn)(
                'addOpList - ignoring invalid "opList" parameter.'
              );
              return;
            }
            for (const dependency of opList.dependencies) {
              this.dependencies.add(dependency);
            }
            for (let i = 0, ii = opList.length; i < ii; i++) {
              this.addOp(opList.fnArray[i], opList.argsArray[i]);
            }
          }
          getIR() {
            return {
              fnArray: this.fnArray,
              argsArray: this.argsArray,
              length: this.length,
            };
          }
          get _transfers() {
            const transfers = [];
            const { fnArray, argsArray, length } = this;
            for (let i = 0; i < length; i++) {
              switch (fnArray[i]) {
                case _util.OPS.paintInlineImageXObject:
                case _util.OPS.paintInlineImageXObjectGroup:
                case _util.OPS.paintImageMaskXObject:
                  const arg = argsArray[i][0];
                  if (!arg.cached && arg.data?.buffer instanceof ArrayBuffer) {
                    transfers.push(arg.data.buffer);
                  }
                  break;
              }
            }
            return transfers;
          }
          flush(lastChunk = false, separateAnnots = null) {
            this.optimizer.flush();
            const length = this.length;
            this._totalLength += length;
            this._streamSink.enqueue(
              {
                fnArray: this.fnArray,
                argsArray: this.argsArray,
                lastChunk,
                separateAnnots,
                length,
              },
              1,
              this._transfers
            );
            this.dependencies.clear();
            this.fnArray.length = 0;
            this.argsArray.length = 0;
            this.weight = 0;
            this.optimizer.reset();
          }
        }
        exports.OperatorList = OperatorList;

        /***/
      },
      /* 65 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.PDFImage = void 0;
        var _util = __w_pdfjs_require__(2);
        var _image_utils = __w_pdfjs_require__(28);
        var _base_stream = __w_pdfjs_require__(5);
        var _colorspace = __w_pdfjs_require__(12);
        var _decode_stream = __w_pdfjs_require__(18);
        var _image_resizer = __w_pdfjs_require__(62);
        var _jpeg_stream = __w_pdfjs_require__(26);
        var _jpx = __w_pdfjs_require__(30);
        var _primitives = __w_pdfjs_require__(4);
        function decodeAndClamp(value, addend, coefficient, max) {
          value = addend + value * coefficient;
          if (value < 0) {
            value = 0;
          } else if (value > max) {
            value = max;
          }
          return value;
        }
        function resizeImageMask(src, bpc, w1, h1, w2, h2) {
          const length = w2 * h2;
          let dest;
          if (bpc <= 8) {
            dest = new Uint8Array(length);
          } else if (bpc <= 16) {
            dest = new Uint16Array(length);
          } else {
            dest = new Uint32Array(length);
          }
          const xRatio = w1 / w2;
          const yRatio = h1 / h2;
          let i,
            j,
            py,
            newIndex = 0,
            oldIndex;
          const xScaled = new Uint16Array(w2);
          const w1Scanline = w1;
          for (i = 0; i < w2; i++) {
            xScaled[i] = Math.floor(i * xRatio);
          }
          for (i = 0; i < h2; i++) {
            py = Math.floor(i * yRatio) * w1Scanline;
            for (j = 0; j < w2; j++) {
              oldIndex = py + xScaled[j];
              dest[newIndex++] = src[oldIndex];
            }
          }
          return dest;
        }
        class PDFImage {
          constructor({
            xref,
            res,
            image,
            isInline = false,
            smask = null,
            mask = null,
            isMask = false,
            pdfFunctionFactory,
            localColorSpaceCache,
          }) {
            this.image = image;
            const dict = image.dict;
            const filter = dict.get("F", "Filter");
            let filterName;
            if (filter instanceof _primitives.Name) {
              filterName = filter.name;
            } else if (Array.isArray(filter)) {
              const filterZero = xref.fetchIfRef(filter[0]);
              if (filterZero instanceof _primitives.Name) {
                filterName = filterZero.name;
              }
            }
            switch (filterName) {
              case "JPXDecode":
                const jpxImage = new _jpx.JpxImage();
                jpxImage.parseImageProperties(image.stream);
                image.stream.reset();
                image.width = jpxImage.width;
                image.height = jpxImage.height;
                image.bitsPerComponent = jpxImage.bitsPerComponent;
                image.numComps = jpxImage.componentsCount;
                break;
              case "JBIG2Decode":
                image.bitsPerComponent = 1;
                image.numComps = 1;
                break;
            }
            let width = dict.get("W", "Width");
            let height = dict.get("H", "Height");
            if (
              Number.isInteger(image.width) &&
              image.width > 0 &&
              Number.isInteger(image.height) &&
              image.height > 0 &&
              (image.width !== width || image.height !== height)
            ) {
              (0, _util.warn)(
                "PDFImage - using the Width/Height of the image data, " +
                  "rather than the image dictionary."
              );
              width = image.width;
              height = image.height;
            }
            if (width < 1 || height < 1) {
              throw new _util.FormatError(
                `Invalid image width: ${width} or height: ${height}`
              );
            }
            this.width = width;
            this.height = height;
            this.interpolate = dict.get("I", "Interpolate");
            this.imageMask = dict.get("IM", "ImageMask") || false;
            this.matte = dict.get("Matte") || false;
            let bitsPerComponent = image.bitsPerComponent;
            if (!bitsPerComponent) {
              bitsPerComponent = dict.get("BPC", "BitsPerComponent");
              if (!bitsPerComponent) {
                if (this.imageMask) {
                  bitsPerComponent = 1;
                } else {
                  throw new _util.FormatError(
                    `Bits per component missing in image: ${this.imageMask}`
                  );
                }
              }
            }
            this.bpc = bitsPerComponent;
            if (!this.imageMask) {
              let colorSpace = dict.getRaw("CS") || dict.getRaw("ColorSpace");
              if (!colorSpace) {
                (0, _util.info)(
                  "JPX images (which do not require color spaces)"
                );
                switch (image.numComps) {
                  case 1:
                    colorSpace = _primitives.Name.get("DeviceGray");
                    break;
                  case 3:
                    colorSpace = _primitives.Name.get("DeviceRGB");
                    break;
                  case 4:
                    colorSpace = _primitives.Name.get("DeviceCMYK");
                    break;
                  default:
                    throw new Error(
                      `JPX images with ${image.numComps} color components not supported.`
                    );
                }
              }
              this.colorSpace = _colorspace.ColorSpace.parse({
                cs: colorSpace,
                xref,
                resources: isInline ? res : null,
                pdfFunctionFactory,
                localColorSpaceCache,
              });
              this.numComps = this.colorSpace.numComps;
            }
            this.decode = dict.getArray("D", "Decode");
            this.needsDecode = false;
            if (
              this.decode &&
              ((this.colorSpace &&
                !this.colorSpace.isDefaultDecode(
                  this.decode,
                  bitsPerComponent
                )) ||
                (isMask &&
                  !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1)))
            ) {
              this.needsDecode = true;
              const max = (1 << bitsPerComponent) - 1;
              this.decodeCoefficients = [];
              this.decodeAddends = [];
              const isIndexed = this.colorSpace?.name === "Indexed";
              for (let i = 0, j = 0; i < this.decode.length; i += 2, ++j) {
                const dmin = this.decode[i];
                const dmax = this.decode[i + 1];
                this.decodeCoefficients[j] = isIndexed
                  ? (dmax - dmin) / max
                  : dmax - dmin;
                this.decodeAddends[j] = isIndexed ? dmin : max * dmin;
              }
            }
            if (smask) {
              this.smask = new PDFImage({
                xref,
                res,
                image: smask,
                isInline,
                pdfFunctionFactory,
                localColorSpaceCache,
              });
            } else if (mask) {
              if (mask instanceof _base_stream.BaseStream) {
                const maskDict = mask.dict,
                  imageMask = maskDict.get("IM", "ImageMask");
                if (!imageMask) {
                  (0, _util.warn)(
                    "Ignoring /Mask in image without /ImageMask."
                  );
                } else {
                  this.mask = new PDFImage({
                    xref,
                    res,
                    image: mask,
                    isInline,
                    isMask: true,
                    pdfFunctionFactory,
                    localColorSpaceCache,
                  });
                }
              } else {
                this.mask = mask;
              }
            }
          }
          static async buildImage({
            xref,
            res,
            image,
            isInline = false,
            pdfFunctionFactory,
            localColorSpaceCache,
          }) {
            const imageData = image;
            let smaskData = null;
            let maskData = null;
            const smask = image.dict.get("SMask");
            const mask = image.dict.get("Mask");
            if (smask) {
              if (smask instanceof _base_stream.BaseStream) {
                smaskData = smask;
              } else {
                (0, _util.warn)("Unsupported /SMask format.");
              }
            } else if (mask) {
              if (
                mask instanceof _base_stream.BaseStream ||
                Array.isArray(mask)
              ) {
                maskData = mask;
              } else {
                (0, _util.warn)("Unsupported /Mask format.");
              }
            }
            return new PDFImage({
              xref,
              res,
              image: imageData,
              isInline,
              smask: smaskData,
              mask: maskData,
              pdfFunctionFactory,
              localColorSpaceCache,
            });
          }
          static createRawMask({
            imgArray,
            width,
            height,
            imageIsFromDecodeStream,
            inverseDecode,
            interpolate,
          }) {
            const computedLength = ((width + 7) >> 3) * height;
            const actualLength = imgArray.byteLength;
            const haveFullData = computedLength === actualLength;
            let data, i;
            if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {
              data = imgArray;
            } else if (!inverseDecode) {
              data = new Uint8Array(imgArray);
            } else {
              data = new Uint8Array(computedLength);
              data.set(imgArray);
              data.fill(0xff, actualLength);
            }
            if (inverseDecode) {
              for (i = 0; i < actualLength; i++) {
                data[i] ^= 0xff;
              }
            }
            return {
              data,
              width,
              height,
              interpolate,
            };
          }
          static async createMask({
            imgArray,
            width,
            height,
            imageIsFromDecodeStream,
            inverseDecode,
            interpolate,
            isOffscreenCanvasSupported = false,
          }) {
            const isSingleOpaquePixel =
              width === 1 &&
              height === 1 &&
              inverseDecode ===
                (imgArray.length === 0 || !!(imgArray[0] & 128));
            if (isSingleOpaquePixel) {
              return {
                isSingleOpaquePixel,
              };
            }
            if (isOffscreenCanvasSupported) {
              if (_image_resizer.ImageResizer.needsToBeResized(width, height)) {
                const data = new Uint8ClampedArray(width * height * 4);
                (0, _image_utils.convertBlackAndWhiteToRGBA)({
                  src: imgArray,
                  dest: data,
                  width,
                  height,
                  nonBlackColor: 0,
                  inverseDecode,
                });
                return _image_resizer.ImageResizer.createImage({
                  kind: _util.ImageKind.RGBA_32BPP,
                  data,
                  width,
                  height,
                  interpolate,
                });
              }
              const canvas = new OffscreenCanvas(width, height);
              const ctx = canvas.getContext("2d");
              const imgData = ctx.createImageData(width, height);
              (0, _image_utils.convertBlackAndWhiteToRGBA)({
                src: imgArray,
                dest: imgData.data,
                width,
                height,
                nonBlackColor: 0,
                inverseDecode,
              });
              ctx.putImageData(imgData, 0, 0);
              const bitmap = canvas.transferToImageBitmap();
              return {
                data: null,
                width,
                height,
                interpolate,
                bitmap,
              };
            }
            return this.createRawMask({
              imgArray,
              width,
              height,
              inverseDecode,
              imageIsFromDecodeStream,
              interpolate,
            });
          }
          get drawWidth() {
            return Math.max(
              this.width,
              this.smask?.width || 0,
              this.mask?.width || 0
            );
          }
          get drawHeight() {
            return Math.max(
              this.height,
              this.smask?.height || 0,
              this.mask?.height || 0
            );
          }
          decodeBuffer(buffer) {
            const bpc = this.bpc;
            const numComps = this.numComps;
            const decodeAddends = this.decodeAddends;
            const decodeCoefficients = this.decodeCoefficients;
            const max = (1 << bpc) - 1;
            let i, ii;
            if (bpc === 1) {
              for (i = 0, ii = buffer.length; i < ii; i++) {
                buffer[i] = +!buffer[i];
              }
              return;
            }
            let index = 0;
            for (i = 0, ii = this.width * this.height; i < ii; i++) {
              for (let j = 0; j < numComps; j++) {
                buffer[index] = decodeAndClamp(
                  buffer[index],
                  decodeAddends[j],
                  decodeCoefficients[j],
                  max
                );
                index++;
              }
            }
          }
          getComponents(buffer) {
            const bpc = this.bpc;
            if (bpc === 8) {
              return buffer;
            }
            const width = this.width;
            const height = this.height;
            const numComps = this.numComps;
            const length = width * height * numComps;
            let bufferPos = 0;
            let output;
            if (bpc <= 8) {
              output = new Uint8Array(length);
            } else if (bpc <= 16) {
              output = new Uint16Array(length);
            } else {
              output = new Uint32Array(length);
            }
            const rowComps = width * numComps;
            const max = (1 << bpc) - 1;
            let i = 0,
              ii,
              buf;
            if (bpc === 1) {
              let mask, loop1End, loop2End;
              for (let j = 0; j < height; j++) {
                loop1End = i + (rowComps & ~7);
                loop2End = i + rowComps;
                while (i < loop1End) {
                  buf = buffer[bufferPos++];
                  output[i] = (buf >> 7) & 1;
                  output[i + 1] = (buf >> 6) & 1;
                  output[i + 2] = (buf >> 5) & 1;
                  output[i + 3] = (buf >> 4) & 1;
                  output[i + 4] = (buf >> 3) & 1;
                  output[i + 5] = (buf >> 2) & 1;
                  output[i + 6] = (buf >> 1) & 1;
                  output[i + 7] = buf & 1;
                  i += 8;
                }
                if (i < loop2End) {
                  buf = buffer[bufferPos++];
                  mask = 128;
                  while (i < loop2End) {
                    output[i++] = +!!(buf & mask);
                    mask >>= 1;
                  }
                }
              }
            } else {
              let bits = 0;
              buf = 0;
              for (i = 0, ii = length; i < ii; ++i) {
                if (i % rowComps === 0) {
                  buf = 0;
                  bits = 0;
                }
                while (bits < bpc) {
                  buf = (buf << 8) | buffer[bufferPos++];
                  bits += 8;
                }
                const remainingBits = bits - bpc;
                let value = buf >> remainingBits;
                if (value < 0) {
                  value = 0;
                } else if (value > max) {
                  value = max;
                }
                output[i] = value;
                buf &= (1 << remainingBits) - 1;
                bits = remainingBits;
              }
            }
            return output;
          }
          fillOpacity(rgbaBuf, width, height, actualHeight, image) {
            const smask = this.smask;
            const mask = this.mask;
            let alphaBuf, sw, sh, i, ii, j;
            if (smask) {
              sw = smask.width;
              sh = smask.height;
              alphaBuf = new Uint8ClampedArray(sw * sh);
              smask.fillGrayBuffer(alphaBuf);
              if (sw !== width || sh !== height) {
                alphaBuf = resizeImageMask(
                  alphaBuf,
                  smask.bpc,
                  sw,
                  sh,
                  width,
                  height
                );
              }
            } else if (mask) {
              if (mask instanceof PDFImage) {
                sw = mask.width;
                sh = mask.height;
                alphaBuf = new Uint8ClampedArray(sw * sh);
                mask.numComps = 1;
                mask.fillGrayBuffer(alphaBuf);
                for (i = 0, ii = sw * sh; i < ii; ++i) {
                  alphaBuf[i] = 255 - alphaBuf[i];
                }
                if (sw !== width || sh !== height) {
                  alphaBuf = resizeImageMask(
                    alphaBuf,
                    mask.bpc,
                    sw,
                    sh,
                    width,
                    height
                  );
                }
              } else if (Array.isArray(mask)) {
                alphaBuf = new Uint8ClampedArray(width * height);
                const numComps = this.numComps;
                for (i = 0, ii = width * height; i < ii; ++i) {
                  let opacity = 0;
                  const imageOffset = i * numComps;
                  for (j = 0; j < numComps; ++j) {
                    const color = image[imageOffset + j];
                    const maskOffset = j * 2;
                    if (
                      color < mask[maskOffset] ||
                      color > mask[maskOffset + 1]
                    ) {
                      opacity = 255;
                      break;
                    }
                  }
                  alphaBuf[i] = opacity;
                }
              } else {
                throw new _util.FormatError("Unknown mask format.");
              }
            }
            if (alphaBuf) {
              for (
                i = 0, j = 3, ii = width * actualHeight;
                i < ii;
                ++i, j += 4
              ) {
                rgbaBuf[j] = alphaBuf[i];
              }
            } else {
              for (
                i = 0, j = 3, ii = width * actualHeight;
                i < ii;
                ++i, j += 4
              ) {
                rgbaBuf[j] = 255;
              }
            }
          }
          undoPreblend(buffer, width, height) {
            const matte = this.smask?.matte;
            if (!matte) {
              return;
            }
            const matteRgb = this.colorSpace.getRgb(matte, 0);
            const matteR = matteRgb[0];
            const matteG = matteRgb[1];
            const matteB = matteRgb[2];
            const length = width * height * 4;
            for (let i = 0; i < length; i += 4) {
              const alpha = buffer[i + 3];
              if (alpha === 0) {
                buffer[i] = 255;
                buffer[i + 1] = 255;
                buffer[i + 2] = 255;
                continue;
              }
              const k = 255 / alpha;
              buffer[i] = (buffer[i] - matteR) * k + matteR;
              buffer[i + 1] = (buffer[i + 1] - matteG) * k + matteG;
              buffer[i + 2] = (buffer[i + 2] - matteB) * k + matteB;
            }
          }
          async createImageData(
            forceRGBA = false,
            isOffscreenCanvasSupported = false
          ) {
            const drawWidth = this.drawWidth;
            const drawHeight = this.drawHeight;
            const imgData = {
              width: drawWidth,
              height: drawHeight,
              interpolate: this.interpolate,
              kind: 0,
              data: null,
            };
            const numComps = this.numComps;
            const originalWidth = this.width;
            const originalHeight = this.height;
            const bpc = this.bpc;
            const rowBytes = (originalWidth * numComps * bpc + 7) >> 3;
            const mustBeResized =
              isOffscreenCanvasSupported &&
              _image_resizer.ImageResizer.needsToBeResized(
                drawWidth,
                drawHeight
              );
            if (!forceRGBA) {
              let kind;
              if (this.colorSpace.name === "DeviceGray" && bpc === 1) {
                kind = _util.ImageKind.GRAYSCALE_1BPP;
              } else if (
                this.colorSpace.name === "DeviceRGB" &&
                bpc === 8 &&
                !this.needsDecode
              ) {
                kind = _util.ImageKind.RGB_24BPP;
              }
              if (
                kind &&
                !this.smask &&
                !this.mask &&
                drawWidth === originalWidth &&
                drawHeight === originalHeight
              ) {
                const data = this.getImageBytes(originalHeight * rowBytes, {});
                if (isOffscreenCanvasSupported) {
                  if (mustBeResized) {
                    return _image_resizer.ImageResizer.createImage(
                      {
                        data,
                        kind,
                        width: drawWidth,
                        height: drawHeight,
                        interpolate: this.interpolate,
                      },
                      this.needsDecode
                    );
                  }
                  return this.createBitmap(
                    kind,
                    originalWidth,
                    originalHeight,
                    data
                  );
                }
                imgData.kind = kind;
                imgData.data = data;
                if (this.needsDecode) {
                  (0, _util.assert)(
                    kind === _util.ImageKind.GRAYSCALE_1BPP,
                    "PDFImage.createImageData: The image must be grayscale."
                  );
                  const buffer = imgData.data;
                  for (let i = 0, ii = buffer.length; i < ii; i++) {
                    buffer[i] ^= 0xff;
                  }
                }
                return imgData;
              }
              if (
                this.image instanceof _jpeg_stream.JpegStream &&
                !this.smask &&
                !this.mask &&
                !this.needsDecode
              ) {
                let imageLength = originalHeight * rowBytes;
                if (isOffscreenCanvasSupported && !mustBeResized) {
                  let isHandled = false;
                  switch (this.colorSpace.name) {
                    case "DeviceGray":
                      imageLength *= 4;
                      isHandled = true;
                      break;
                    case "DeviceRGB":
                      imageLength = (imageLength / 3) * 4;
                      isHandled = true;
                      break;
                    case "DeviceCMYK":
                      isHandled = true;
                      break;
                  }
                  if (isHandled) {
                    const rgba = this.getImageBytes(imageLength, {
                      drawWidth,
                      drawHeight,
                      forceRGBA: true,
                    });
                    return this.createBitmap(
                      _util.ImageKind.RGBA_32BPP,
                      drawWidth,
                      drawHeight,
                      rgba
                    );
                  }
                } else {
                  switch (this.colorSpace.name) {
                    case "DeviceGray":
                      imageLength *= 3;
                    case "DeviceRGB":
                    case "DeviceCMYK":
                      imgData.kind = _util.ImageKind.RGB_24BPP;
                      imgData.data = this.getImageBytes(imageLength, {
                        drawWidth,
                        drawHeight,
                        forceRGB: true,
                      });
                      if (mustBeResized) {
                        return _image_resizer.ImageResizer.createImage(imgData);
                      }
                      return imgData;
                  }
                }
              }
            }
            const imgArray = this.getImageBytes(originalHeight * rowBytes, {
              internal: true,
            });
            const actualHeight =
              0 |
              (((imgArray.length / rowBytes) * drawHeight) / originalHeight);
            const comps = this.getComponents(imgArray);
            let alpha01, maybeUndoPreblend;
            let canvas, ctx, canvasImgData, data;
            if (isOffscreenCanvasSupported && !mustBeResized) {
              canvas = new OffscreenCanvas(drawWidth, drawHeight);
              ctx = canvas.getContext("2d");
              canvasImgData = ctx.createImageData(drawWidth, drawHeight);
              data = canvasImgData.data;
            }
            imgData.kind = _util.ImageKind.RGBA_32BPP;
            if (!forceRGBA && !this.smask && !this.mask) {
              if (!isOffscreenCanvasSupported || mustBeResized) {
                imgData.kind = _util.ImageKind.RGB_24BPP;
                data = new Uint8ClampedArray(drawWidth * drawHeight * 3);
                alpha01 = 0;
              } else {
                const arr = new Uint32Array(data.buffer);
                arr.fill(
                  _util.FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff
                );
                alpha01 = 1;
              }
              maybeUndoPreblend = false;
            } else {
              if (!isOffscreenCanvasSupported || mustBeResized) {
                data = new Uint8ClampedArray(drawWidth * drawHeight * 4);
              }
              alpha01 = 1;
              maybeUndoPreblend = true;
              this.fillOpacity(
                data,
                drawWidth,
                drawHeight,
                actualHeight,
                comps
              );
            }
            if (this.needsDecode) {
              this.decodeBuffer(comps);
            }
            this.colorSpace.fillRgb(
              data,
              originalWidth,
              originalHeight,
              drawWidth,
              drawHeight,
              actualHeight,
              bpc,
              comps,
              alpha01
            );
            if (maybeUndoPreblend) {
              this.undoPreblend(data, drawWidth, actualHeight);
            }
            if (isOffscreenCanvasSupported && !mustBeResized) {
              ctx.putImageData(canvasImgData, 0, 0);
              const bitmap = canvas.transferToImageBitmap();
              return {
                data: null,
                width: drawWidth,
                height: drawHeight,
                bitmap,
                interpolate: this.interpolate,
              };
            }
            imgData.data = data;
            if (mustBeResized) {
              return _image_resizer.ImageResizer.createImage(imgData);
            }
            return imgData;
          }
          fillGrayBuffer(buffer) {
            const numComps = this.numComps;
            if (numComps !== 1) {
              throw new _util.FormatError(
                `Reading gray scale from a color image: ${numComps}`
              );
            }
            const width = this.width;
            const height = this.height;
            const bpc = this.bpc;
            const rowBytes = (width * numComps * bpc + 7) >> 3;
            const imgArray = this.getImageBytes(height * rowBytes, {
              internal: true,
            });
            const comps = this.getComponents(imgArray);
            let i, length;
            if (bpc === 1) {
              length = width * height;
              if (this.needsDecode) {
                for (i = 0; i < length; ++i) {
                  buffer[i] = (comps[i] - 1) & 255;
                }
              } else {
                for (i = 0; i < length; ++i) {
                  buffer[i] = -comps[i] & 255;
                }
              }
              return;
            }
            if (this.needsDecode) {
              this.decodeBuffer(comps);
            }
            length = width * height;
            const scale = 255 / ((1 << bpc) - 1);
            for (i = 0; i < length; ++i) {
              buffer[i] = scale * comps[i];
            }
          }
          createBitmap(kind, width, height, src) {
            const canvas = new OffscreenCanvas(width, height);
            const ctx = canvas.getContext("2d");
            let imgData;
            if (kind === _util.ImageKind.RGBA_32BPP) {
              imgData = new ImageData(src, width, height);
            } else {
              imgData = ctx.createImageData(width, height);
              (0, _image_utils.convertToRGBA)({
                kind,
                src,
                dest: new Uint32Array(imgData.data.buffer),
                width,
                height,
                inverseDecode: this.needsDecode,
              });
            }
            ctx.putImageData(imgData, 0, 0);
            const bitmap = canvas.transferToImageBitmap();
            return {
              data: null,
              width,
              height,
              bitmap,
              interpolate: this.interpolate,
            };
          }
          getImageBytes(
            length,
            {
              drawWidth,
              drawHeight,
              forceRGBA = false,
              forceRGB = false,
              internal = false,
            }
          ) {
            this.image.reset();
            this.image.drawWidth = drawWidth || this.width;
            this.image.drawHeight = drawHeight || this.height;
            this.image.forceRGBA = !!forceRGBA;
            this.image.forceRGB = !!forceRGB;
            const imageBytes = this.image.getBytes(length);
            if (internal || this.image instanceof _decode_stream.DecodeStream) {
              return imageBytes;
            }
            (0, _util.assert)(
              imageBytes instanceof Uint8Array,
              'PDFImage.getImageBytes: Unsupported "imageBytes" type.'
            );
            return new Uint8Array(imageBytes);
          }
        }
        exports.PDFImage = PDFImage;

        /***/
      },
      /* 66 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.Catalog = void 0;
        var _core_utils = __w_pdfjs_require__(3);
        var _util = __w_pdfjs_require__(2);
        var _primitives = __w_pdfjs_require__(4);
        var _name_number_tree = __w_pdfjs_require__(67);
        var _base_stream = __w_pdfjs_require__(5);
        var _cleanup_helper = __w_pdfjs_require__(68);
        var _colorspace = __w_pdfjs_require__(12);
        var _file_spec = __w_pdfjs_require__(69);
        var _image_utils = __w_pdfjs_require__(59);
        var _metadata_parser = __w_pdfjs_require__(70);
        var _struct_tree = __w_pdfjs_require__(72);
        function fetchDestination(dest) {
          if (dest instanceof _primitives.Dict) {
            dest = dest.get("D");
          }
          return Array.isArray(dest) ? dest : null;
        }
        class Catalog {
          constructor(pdfManager, xref) {
            this.pdfManager = pdfManager;
            this.xref = xref;
            this._catDict = xref.getCatalogObj();
            if (!(this._catDict instanceof _primitives.Dict)) {
              throw new _util.FormatError(
                "Catalog object is not a dictionary."
              );
            }
            this.toplevelPagesDict;
            this._actualNumPages = null;
            this.fontCache = new _primitives.RefSetCache();
            this.builtInCMapCache = new Map();
            this.standardFontDataCache = new Map();
            this.globalImageCache = new _image_utils.GlobalImageCache();
            this.pageKidsCountCache = new _primitives.RefSetCache();
            this.pageIndexCache = new _primitives.RefSetCache();
            this.nonBlendModesSet = new _primitives.RefSet();
            this.systemFontCache = new Map();
          }
          cloneDict() {
            return this._catDict.clone();
          }
          get version() {
            const version = this._catDict.get("Version");
            if (version instanceof _primitives.Name) {
              if (_core_utils.PDF_VERSION_REGEXP.test(version.name)) {
                return (0, _util.shadow)(this, "version", version.name);
              }
              (0, _util.warn)(`Invalid PDF catalog version: ${version.name}`);
            }
            return (0, _util.shadow)(this, "version", null);
          }
          get lang() {
            const lang = this._catDict.get("Lang");
            return (0, _util.shadow)(
              this,
              "lang",
              typeof lang === "string"
                ? (0, _util.stringToPDFString)(lang)
                : null
            );
          }
          get needsRendering() {
            const needsRendering = this._catDict.get("NeedsRendering");
            return (0, _util.shadow)(
              this,
              "needsRendering",
              typeof needsRendering === "boolean" ? needsRendering : false
            );
          }
          get collection() {
            let collection = null;
            try {
              const obj = this._catDict.get("Collection");
              if (obj instanceof _primitives.Dict && obj.size > 0) {
                collection = obj;
              }
            } catch (ex) {
              if (ex instanceof _core_utils.MissingDataException) {
                throw ex;
              }
              (0, _util.info)(
                "Cannot fetch Collection entry; assuming no collection is present."
              );
            }
            return (0, _util.shadow)(this, "collection", collection);
          }
          get acroForm() {
            let acroForm = null;
            try {
              const obj = this._catDict.get("AcroForm");
              if (obj instanceof _primitives.Dict && obj.size > 0) {
                acroForm = obj;
              }
            } catch (ex) {
              if (ex instanceof _core_utils.MissingDataException) {
                throw ex;
              }
              (0, _util.info)(
                "Cannot fetch AcroForm entry; assuming no forms are present."
              );
            }
            return (0, _util.shadow)(this, "acroForm", acroForm);
          }
          get acroFormRef() {
            const value = this._catDict.getRaw("AcroForm");
            return (0, _util.shadow)(
              this,
              "acroFormRef",
              value instanceof _primitives.Ref ? value : null
            );
          }
          get metadata() {
            const streamRef = this._catDict.getRaw("Metadata");
            if (!(streamRef instanceof _primitives.Ref)) {
              return (0, _util.shadow)(this, "metadata", null);
            }
            let metadata = null;
            try {
              const stream = this.xref.fetch(
                streamRef,
                !this.xref.encrypt?.encryptMetadata
              );
              if (
                stream instanceof _base_stream.BaseStream &&
                stream.dict instanceof _primitives.Dict
              ) {
                const type = stream.dict.get("Type");
                const subtype = stream.dict.get("Subtype");
                if (
                  (0, _primitives.isName)(type, "Metadata") &&
                  (0, _primitives.isName)(subtype, "XML")
                ) {
                  const data = (0, _util.stringToUTF8String)(
                    stream.getString()
                  );
                  if (data) {
                    metadata = new _metadata_parser.MetadataParser(data)
                      .serializable;
                  }
                }
              }
            } catch (ex) {
              if (ex instanceof _core_utils.MissingDataException) {
                throw ex;
              }
              (0, _util.info)(`Skipping invalid Metadata: "${ex}".`);
            }
            return (0, _util.shadow)(this, "metadata", metadata);
          }
          get markInfo() {
            let markInfo = null;
            try {
              markInfo = this._readMarkInfo();
            } catch (ex) {
              if (ex instanceof _core_utils.MissingDataException) {
                throw ex;
              }
              (0, _util.warn)("Unable to read mark info.");
            }
            return (0, _util.shadow)(this, "markInfo", markInfo);
          }
          _readMarkInfo() {
            const obj = this._catDict.get("MarkInfo");
            if (!(obj instanceof _primitives.Dict)) {
              return null;
            }
            const markInfo = {
              Marked: false,
              UserProperties: false,
              Suspects: false,
            };
            for (const key in markInfo) {
              const value = obj.get(key);
              if (typeof value === "boolean") {
                markInfo[key] = value;
              }
            }
            return markInfo;
          }
          get structTreeRoot() {
            let structTree = null;
            try {
              structTree = this._readStructTreeRoot();
            } catch (ex) {
              if (ex instanceof _core_utils.MissingDataException) {
                throw ex;
              }
              (0, _util.warn)("Unable read to structTreeRoot info.");
            }
            return (0, _util.shadow)(this, "structTreeRoot", structTree);
          }
          _readStructTreeRoot() {
            const rawObj = this._catDict.getRaw("StructTreeRoot");
            const obj = this.xref.fetchIfRef(rawObj);
            if (!(obj instanceof _primitives.Dict)) {
              return null;
            }
            const root = new _struct_tree.StructTreeRoot(obj, rawObj);
            root.init();
            return root;
          }
          get toplevelPagesDict() {
            const pagesObj = this._catDict.get("Pages");
            if (!(pagesObj instanceof _primitives.Dict)) {
              throw new _util.FormatError(
                "Invalid top-level pages dictionary."
              );
            }
            return (0, _util.shadow)(this, "toplevelPagesDict", pagesObj);
          }
          get documentOutline() {
            let obj = null;
            try {
              obj = this._readDocumentOutline();
            } catch (ex) {
              if (ex instanceof _core_utils.MissingDataException) {
                throw ex;
              }
              (0, _util.warn)("Unable to read document outline.");
            }
            return (0, _util.shadow)(this, "documentOutline", obj);
          }
          _readDocumentOutline() {
            let obj = this._catDict.get("Outlines");
            if (!(obj instanceof _primitives.Dict)) {
              return null;
            }
            obj = obj.getRaw("First");
            if (!(obj instanceof _primitives.Ref)) {
              return null;
            }
            const root = {
              items: [],
            };
            const queue = [
              {
                obj,
                parent: root,
              },
            ];
            const processed = new _primitives.RefSet();
            processed.put(obj);
            const xref = this.xref,
              blackColor = new Uint8ClampedArray(3);
            while (queue.length > 0) {
              const i = queue.shift();
              const outlineDict = xref.fetchIfRef(i.obj);
              if (outlineDict === null) {
                continue;
              }
              if (!outlineDict.has("Title")) {
                throw new _util.FormatError(
                  "Invalid outline item encountered."
                );
              }
              const data = {
                url: null,
                dest: null,
                action: null,
              };
              Catalog.parseDestDictionary({
                destDict: outlineDict,
                resultObj: data,
                docBaseUrl: this.baseUrl,
                docAttachments: this.attachments,
              });
              const title = outlineDict.get("Title");
              const flags = outlineDict.get("F") || 0;
              const color = outlineDict.getArray("C");
              const count = outlineDict.get("Count");
              let rgbColor = blackColor;
              if (
                Array.isArray(color) &&
                color.length === 3 &&
                (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)
              ) {
                rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(
                  color,
                  0
                );
              }
              const outlineItem = {
                action: data.action,
                attachment: data.attachment,
                dest: data.dest,
                url: data.url,
                unsafeUrl: data.unsafeUrl,
                newWindow: data.newWindow,
                setOCGState: data.setOCGState,
                title: (0, _util.stringToPDFString)(title),
                color: rgbColor,
                count: Number.isInteger(count) ? count : undefined,
                bold: !!(flags & 2),
                italic: !!(flags & 1),
                items: [],
              };
              i.parent.items.push(outlineItem);
              obj = outlineDict.getRaw("First");
              if (obj instanceof _primitives.Ref && !processed.has(obj)) {
                queue.push({
                  obj,
                  parent: outlineItem,
                });
                processed.put(obj);
              }
              obj = outlineDict.getRaw("Next");
              if (obj instanceof _primitives.Ref && !processed.has(obj)) {
                queue.push({
                  obj,
                  parent: i.parent,
                });
                processed.put(obj);
              }
            }
            return root.items.length > 0 ? root.items : null;
          }
          get permissions() {
            let permissions = null;
            try {
              permissions = this._readPermissions();
            } catch (ex) {
              if (ex instanceof _core_utils.MissingDataException) {
                throw ex;
              }
              (0, _util.warn)("Unable to read permissions.");
            }
            return (0, _util.shadow)(this, "permissions", permissions);
          }
          _readPermissions() {
            const encrypt = this.xref.trailer.get("Encrypt");
            if (!(encrypt instanceof _primitives.Dict)) {
              return null;
            }
            let flags = encrypt.get("P");
            if (typeof flags !== "number") {
              return null;
            }
            flags += 2 ** 32;
            const permissions = [];
            for (const key in _util.PermissionFlag) {
              const value = _util.PermissionFlag[key];
              if (flags & value) {
                permissions.push(value);
              }
            }
            return permissions;
          }
          get optionalContentConfig() {
            let config = null;
            try {
              const properties = this._catDict.get("OCProperties");
              if (!properties) {
                return (0, _util.shadow)(this, "optionalContentConfig", null);
              }
              const defaultConfig = properties.get("D");
              if (!defaultConfig) {
                return (0, _util.shadow)(this, "optionalContentConfig", null);
              }
              const groupsData = properties.get("OCGs");
              if (!Array.isArray(groupsData)) {
                return (0, _util.shadow)(this, "optionalContentConfig", null);
              }
              const groups = [];
              const groupRefs = [];
              for (const groupRef of groupsData) {
                if (!(groupRef instanceof _primitives.Ref)) {
                  continue;
                }
                groupRefs.push(groupRef);
                const group = this.xref.fetchIfRef(groupRef);
                groups.push({
                  id: groupRef.toString(),
                  name:
                    typeof group.get("Name") === "string"
                      ? (0, _util.stringToPDFString)(group.get("Name"))
                      : null,
                  intent:
                    typeof group.get("Intent") === "string"
                      ? (0, _util.stringToPDFString)(group.get("Intent"))
                      : null,
                });
              }
              config = this._readOptionalContentConfig(
                defaultConfig,
                groupRefs
              );
              config.groups = groups;
            } catch (ex) {
              if (ex instanceof _core_utils.MissingDataException) {
                throw ex;
              }
              (0, _util.warn)(`Unable to read optional content config: ${ex}`);
            }
            return (0, _util.shadow)(this, "optionalContentConfig", config);
          }
          _readOptionalContentConfig(config, contentGroupRefs) {
            function parseOnOff(refs) {
              const onParsed = [];
              if (Array.isArray(refs)) {
                for (const value of refs) {
                  if (!(value instanceof _primitives.Ref)) {
                    continue;
                  }
                  if (contentGroupRefs.includes(value)) {
                    onParsed.push(value.toString());
                  }
                }
              }
              return onParsed;
            }
            function parseOrder(refs, nestedLevels = 0) {
              if (!Array.isArray(refs)) {
                return null;
              }
              const order = [];
              for (const value of refs) {
                if (
                  value instanceof _primitives.Ref &&
                  contentGroupRefs.includes(value)
                ) {
                  parsedOrderRefs.put(value);
                  order.push(value.toString());
                  continue;
                }
                const nestedOrder = parseNestedOrder(value, nestedLevels);
                if (nestedOrder) {
                  order.push(nestedOrder);
                }
              }
              if (nestedLevels > 0) {
                return order;
              }
              const hiddenGroups = [];
              for (const groupRef of contentGroupRefs) {
                if (parsedOrderRefs.has(groupRef)) {
                  continue;
                }
                hiddenGroups.push(groupRef.toString());
              }
              if (hiddenGroups.length) {
                order.push({
                  name: null,
                  order: hiddenGroups,
                });
              }
              return order;
            }
            function parseNestedOrder(ref, nestedLevels) {
              if (++nestedLevels > MAX_NESTED_LEVELS) {
                (0, _util.warn)(
                  "parseNestedOrder - reached MAX_NESTED_LEVELS."
                );
                return null;
              }
              const value = xref.fetchIfRef(ref);
              if (!Array.isArray(value)) {
                return null;
              }
              const nestedName = xref.fetchIfRef(value[0]);
              if (typeof nestedName !== "string") {
                return null;
              }
              const nestedOrder = parseOrder(value.slice(1), nestedLevels);
              if (!nestedOrder || !nestedOrder.length) {
                return null;
              }
              return {
                name: (0, _util.stringToPDFString)(nestedName),
                order: nestedOrder,
              };
            }
            const xref = this.xref,
              parsedOrderRefs = new _primitives.RefSet(),
              MAX_NESTED_LEVELS = 10;
            return {
              name:
                typeof config.get("Name") === "string"
                  ? (0, _util.stringToPDFString)(config.get("Name"))
                  : null,
              creator:
                typeof config.get("Creator") === "string"
                  ? (0, _util.stringToPDFString)(config.get("Creator"))
                  : null,
              baseState:
                config.get("BaseState") instanceof _primitives.Name
                  ? config.get("BaseState").name
                  : null,
              on: parseOnOff(config.get("ON")),
              off: parseOnOff(config.get("OFF")),
              order: parseOrder(config.get("Order")),
              groups: null,
            };
          }
          setActualNumPages(num = null) {
            this._actualNumPages = num;
          }
          get hasActualNumPages() {
            return this._actualNumPages !== null;
          }
          get _pagesCount() {
            const obj = this.toplevelPagesDict.get("Count");
            if (!Number.isInteger(obj)) {
              throw new _util.FormatError(
                "Page count in top-level pages dictionary is not an integer."
              );
            }
            return (0, _util.shadow)(this, "_pagesCount", obj);
          }
          get numPages() {
            return this.hasActualNumPages
              ? this._actualNumPages
              : this._pagesCount;
          }
          get destinations() {
            const obj = this._readDests(),
              dests = Object.create(null);
            if (obj instanceof _name_number_tree.NameTree) {
              for (const [key, value] of obj.getAll()) {
                const dest = fetchDestination(value);
                if (dest) {
                  dests[(0, _util.stringToPDFString)(key)] = dest;
                }
              }
            } else if (obj instanceof _primitives.Dict) {
              obj.forEach(function (key, value) {
                const dest = fetchDestination(value);
                if (dest) {
                  dests[key] = dest;
                }
              });
            }
            return (0, _util.shadow)(this, "destinations", dests);
          }
          getDestination(id) {
            const obj = this._readDests();
            if (obj instanceof _name_number_tree.NameTree) {
              const dest = fetchDestination(obj.get(id));
              if (dest) {
                return dest;
              }
              const allDest = this.destinations[id];
              if (allDest) {
                (0, _util.warn)(
                  `Found "${id}" at an incorrect position in the NameTree.`
                );
                return allDest;
              }
            } else if (obj instanceof _primitives.Dict) {
              const dest = fetchDestination(obj.get(id));
              if (dest) {
                return dest;
              }
            }
            return null;
          }
          _readDests() {
            const obj = this._catDict.get("Names");
            if (obj?.has("Dests")) {
              return new _name_number_tree.NameTree(
                obj.getRaw("Dests"),
                this.xref
              );
            } else if (this._catDict.has("Dests")) {
              return this._catDict.get("Dests");
            }
            return undefined;
          }
          get pageLabels() {
            let obj = null;
            try {
              obj = this._readPageLabels();
            } catch (ex) {
              if (ex instanceof _core_utils.MissingDataException) {
                throw ex;
              }
              (0, _util.warn)("Unable to read page labels.");
            }
            return (0, _util.shadow)(this, "pageLabels", obj);
          }
          _readPageLabels() {
            const obj = this._catDict.getRaw("PageLabels");
            if (!obj) {
              return null;
            }
            const pageLabels = new Array(this.numPages);
            let style = null,
              prefix = "";
            const numberTree = new _name_number_tree.NumberTree(obj, this.xref);
            const nums = numberTree.getAll();
            let currentLabel = "",
              currentIndex = 1;
            for (let i = 0, ii = this.numPages; i < ii; i++) {
              const labelDict = nums.get(i);
              if (labelDict !== undefined) {
                if (!(labelDict instanceof _primitives.Dict)) {
                  throw new _util.FormatError("PageLabel is not a dictionary.");
                }
                if (
                  labelDict.has("Type") &&
                  !(0, _primitives.isName)(labelDict.get("Type"), "PageLabel")
                ) {
                  throw new _util.FormatError(
                    "Invalid type in PageLabel dictionary."
                  );
                }
                if (labelDict.has("S")) {
                  const s = labelDict.get("S");
                  if (!(s instanceof _primitives.Name)) {
                    throw new _util.FormatError(
                      "Invalid style in PageLabel dictionary."
                    );
                  }
                  style = s.name;
                } else {
                  style = null;
                }
                if (labelDict.has("P")) {
                  const p = labelDict.get("P");
                  if (typeof p !== "string") {
                    throw new _util.FormatError(
                      "Invalid prefix in PageLabel dictionary."
                    );
                  }
                  prefix = (0, _util.stringToPDFString)(p);
                } else {
                  prefix = "";
                }
                if (labelDict.has("St")) {
                  const st = labelDict.get("St");
                  if (!(Number.isInteger(st) && st >= 1)) {
                    throw new _util.FormatError(
                      "Invalid start in PageLabel dictionary."
                    );
                  }
                  currentIndex = st;
                } else {
                  currentIndex = 1;
                }
              }
              switch (style) {
                case "D":
                  currentLabel = currentIndex;
                  break;
                case "R":
                case "r":
                  currentLabel = (0, _core_utils.toRomanNumerals)(
                    currentIndex,
                    style === "r"
                  );
                  break;
                case "A":
                case "a":
                  const LIMIT = 26;
                  const A_UPPER_CASE = 0x41,
                    A_LOWER_CASE = 0x61;
                  const baseCharCode =
                    style === "a" ? A_LOWER_CASE : A_UPPER_CASE;
                  const letterIndex = currentIndex - 1;
                  const character = String.fromCharCode(
                    baseCharCode + (letterIndex % LIMIT)
                  );
                  currentLabel = character.repeat(
                    Math.floor(letterIndex / LIMIT) + 1
                  );
                  break;
                default:
                  if (style) {
                    throw new _util.FormatError(
                      `Invalid style "${style}" in PageLabel dictionary.`
                    );
                  }
                  currentLabel = "";
              }
              pageLabels[i] = prefix + currentLabel;
              currentIndex++;
            }
            return pageLabels;
          }
          get pageLayout() {
            const obj = this._catDict.get("PageLayout");
            let pageLayout = "";
            if (obj instanceof _primitives.Name) {
              switch (obj.name) {
                case "SinglePage":
                case "OneColumn":
                case "TwoColumnLeft":
                case "TwoColumnRight":
                case "TwoPageLeft":
                case "TwoPageRight":
                  pageLayout = obj.name;
              }
            }
            return (0, _util.shadow)(this, "pageLayout", pageLayout);
          }
          get pageMode() {
            const obj = this._catDict.get("PageMode");
            let pageMode = "UseNone";
            if (obj instanceof _primitives.Name) {
              switch (obj.name) {
                case "UseNone":
                case "UseOutlines":
                case "UseThumbs":
                case "FullScreen":
                case "UseOC":
                case "UseAttachments":
                  pageMode = obj.name;
              }
            }
            return (0, _util.shadow)(this, "pageMode", pageMode);
          }
          get viewerPreferences() {
            const obj = this._catDict.get("ViewerPreferences");
            if (!(obj instanceof _primitives.Dict)) {
              return (0, _util.shadow)(this, "viewerPreferences", null);
            }
            let prefs = null;
            for (const key of obj.getKeys()) {
              const value = obj.get(key);
              let prefValue;
              switch (key) {
                case "HideToolbar":
                case "HideMenubar":
                case "HideWindowUI":
                case "FitWindow":
                case "CenterWindow":
                case "DisplayDocTitle":
                case "PickTrayByPDFSize":
                  if (typeof value === "boolean") {
                    prefValue = value;
                  }
                  break;
                case "NonFullScreenPageMode":
                  if (value instanceof _primitives.Name) {
                    switch (value.name) {
                      case "UseNone":
                      case "UseOutlines":
                      case "UseThumbs":
                      case "UseOC":
                        prefValue = value.name;
                        break;
                      default:
                        prefValue = "UseNone";
                    }
                  }
                  break;
                case "Direction":
                  if (value instanceof _primitives.Name) {
                    switch (value.name) {
                      case "L2R":
                      case "R2L":
                        prefValue = value.name;
                        break;
                      default:
                        prefValue = "L2R";
                    }
                  }
                  break;
                case "ViewArea":
                case "ViewClip":
                case "PrintArea":
                case "PrintClip":
                  if (value instanceof _primitives.Name) {
                    switch (value.name) {
                      case "MediaBox":
                      case "CropBox":
                      case "BleedBox":
                      case "TrimBox":
                      case "ArtBox":
                        prefValue = value.name;
                        break;
                      default:
                        prefValue = "CropBox";
                    }
                  }
                  break;
                case "PrintScaling":
                  if (value instanceof _primitives.Name) {
                    switch (value.name) {
                      case "None":
                      case "AppDefault":
                        prefValue = value.name;
                        break;
                      default:
                        prefValue = "AppDefault";
                    }
                  }
                  break;
                case "Duplex":
                  if (value instanceof _primitives.Name) {
                    switch (value.name) {
                      case "Simplex":
                      case "DuplexFlipShortEdge":
                      case "DuplexFlipLongEdge":
                        prefValue = value.name;
                        break;
                      default:
                        prefValue = "None";
                    }
                  }
                  break;
                case "PrintPageRange":
                  if (Array.isArray(value) && value.length % 2 === 0) {
                    const isValid = value.every((page, i, arr) => {
                      return (
                        Number.isInteger(page) &&
                        page > 0 &&
                        (i === 0 || page >= arr[i - 1]) &&
                        page <= this.numPages
                      );
                    });
                    if (isValid) {
                      prefValue = value;
                    }
                  }
                  break;
                case "NumCopies":
                  if (Number.isInteger(value) && value > 0) {
                    prefValue = value;
                  }
                  break;
                default:
                  (0, _util.warn)(
                    `Ignoring non-standard key in ViewerPreferences: ${key}.`
                  );
                  continue;
              }
              if (prefValue === undefined) {
                (0, _util.warn)(
                  `Bad value, for key "${key}", in ViewerPreferences: ${value}.`
                );
                continue;
              }
              if (!prefs) {
                prefs = Object.create(null);
              }
              prefs[key] = prefValue;
            }
            return (0, _util.shadow)(this, "viewerPreferences", prefs);
          }
          get openAction() {
            const obj = this._catDict.get("OpenAction");
            const openAction = Object.create(null);
            if (obj instanceof _primitives.Dict) {
              const destDict = new _primitives.Dict(this.xref);
              destDict.set("A", obj);
              const resultObj = {
                url: null,
                dest: null,
                action: null,
              };
              Catalog.parseDestDictionary({
                destDict,
                resultObj,
              });
              if (Array.isArray(resultObj.dest)) {
                openAction.dest = resultObj.dest;
              } else if (resultObj.action) {
                openAction.action = resultObj.action;
              }
            } else if (Array.isArray(obj)) {
              openAction.dest = obj;
            }
            return (0, _util.shadow)(
              this,
              "openAction",
              (0, _util.objectSize)(openAction) > 0 ? openAction : null
            );
          }
          get attachments() {
            const obj = this._catDict.get("Names");
            let attachments = null;
            if (obj instanceof _primitives.Dict && obj.has("EmbeddedFiles")) {
              const nameTree = new _name_number_tree.NameTree(
                obj.getRaw("EmbeddedFiles"),
                this.xref
              );
              for (const [key, value] of nameTree.getAll()) {
                const fs = new _file_spec.FileSpec(value, this.xref);
                if (!attachments) {
                  attachments = Object.create(null);
                }
                attachments[(0, _util.stringToPDFString)(key)] =
                  fs.serializable;
              }
            }
            return (0, _util.shadow)(this, "attachments", attachments);
          }
          get xfaImages() {
            const obj = this._catDict.get("Names");
            let xfaImages = null;
            if (obj instanceof _primitives.Dict && obj.has("XFAImages")) {
              const nameTree = new _name_number_tree.NameTree(
                obj.getRaw("XFAImages"),
                this.xref
              );
              for (const [key, value] of nameTree.getAll()) {
                if (!xfaImages) {
                  xfaImages = new _primitives.Dict(this.xref);
                }
                xfaImages.set((0, _util.stringToPDFString)(key), value);
              }
            }
            return (0, _util.shadow)(this, "xfaImages", xfaImages);
          }
          _collectJavaScript() {
            const obj = this._catDict.get("Names");
            let javaScript = null;
            function appendIfJavaScriptDict(name, jsDict) {
              if (!(jsDict instanceof _primitives.Dict)) {
                return;
              }
              if (!(0, _primitives.isName)(jsDict.get("S"), "JavaScript")) {
                return;
              }
              let js = jsDict.get("JS");
              if (js instanceof _base_stream.BaseStream) {
                js = js.getString();
              } else if (typeof js !== "string") {
                return;
              }
              js = (0, _util.stringToPDFString)(js).replaceAll("\x00", "");
              if (js) {
                (javaScript ||= new Map()).set(name, js);
              }
            }
            if (obj instanceof _primitives.Dict && obj.has("JavaScript")) {
              const nameTree = new _name_number_tree.NameTree(
                obj.getRaw("JavaScript"),
                this.xref
              );
              for (const [key, value] of nameTree.getAll()) {
                appendIfJavaScriptDict(
                  (0, _util.stringToPDFString)(key),
                  value
                );
              }
            }
            const openAction = this._catDict.get("OpenAction");
            if (openAction) {
              appendIfJavaScriptDict("OpenAction", openAction);
            }
            return javaScript;
          }
          get jsActions() {
            const javaScript = this._collectJavaScript();
            let actions = (0, _core_utils.collectActions)(
              this.xref,
              this._catDict,
              _util.DocumentActionEventType
            );
            if (javaScript) {
              actions ||= Object.create(null);
              for (const [key, val] of javaScript) {
                if (key in actions) {
                  actions[key].push(val);
                } else {
                  actions[key] = [val];
                }
              }
            }
            return (0, _util.shadow)(this, "jsActions", actions);
          }
          async fontFallback(id, handler) {
            const translatedFonts = await Promise.all(this.fontCache);
            for (const translatedFont of translatedFonts) {
              if (translatedFont.loadedName === id) {
                translatedFont.fallback(handler);
                return;
              }
            }
          }
          async cleanup(manuallyTriggered = false) {
            (0, _cleanup_helper.clearGlobalCaches)();
            this.globalImageCache.clear(manuallyTriggered);
            this.pageKidsCountCache.clear();
            this.pageIndexCache.clear();
            this.nonBlendModesSet.clear();
            const translatedFonts = await Promise.all(this.fontCache);
            for (const { dict } of translatedFonts) {
              delete dict.cacheKey;
            }
            this.fontCache.clear();
            this.builtInCMapCache.clear();
            this.standardFontDataCache.clear();
            this.systemFontCache.clear();
          }
          async getPageDict(pageIndex) {
            const nodesToVisit = [this.toplevelPagesDict];
            const visitedNodes = new _primitives.RefSet();
            const pagesRef = this._catDict.getRaw("Pages");
            if (pagesRef instanceof _primitives.Ref) {
              visitedNodes.put(pagesRef);
            }
            const xref = this.xref,
              pageKidsCountCache = this.pageKidsCountCache,
              pageIndexCache = this.pageIndexCache;
            let currentPageIndex = 0;
            while (nodesToVisit.length) {
              const currentNode = nodesToVisit.pop();
              if (currentNode instanceof _primitives.Ref) {
                const count = pageKidsCountCache.get(currentNode);
                if (count >= 0 && currentPageIndex + count <= pageIndex) {
                  currentPageIndex += count;
                  continue;
                }
                if (visitedNodes.has(currentNode)) {
                  throw new _util.FormatError(
                    "Pages tree contains circular reference."
                  );
                }
                visitedNodes.put(currentNode);
                const obj = await xref.fetchAsync(currentNode);
                if (obj instanceof _primitives.Dict) {
                  let type = obj.getRaw("Type");
                  if (type instanceof _primitives.Ref) {
                    type = await xref.fetchAsync(type);
                  }
                  if (
                    (0, _primitives.isName)(type, "Page") ||
                    !obj.has("Kids")
                  ) {
                    if (!pageKidsCountCache.has(currentNode)) {
                      pageKidsCountCache.put(currentNode, 1);
                    }
                    if (!pageIndexCache.has(currentNode)) {
                      pageIndexCache.put(currentNode, currentPageIndex);
                    }
                    if (currentPageIndex === pageIndex) {
                      return [obj, currentNode];
                    }
                    currentPageIndex++;
                    continue;
                  }
                }
                nodesToVisit.push(obj);
                continue;
              }
              if (!(currentNode instanceof _primitives.Dict)) {
                throw new _util.FormatError(
                  "Page dictionary kid reference points to wrong type of object."
                );
              }
              const { objId } = currentNode;
              let count = currentNode.getRaw("Count");
              if (count instanceof _primitives.Ref) {
                count = await xref.fetchAsync(count);
              }
              if (Number.isInteger(count) && count >= 0) {
                if (objId && !pageKidsCountCache.has(objId)) {
                  pageKidsCountCache.put(objId, count);
                }
                if (currentPageIndex + count <= pageIndex) {
                  currentPageIndex += count;
                  continue;
                }
              }
              let kids = currentNode.getRaw("Kids");
              if (kids instanceof _primitives.Ref) {
                kids = await xref.fetchAsync(kids);
              }
              if (!Array.isArray(kids)) {
                let type = currentNode.getRaw("Type");
                if (type instanceof _primitives.Ref) {
                  type = await xref.fetchAsync(type);
                }
                if (
                  (0, _primitives.isName)(type, "Page") ||
                  !currentNode.has("Kids")
                ) {
                  if (currentPageIndex === pageIndex) {
                    return [currentNode, null];
                  }
                  currentPageIndex++;
                  continue;
                }
                throw new _util.FormatError(
                  "Page dictionary kids object is not an array."
                );
              }
              for (let last = kids.length - 1; last >= 0; last--) {
                nodesToVisit.push(kids[last]);
              }
            }
            throw new Error(`Page index ${pageIndex} not found.`);
          }
          async getAllPageDicts(recoveryMode = false) {
            const { ignoreErrors } = this.pdfManager.evaluatorOptions;
            const queue = [
              {
                currentNode: this.toplevelPagesDict,
                posInKids: 0,
              },
            ];
            const visitedNodes = new _primitives.RefSet();
            const pagesRef = this._catDict.getRaw("Pages");
            if (pagesRef instanceof _primitives.Ref) {
              visitedNodes.put(pagesRef);
            }
            const map = new Map(),
              xref = this.xref,
              pageIndexCache = this.pageIndexCache;
            let pageIndex = 0;
            function addPageDict(pageDict, pageRef) {
              if (pageRef && !pageIndexCache.has(pageRef)) {
                pageIndexCache.put(pageRef, pageIndex);
              }
              map.set(pageIndex++, [pageDict, pageRef]);
            }
            function addPageError(error) {
              if (
                error instanceof _core_utils.XRefEntryException &&
                !recoveryMode
              ) {
                throw error;
              }
              if (recoveryMode && ignoreErrors && pageIndex === 0) {
                (0, _util.warn)(
                  `getAllPageDicts - Skipping invalid first page: "${error}".`
                );
                error = _primitives.Dict.empty;
              }
              map.set(pageIndex++, [error, null]);
            }
            while (queue.length > 0) {
              const queueItem = queue.at(-1);
              const { currentNode, posInKids } = queueItem;
              let kids = currentNode.getRaw("Kids");
              if (kids instanceof _primitives.Ref) {
                try {
                  kids = await xref.fetchAsync(kids);
                } catch (ex) {
                  addPageError(ex);
                  break;
                }
              }
              if (!Array.isArray(kids)) {
                addPageError(
                  new _util.FormatError(
                    "Page dictionary kids object is not an array."
                  )
                );
                break;
              }
              if (posInKids >= kids.length) {
                queue.pop();
                continue;
              }
              const kidObj = kids[posInKids];
              let obj;
              if (kidObj instanceof _primitives.Ref) {
                if (visitedNodes.has(kidObj)) {
                  addPageError(
                    new _util.FormatError(
                      "Pages tree contains circular reference."
                    )
                  );
                  break;
                }
                visitedNodes.put(kidObj);
                try {
                  obj = await xref.fetchAsync(kidObj);
                } catch (ex) {
                  addPageError(ex);
                  break;
                }
              } else {
                obj = kidObj;
              }
              if (!(obj instanceof _primitives.Dict)) {
                addPageError(
                  new _util.FormatError(
                    "Page dictionary kid reference points to wrong type of object."
                  )
                );
                break;
              }
              let type = obj.getRaw("Type");
              if (type instanceof _primitives.Ref) {
                try {
                  type = await xref.fetchAsync(type);
                } catch (ex) {
                  addPageError(ex);
                  break;
                }
              }
              if ((0, _primitives.isName)(type, "Page") || !obj.has("Kids")) {
                addPageDict(
                  obj,
                  kidObj instanceof _primitives.Ref ? kidObj : null
                );
              } else {
                queue.push({
                  currentNode: obj,
                  posInKids: 0,
                });
              }
              queueItem.posInKids++;
            }
            return map;
          }
          getPageIndex(pageRef) {
            const cachedPageIndex = this.pageIndexCache.get(pageRef);
            if (cachedPageIndex !== undefined) {
              return Promise.resolve(cachedPageIndex);
            }
            const xref = this.xref;
            function pagesBeforeRef(kidRef) {
              let total = 0,
                parentRef;
              return xref
                .fetchAsync(kidRef)
                .then(function (node) {
                  if (
                    (0, _primitives.isRefsEqual)(kidRef, pageRef) &&
                    !(0, _primitives.isDict)(node, "Page") &&
                    !(
                      node instanceof _primitives.Dict &&
                      !node.has("Type") &&
                      node.has("Contents")
                    )
                  ) {
                    throw new _util.FormatError(
                      "The reference does not point to a /Page dictionary."
                    );
                  }
                  if (!node) {
                    return null;
                  }
                  if (!(node instanceof _primitives.Dict)) {
                    throw new _util.FormatError("Node must be a dictionary.");
                  }
                  parentRef = node.getRaw("Parent");
                  return node.getAsync("Parent");
                })
                .then(function (parent) {
                  if (!parent) {
                    return null;
                  }
                  if (!(parent instanceof _primitives.Dict)) {
                    throw new _util.FormatError("Parent must be a dictionary.");
                  }
                  return parent.getAsync("Kids");
                })
                .then(function (kids) {
                  if (!kids) {
                    return null;
                  }
                  const kidPromises = [];
                  let found = false;
                  for (const kid of kids) {
                    if (!(kid instanceof _primitives.Ref)) {
                      throw new _util.FormatError("Kid must be a reference.");
                    }
                    if ((0, _primitives.isRefsEqual)(kid, kidRef)) {
                      found = true;
                      break;
                    }
                    kidPromises.push(
                      xref.fetchAsync(kid).then(function (obj) {
                        if (!(obj instanceof _primitives.Dict)) {
                          throw new _util.FormatError(
                            "Kid node must be a dictionary."
                          );
                        }
                        if (obj.has("Count")) {
                          total += obj.get("Count");
                        } else {
                          total++;
                        }
                      })
                    );
                  }
                  if (!found) {
                    throw new _util.FormatError(
                      "Kid reference not found in parent's kids."
                    );
                  }
                  return Promise.all(kidPromises).then(function () {
                    return [total, parentRef];
                  });
                });
            }
            let total = 0;
            const next = (ref) =>
              pagesBeforeRef(ref).then((args) => {
                if (!args) {
                  this.pageIndexCache.put(pageRef, total);
                  return total;
                }
                const [count, parentRef] = args;
                total += count;
                return next(parentRef);
              });
            return next(pageRef);
          }
          get baseUrl() {
            const uri = this._catDict.get("URI");
            if (uri instanceof _primitives.Dict) {
              const base = uri.get("Base");
              if (typeof base === "string") {
                const absoluteUrl = (0, _util.createValidAbsoluteUrl)(
                  base,
                  null,
                  {
                    tryConvertEncoding: true,
                  }
                );
                if (absoluteUrl) {
                  return (0, _util.shadow)(this, "baseUrl", absoluteUrl.href);
                }
              }
            }
            return (0, _util.shadow)(
              this,
              "baseUrl",
              this.pdfManager.docBaseUrl
            );
          }
          static parseDestDictionary({
            destDict,
            resultObj,
            docBaseUrl = null,
            docAttachments = null,
          }) {
            if (!(destDict instanceof _primitives.Dict)) {
              (0, _util.warn)(
                "parseDestDictionary: `destDict` must be a dictionary."
              );
              return;
            }
            let action = destDict.get("A"),
              url,
              dest;
            if (!(action instanceof _primitives.Dict)) {
              if (destDict.has("Dest")) {
                action = destDict.get("Dest");
              } else {
                action = destDict.get("AA");
                if (action instanceof _primitives.Dict) {
                  if (action.has("D")) {
                    action = action.get("D");
                  } else if (action.has("U")) {
                    action = action.get("U");
                  }
                }
              }
            }
            if (action instanceof _primitives.Dict) {
              const actionType = action.get("S");
              if (!(actionType instanceof _primitives.Name)) {
                (0, _util.warn)(
                  "parseDestDictionary: Invalid type in Action dictionary."
                );
                return;
              }
              const actionName = actionType.name;
              switch (actionName) {
                case "ResetForm":
                  const flags = action.get("Flags");
                  const include =
                    ((typeof flags === "number" ? flags : 0) & 1) === 0;
                  const fields = [];
                  const refs = [];
                  for (const obj of action.get("Fields") || []) {
                    if (obj instanceof _primitives.Ref) {
                      refs.push(obj.toString());
                    } else if (typeof obj === "string") {
                      fields.push((0, _util.stringToPDFString)(obj));
                    }
                  }
                  resultObj.resetForm = {
                    fields,
                    refs,
                    include,
                  };
                  break;
                case "URI":
                  url = action.get("URI");
                  if (url instanceof _primitives.Name) {
                    url = "/" + url.name;
                  }
                  break;
                case "GoTo":
                  dest = action.get("D");
                  break;
                case "Launch":
                case "GoToR":
                  const urlDict = action.get("F");
                  if (urlDict instanceof _primitives.Dict) {
                    url = urlDict.get("F") || null;
                  } else if (typeof urlDict === "string") {
                    url = urlDict;
                  }
                  let remoteDest = action.get("D");
                  if (remoteDest) {
                    if (remoteDest instanceof _primitives.Name) {
                      remoteDest = remoteDest.name;
                    }
                    if (typeof url === "string") {
                      const baseUrl = url.split("#")[0];
                      if (typeof remoteDest === "string") {
                        url = baseUrl + "#" + remoteDest;
                      } else if (Array.isArray(remoteDest)) {
                        url = baseUrl + "#" + JSON.stringify(remoteDest);
                      }
                    }
                  }
                  const newWindow = action.get("NewWindow");
                  if (typeof newWindow === "boolean") {
                    resultObj.newWindow = newWindow;
                  }
                  break;
                case "GoToE":
                  const target = action.get("T");
                  let attachment;
                  if (docAttachments && target instanceof _primitives.Dict) {
                    const relationship = target.get("R");
                    const name = target.get("N");
                    if (
                      (0, _primitives.isName)(relationship, "C") &&
                      typeof name === "string"
                    ) {
                      attachment =
                        docAttachments[(0, _util.stringToPDFString)(name)];
                    }
                  }
                  if (attachment) {
                    resultObj.attachment = attachment;
                  } else {
                    (0, _util.warn)(
                      `parseDestDictionary - unimplemented "GoToE" action.`
                    );
                  }
                  break;
                case "Named":
                  const namedAction = action.get("N");
                  if (namedAction instanceof _primitives.Name) {
                    resultObj.action = namedAction.name;
                  }
                  break;
                case "SetOCGState":
                  const state = action.get("State");
                  const preserveRB = action.get("PreserveRB");
                  if (!Array.isArray(state) || state.length === 0) {
                    break;
                  }
                  const stateArr = [];
                  for (const elem of state) {
                    if (elem instanceof _primitives.Name) {
                      switch (elem.name) {
                        case "ON":
                        case "OFF":
                        case "Toggle":
                          stateArr.push(elem.name);
                          break;
                      }
                    } else if (elem instanceof _primitives.Ref) {
                      stateArr.push(elem.toString());
                    }
                  }
                  if (stateArr.length !== state.length) {
                    break;
                  }
                  resultObj.setOCGState = {
                    state: stateArr,
                    preserveRB:
                      typeof preserveRB === "boolean" ? preserveRB : true,
                  };
                  break;
                case "JavaScript":
                  const jsAction = action.get("JS");
                  let js;
                  if (jsAction instanceof _base_stream.BaseStream) {
                    js = jsAction.getString();
                  } else if (typeof jsAction === "string") {
                    js = jsAction;
                  }
                  const jsURL =
                    js &&
                    (0, _core_utils.recoverJsURL)(
                      (0, _util.stringToPDFString)(js)
                    );
                  if (jsURL) {
                    url = jsURL.url;
                    resultObj.newWindow = jsURL.newWindow;
                    break;
                  }
                default:
                  if (
                    actionName === "JavaScript" ||
                    actionName === "SubmitForm"
                  ) {
                    break;
                  }
                  (0, _util.warn)(
                    `parseDestDictionary - unsupported action: "${actionName}".`
                  );
                  break;
              }
            } else if (destDict.has("Dest")) {
              dest = destDict.get("Dest");
            }
            if (typeof url === "string") {
              const absoluteUrl = (0, _util.createValidAbsoluteUrl)(
                url,
                docBaseUrl,
                {
                  addDefaultProtocol: true,
                  tryConvertEncoding: true,
                }
              );
              if (absoluteUrl) {
                resultObj.url = absoluteUrl.href;
              }
              resultObj.unsafeUrl = url;
            }
            if (dest) {
              if (dest instanceof _primitives.Name) {
                dest = dest.name;
              }
              if (typeof dest === "string") {
                resultObj.dest = (0, _util.stringToPDFString)(dest);
              } else if (Array.isArray(dest)) {
                resultObj.dest = dest;
              }
            }
          }
        }
        exports.Catalog = Catalog;

        /***/
      },
      /* 67 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.NumberTree = exports.NameTree = void 0;
        var _primitives = __w_pdfjs_require__(4);
        var _util = __w_pdfjs_require__(2);
        class NameOrNumberTree {
          constructor(root, xref, type) {
            if (this.constructor === NameOrNumberTree) {
              (0, _util.unreachable)("Cannot initialize NameOrNumberTree.");
            }
            this.root = root;
            this.xref = xref;
            this._type = type;
          }
          getAll() {
            const map = new Map();
            if (!this.root) {
              return map;
            }
            const xref = this.xref;
            const processed = new _primitives.RefSet();
            processed.put(this.root);
            const queue = [this.root];
            while (queue.length > 0) {
              const obj = xref.fetchIfRef(queue.shift());
              if (!(obj instanceof _primitives.Dict)) {
                continue;
              }
              if (obj.has("Kids")) {
                const kids = obj.get("Kids");
                if (!Array.isArray(kids)) {
                  continue;
                }
                for (const kid of kids) {
                  if (processed.has(kid)) {
                    throw new _util.FormatError(
                      `Duplicate entry in "${this._type}" tree.`
                    );
                  }
                  queue.push(kid);
                  processed.put(kid);
                }
                continue;
              }
              const entries = obj.get(this._type);
              if (!Array.isArray(entries)) {
                continue;
              }
              for (let i = 0, ii = entries.length; i < ii; i += 2) {
                map.set(
                  xref.fetchIfRef(entries[i]),
                  xref.fetchIfRef(entries[i + 1])
                );
              }
            }
            return map;
          }
          get(key) {
            if (!this.root) {
              return null;
            }
            const xref = this.xref;
            let kidsOrEntries = xref.fetchIfRef(this.root);
            let loopCount = 0;
            const MAX_LEVELS = 10;
            while (kidsOrEntries.has("Kids")) {
              if (++loopCount > MAX_LEVELS) {
                (0, _util.warn)(
                  `Search depth limit reached for "${this._type}" tree.`
                );
                return null;
              }
              const kids = kidsOrEntries.get("Kids");
              if (!Array.isArray(kids)) {
                return null;
              }
              let l = 0,
                r = kids.length - 1;
              while (l <= r) {
                const m = (l + r) >> 1;
                const kid = xref.fetchIfRef(kids[m]);
                const limits = kid.get("Limits");
                if (key < xref.fetchIfRef(limits[0])) {
                  r = m - 1;
                } else if (key > xref.fetchIfRef(limits[1])) {
                  l = m + 1;
                } else {
                  kidsOrEntries = kid;
                  break;
                }
              }
              if (l > r) {
                return null;
              }
            }
            const entries = kidsOrEntries.get(this._type);
            if (Array.isArray(entries)) {
              let l = 0,
                r = entries.length - 2;
              while (l <= r) {
                const tmp = (l + r) >> 1,
                  m = tmp + (tmp & 1);
                const currentKey = xref.fetchIfRef(entries[m]);
                if (key < currentKey) {
                  r = m - 2;
                } else if (key > currentKey) {
                  l = m + 2;
                } else {
                  return xref.fetchIfRef(entries[m + 1]);
                }
              }
            }
            return null;
          }
        }
        class NameTree extends NameOrNumberTree {
          constructor(root, xref) {
            super(root, xref, "Names");
          }
        }
        exports.NameTree = NameTree;
        class NumberTree extends NameOrNumberTree {
          constructor(root, xref) {
            super(root, xref, "Nums");
          }
        }
        exports.NumberTree = NumberTree;

        /***/
      },
      /* 68 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.clearGlobalCaches = clearGlobalCaches;
        var _pattern = __w_pdfjs_require__(50);
        var _primitives = __w_pdfjs_require__(4);
        var _unicode = __w_pdfjs_require__(40);
        function clearGlobalCaches() {
          (0, _pattern.clearPatternCaches)();
          (0, _primitives.clearPrimitiveCaches)();
          (0, _unicode.clearUnicodeCaches)();
        }

        /***/
      },
      /* 69 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.FileSpec = void 0;
        var _util = __w_pdfjs_require__(2);
        var _base_stream = __w_pdfjs_require__(5);
        var _primitives = __w_pdfjs_require__(4);
        function pickPlatformItem(dict) {
          if (dict.has("UF")) {
            return dict.get("UF");
          } else if (dict.has("F")) {
            return dict.get("F");
          } else if (dict.has("Unix")) {
            return dict.get("Unix");
          } else if (dict.has("Mac")) {
            return dict.get("Mac");
          } else if (dict.has("DOS")) {
            return dict.get("DOS");
          }
          return null;
        }
        class FileSpec {
          constructor(root, xref) {
            if (!(root instanceof _primitives.Dict)) {
              return;
            }
            this.xref = xref;
            this.root = root;
            if (root.has("FS")) {
              this.fs = root.get("FS");
            }
            this.description = root.has("Desc")
              ? (0, _util.stringToPDFString)(root.get("Desc"))
              : "";
            if (root.has("RF")) {
              (0, _util.warn)("Related file specifications are not supported");
            }
            this.contentAvailable = true;
            if (!root.has("EF")) {
              this.contentAvailable = false;
              (0, _util.warn)(
                "Non-embedded file specifications are not supported"
              );
            }
          }
          get filename() {
            if (!this._filename && this.root) {
              const filename = pickPlatformItem(this.root) || "unnamed";
              this._filename = (0, _util.stringToPDFString)(filename)
                .replaceAll("\\\\", "\\")
                .replaceAll("\\/", "/")
                .replaceAll("\\", "/");
            }
            return this._filename;
          }
          get content() {
            if (!this.contentAvailable) {
              return null;
            }
            if (!this.contentRef && this.root) {
              this.contentRef = pickPlatformItem(this.root.get("EF"));
            }
            let content = null;
            if (this.contentRef) {
              const fileObj = this.xref.fetchIfRef(this.contentRef);
              if (fileObj instanceof _base_stream.BaseStream) {
                content = fileObj.getBytes();
              } else {
                (0, _util.warn)(
                  "Embedded file specification points to non-existing/invalid content"
                );
              }
            } else {
              (0, _util.warn)(
                "Embedded file specification does not have a content"
              );
            }
            return content;
          }
          get serializable() {
            return {
              filename: this.filename,
              content: this.content,
            };
          }
        }
        exports.FileSpec = FileSpec;

        /***/
      },
      /* 70 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.MetadataParser = void 0;
        var _xml_parser = __w_pdfjs_require__(71);
        class MetadataParser {
          constructor(data) {
            data = this._repair(data);
            const parser = new _xml_parser.SimpleXMLParser({
              lowerCaseName: true,
            });
            const xmlDocument = parser.parseFromString(data);
            this._metadataMap = new Map();
            this._data = data;
            if (xmlDocument) {
              this._parse(xmlDocument);
            }
          }
          _repair(data) {
            return data
              .replace(/^[^<]+/, "")
              .replaceAll(/>\\376\\377([^<]+)/g, function (all, codes) {
                const bytes = codes
                  .replaceAll(
                    /\\([0-3])([0-7])([0-7])/g,
                    function (code, d1, d2, d3) {
                      return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);
                    }
                  )
                  .replaceAll(/&(amp|apos|gt|lt|quot);/g, function (str, name) {
                    switch (name) {
                      case "amp":
                        return "&";
                      case "apos":
                        return "'";
                      case "gt":
                        return ">";
                      case "lt":
                        return "<";
                      case "quot":
                        return '"';
                    }
                    throw new Error(`_repair: ${name} isn't defined.`);
                  });
                const charBuf = [">"];
                for (let i = 0, ii = bytes.length; i < ii; i += 2) {
                  const code =
                    bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);
                  if (
                    code >= 32 &&
                    code < 127 &&
                    code !== 60 &&
                    code !== 62 &&
                    code !== 38
                  ) {
                    charBuf.push(String.fromCharCode(code));
                  } else {
                    charBuf.push(
                      "&#x" + (0x10000 + code).toString(16).substring(1) + ";"
                    );
                  }
                }
                return charBuf.join("");
              });
          }
          _getSequence(entry) {
            const name = entry.nodeName;
            if (
              name !== "rdf:bag" &&
              name !== "rdf:seq" &&
              name !== "rdf:alt"
            ) {
              return null;
            }
            return entry.childNodes.filter(
              (node) => node.nodeName === "rdf:li"
            );
          }
          _parseArray(entry) {
            if (!entry.hasChildNodes()) {
              return;
            }
            const [seqNode] = entry.childNodes;
            const sequence = this._getSequence(seqNode) || [];
            this._metadataMap.set(
              entry.nodeName,
              sequence.map((node) => node.textContent.trim())
            );
          }
          _parse(xmlDocument) {
            let rdf = xmlDocument.documentElement;
            if (rdf.nodeName !== "rdf:rdf") {
              rdf = rdf.firstChild;
              while (rdf && rdf.nodeName !== "rdf:rdf") {
                rdf = rdf.nextSibling;
              }
            }
            if (!rdf || rdf.nodeName !== "rdf:rdf" || !rdf.hasChildNodes()) {
              return;
            }
            for (const desc of rdf.childNodes) {
              if (desc.nodeName !== "rdf:description") {
                continue;
              }
              for (const entry of desc.childNodes) {
                const name = entry.nodeName;
                switch (name) {
                  case "#text":
                    continue;
                  case "dc:creator":
                  case "dc:subject":
                    this._parseArray(entry);
                    continue;
                }
                this._metadataMap.set(name, entry.textContent.trim());
              }
            }
          }
          get serializable() {
            return {
              parsedData: this._metadataMap,
              rawData: this._data,
            };
          }
        }
        exports.MetadataParser = MetadataParser;

        /***/
      },
      /* 71 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.XMLParserErrorCode =
          exports.XMLParserBase =
          exports.SimpleXMLParser =
          exports.SimpleDOMNode =
            void 0;
        var _core_utils = __w_pdfjs_require__(3);
        const XMLParserErrorCode = {
          NoError: 0,
          EndOfDocument: -1,
          UnterminatedCdat: -2,
          UnterminatedXmlDeclaration: -3,
          UnterminatedDoctypeDeclaration: -4,
          UnterminatedComment: -5,
          MalformedElement: -6,
          OutOfMemory: -7,
          UnterminatedAttributeValue: -8,
          UnterminatedElement: -9,
          ElementNeverBegun: -10,
        };
        exports.XMLParserErrorCode = XMLParserErrorCode;
        function isWhitespace(s, index) {
          const ch = s[index];
          return ch === " " || ch === "\n" || ch === "\r" || ch === "\t";
        }
        function isWhitespaceString(s) {
          for (let i = 0, ii = s.length; i < ii; i++) {
            if (!isWhitespace(s, i)) {
              return false;
            }
          }
          return true;
        }
        class XMLParserBase {
          _resolveEntities(s) {
            return s.replaceAll(/&([^;]+);/g, (all, entity) => {
              if (entity.substring(0, 2) === "#x") {
                return String.fromCodePoint(parseInt(entity.substring(2), 16));
              } else if (entity.substring(0, 1) === "#") {
                return String.fromCodePoint(parseInt(entity.substring(1), 10));
              }
              switch (entity) {
                case "lt":
                  return "<";
                case "gt":
                  return ">";
                case "amp":
                  return "&";
                case "quot":
                  return '"';
                case "apos":
                  return "'";
              }
              return this.onResolveEntity(entity);
            });
          }
          _parseContent(s, start) {
            const attributes = [];
            let pos = start;
            function skipWs() {
              while (pos < s.length && isWhitespace(s, pos)) {
                ++pos;
              }
            }
            while (
              pos < s.length &&
              !isWhitespace(s, pos) &&
              s[pos] !== ">" &&
              s[pos] !== "/"
            ) {
              ++pos;
            }
            const name = s.substring(start, pos);
            skipWs();
            while (
              pos < s.length &&
              s[pos] !== ">" &&
              s[pos] !== "/" &&
              s[pos] !== "?"
            ) {
              skipWs();
              let attrName = "",
                attrValue = "";
              while (
                pos < s.length &&
                !isWhitespace(s, pos) &&
                s[pos] !== "="
              ) {
                attrName += s[pos];
                ++pos;
              }
              skipWs();
              if (s[pos] !== "=") {
                return null;
              }
              ++pos;
              skipWs();
              const attrEndChar = s[pos];
              if (attrEndChar !== '"' && attrEndChar !== "'") {
                return null;
              }
              const attrEndIndex = s.indexOf(attrEndChar, ++pos);
              if (attrEndIndex < 0) {
                return null;
              }
              attrValue = s.substring(pos, attrEndIndex);
              attributes.push({
                name: attrName,
                value: this._resolveEntities(attrValue),
              });
              pos = attrEndIndex + 1;
              skipWs();
            }
            return {
              name,
              attributes,
              parsed: pos - start,
            };
          }
          _parseProcessingInstruction(s, start) {
            let pos = start;
            function skipWs() {
              while (pos < s.length && isWhitespace(s, pos)) {
                ++pos;
              }
            }
            while (
              pos < s.length &&
              !isWhitespace(s, pos) &&
              s[pos] !== ">" &&
              s[pos] !== "?" &&
              s[pos] !== "/"
            ) {
              ++pos;
            }
            const name = s.substring(start, pos);
            skipWs();
            const attrStart = pos;
            while (pos < s.length && (s[pos] !== "?" || s[pos + 1] !== ">")) {
              ++pos;
            }
            const value = s.substring(attrStart, pos);
            return {
              name,
              value,
              parsed: pos - start,
            };
          }
          parseXml(s) {
            let i = 0;
            while (i < s.length) {
              const ch = s[i];
              let j = i;
              if (ch === "<") {
                ++j;
                const ch2 = s[j];
                let q;
                switch (ch2) {
                  case "/":
                    ++j;
                    q = s.indexOf(">", j);
                    if (q < 0) {
                      this.onError(XMLParserErrorCode.UnterminatedElement);
                      return;
                    }
                    this.onEndElement(s.substring(j, q));
                    j = q + 1;
                    break;
                  case "?":
                    ++j;
                    const pi = this._parseProcessingInstruction(s, j);
                    if (
                      s.substring(j + pi.parsed, j + pi.parsed + 2) !== "?>"
                    ) {
                      this.onError(
                        XMLParserErrorCode.UnterminatedXmlDeclaration
                      );
                      return;
                    }
                    this.onPi(pi.name, pi.value);
                    j += pi.parsed + 2;
                    break;
                  case "!":
                    if (s.substring(j + 1, j + 3) === "--") {
                      q = s.indexOf("-->", j + 3);
                      if (q < 0) {
                        this.onError(XMLParserErrorCode.UnterminatedComment);
                        return;
                      }
                      this.onComment(s.substring(j + 3, q));
                      j = q + 3;
                    } else if (s.substring(j + 1, j + 8) === "[CDATA[") {
                      q = s.indexOf("]]>", j + 8);
                      if (q < 0) {
                        this.onError(XMLParserErrorCode.UnterminatedCdat);
                        return;
                      }
                      this.onCdata(s.substring(j + 8, q));
                      j = q + 3;
                    } else if (s.substring(j + 1, j + 8) === "DOCTYPE") {
                      const q2 = s.indexOf("[", j + 8);
                      let complexDoctype = false;
                      q = s.indexOf(">", j + 8);
                      if (q < 0) {
                        this.onError(
                          XMLParserErrorCode.UnterminatedDoctypeDeclaration
                        );
                        return;
                      }
                      if (q2 > 0 && q > q2) {
                        q = s.indexOf("]>", j + 8);
                        if (q < 0) {
                          this.onError(
                            XMLParserErrorCode.UnterminatedDoctypeDeclaration
                          );
                          return;
                        }
                        complexDoctype = true;
                      }
                      const doctypeContent = s.substring(
                        j + 8,
                        q + (complexDoctype ? 1 : 0)
                      );
                      this.onDoctype(doctypeContent);
                      j = q + (complexDoctype ? 2 : 1);
                    } else {
                      this.onError(XMLParserErrorCode.MalformedElement);
                      return;
                    }
                    break;
                  default:
                    const content = this._parseContent(s, j);
                    if (content === null) {
                      this.onError(XMLParserErrorCode.MalformedElement);
                      return;
                    }
                    let isClosed = false;
                    if (
                      s.substring(
                        j + content.parsed,
                        j + content.parsed + 2
                      ) === "/>"
                    ) {
                      isClosed = true;
                    } else if (
                      s.substring(
                        j + content.parsed,
                        j + content.parsed + 1
                      ) !== ">"
                    ) {
                      this.onError(XMLParserErrorCode.UnterminatedElement);
                      return;
                    }
                    this.onBeginElement(
                      content.name,
                      content.attributes,
                      isClosed
                    );
                    j += content.parsed + (isClosed ? 2 : 1);
                    break;
                }
              } else {
                while (j < s.length && s[j] !== "<") {
                  j++;
                }
                const text = s.substring(i, j);
                this.onText(this._resolveEntities(text));
              }
              i = j;
            }
          }
          onResolveEntity(name) {
            return `&${name};`;
          }
          onPi(name, value) {}
          onComment(text) {}
          onCdata(text) {}
          onDoctype(doctypeContent) {}
          onText(text) {}
          onBeginElement(name, attributes, isEmpty) {}
          onEndElement(name) {}
          onError(code) {}
        }
        exports.XMLParserBase = XMLParserBase;
        class SimpleDOMNode {
          constructor(nodeName, nodeValue) {
            this.nodeName = nodeName;
            this.nodeValue = nodeValue;
            Object.defineProperty(this, "parentNode", {
              value: null,
              writable: true,
            });
          }
          get firstChild() {
            return this.childNodes?.[0];
          }
          get nextSibling() {
            const childNodes = this.parentNode.childNodes;
            if (!childNodes) {
              return undefined;
            }
            const index = childNodes.indexOf(this);
            if (index === -1) {
              return undefined;
            }
            return childNodes[index + 1];
          }
          get textContent() {
            if (!this.childNodes) {
              return this.nodeValue || "";
            }
            return this.childNodes
              .map(function (child) {
                return child.textContent;
              })
              .join("");
          }
          get children() {
            return this.childNodes || [];
          }
          hasChildNodes() {
            return this.childNodes?.length > 0;
          }
          searchNode(paths, pos) {
            if (pos >= paths.length) {
              return this;
            }
            const component = paths[pos];
            if (component.name.startsWith("#") && pos < paths.length - 1) {
              return this.searchNode(paths, pos + 1);
            }
            const stack = [];
            let node = this;
            while (true) {
              if (component.name === node.nodeName) {
                if (component.pos === 0) {
                  const res = node.searchNode(paths, pos + 1);
                  if (res !== null) {
                    return res;
                  }
                } else if (stack.length === 0) {
                  return null;
                } else {
                  const [parent] = stack.pop();
                  let siblingPos = 0;
                  for (const child of parent.childNodes) {
                    if (component.name === child.nodeName) {
                      if (siblingPos === component.pos) {
                        return child.searchNode(paths, pos + 1);
                      }
                      siblingPos++;
                    }
                  }
                  return node.searchNode(paths, pos + 1);
                }
              }
              if (node.childNodes?.length > 0) {
                stack.push([node, 0]);
                node = node.childNodes[0];
              } else if (stack.length === 0) {
                return null;
              } else {
                while (stack.length !== 0) {
                  const [parent, currentPos] = stack.pop();
                  const newPos = currentPos + 1;
                  if (newPos < parent.childNodes.length) {
                    stack.push([parent, newPos]);
                    node = parent.childNodes[newPos];
                    break;
                  }
                }
                if (stack.length === 0) {
                  return null;
                }
              }
            }
          }
          dump(buffer) {
            if (this.nodeName === "#text") {
              buffer.push((0, _core_utils.encodeToXmlString)(this.nodeValue));
              return;
            }
            buffer.push(`<${this.nodeName}`);
            if (this.attributes) {
              for (const attribute of this.attributes) {
                buffer.push(
                  ` ${attribute.name}="${(0, _core_utils.encodeToXmlString)(
                    attribute.value
                  )}"`
                );
              }
            }
            if (this.hasChildNodes()) {
              buffer.push(">");
              for (const child of this.childNodes) {
                child.dump(buffer);
              }
              buffer.push(`</${this.nodeName}>`);
            } else if (this.nodeValue) {
              buffer.push(
                `>${(0, _core_utils.encodeToXmlString)(this.nodeValue)}</${
                  this.nodeName
                }>`
              );
            } else {
              buffer.push("/>");
            }
          }
        }
        exports.SimpleDOMNode = SimpleDOMNode;
        class SimpleXMLParser extends XMLParserBase {
          constructor({ hasAttributes = false, lowerCaseName = false }) {
            super();
            this._currentFragment = null;
            this._stack = null;
            this._errorCode = XMLParserErrorCode.NoError;
            this._hasAttributes = hasAttributes;
            this._lowerCaseName = lowerCaseName;
          }
          parseFromString(data) {
            this._currentFragment = [];
            this._stack = [];
            this._errorCode = XMLParserErrorCode.NoError;
            this.parseXml(data);
            if (this._errorCode !== XMLParserErrorCode.NoError) {
              return undefined;
            }
            const [documentElement] = this._currentFragment;
            if (!documentElement) {
              return undefined;
            }
            return {
              documentElement,
            };
          }
          onText(text) {
            if (isWhitespaceString(text)) {
              return;
            }
            const node = new SimpleDOMNode("#text", text);
            this._currentFragment.push(node);
          }
          onCdata(text) {
            const node = new SimpleDOMNode("#text", text);
            this._currentFragment.push(node);
          }
          onBeginElement(name, attributes, isEmpty) {
            if (this._lowerCaseName) {
              name = name.toLowerCase();
            }
            const node = new SimpleDOMNode(name);
            node.childNodes = [];
            if (this._hasAttributes) {
              node.attributes = attributes;
            }
            this._currentFragment.push(node);
            if (isEmpty) {
              return;
            }
            this._stack.push(this._currentFragment);
            this._currentFragment = node.childNodes;
          }
          onEndElement(name) {
            this._currentFragment = this._stack.pop() || [];
            const lastElement = this._currentFragment.at(-1);
            if (!lastElement) {
              return null;
            }
            for (const childNode of lastElement.childNodes) {
              childNode.parentNode = lastElement;
            }
            return lastElement;
          }
          onError(code) {
            this._errorCode = code;
          }
        }
        exports.SimpleXMLParser = SimpleXMLParser;

        /***/
      },
      /* 72 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.StructTreeRoot = exports.StructTreePage = void 0;
        var _util = __w_pdfjs_require__(2);
        var _primitives = __w_pdfjs_require__(4);
        var _name_number_tree = __w_pdfjs_require__(67);
        var _writer = __w_pdfjs_require__(73);
        const MAX_DEPTH = 40;
        const StructElementType = {
          PAGE_CONTENT: 1,
          STREAM_CONTENT: 2,
          OBJECT: 3,
          ANNOTATION: 4,
          ELEMENT: 5,
        };
        class StructTreeRoot {
          constructor(rootDict, rootRef) {
            this.dict = rootDict;
            this.ref = rootRef instanceof _primitives.Ref ? rootRef : null;
            this.roleMap = new Map();
            this.structParentIds = null;
          }
          init() {
            this.readRoleMap();
          }
          #addIdToPage(pageRef, id, type) {
            if (!(pageRef instanceof _primitives.Ref) || id < 0) {
              return;
            }
            this.structParentIds ||= new _primitives.RefSetCache();
            let ids = this.structParentIds.get(pageRef);
            if (!ids) {
              ids = [];
              this.structParentIds.put(pageRef, ids);
            }
            ids.push([id, type]);
          }
          addAnnotationIdToPage(pageRef, id) {
            this.#addIdToPage(pageRef, id, StructElementType.ANNOTATION);
          }
          readRoleMap() {
            const roleMapDict = this.dict.get("RoleMap");
            if (!(roleMapDict instanceof _primitives.Dict)) {
              return;
            }
            roleMapDict.forEach((key, value) => {
              if (!(value instanceof _primitives.Name)) {
                return;
              }
              this.roleMap.set(key, value.name);
            });
          }
          static async canCreateStructureTree({
            catalogRef,
            pdfManager,
            newAnnotationsByPage,
          }) {
            if (!(catalogRef instanceof _primitives.Ref)) {
              (0, _util.warn)(
                "Cannot save the struct tree: no catalog reference."
              );
              return false;
            }
            let nextKey = 0;
            let hasNothingToUpdate = true;
            for (const [pageIndex, elements] of newAnnotationsByPage) {
              const { ref: pageRef } = await pdfManager.getPage(pageIndex);
              if (!(pageRef instanceof _primitives.Ref)) {
                (0, _util.warn)(
                  `Cannot save the struct tree: page ${pageIndex} has no ref.`
                );
                hasNothingToUpdate = true;
                break;
              }
              for (const element of elements) {
                if (element.accessibilityData?.type) {
                  element.parentTreeId = nextKey++;
                  hasNothingToUpdate = false;
                }
              }
            }
            if (hasNothingToUpdate) {
              for (const elements of newAnnotationsByPage.values()) {
                for (const element of elements) {
                  delete element.parentTreeId;
                }
              }
              return false;
            }
            return true;
          }
          static async createStructureTree({
            newAnnotationsByPage,
            xref,
            catalogRef,
            pdfManager,
            newRefs,
          }) {
            const root = pdfManager.catalog.cloneDict();
            const structTreeRootRef = xref.getNewTemporaryRef();
            root.set("StructTreeRoot", structTreeRootRef);
            const buffer = [];
            await (0, _writer.writeObject)(catalogRef, root, buffer, xref);
            newRefs.push({
              ref: catalogRef,
              data: buffer.join(""),
            });
            const structTreeRoot = new _primitives.Dict(xref);
            structTreeRoot.set("Type", _primitives.Name.get("StructTreeRoot"));
            const parentTreeRef = xref.getNewTemporaryRef();
            structTreeRoot.set("ParentTree", parentTreeRef);
            const kids = [];
            structTreeRoot.set("K", kids);
            const parentTree = new _primitives.Dict(xref);
            const nums = [];
            parentTree.set("Nums", nums);
            const nextKey = await this.#writeKids({
              newAnnotationsByPage,
              structTreeRootRef,
              kids,
              nums,
              xref,
              pdfManager,
              newRefs,
              buffer,
            });
            structTreeRoot.set("ParentTreeNextKey", nextKey);
            buffer.length = 0;
            await (0, _writer.writeObject)(
              parentTreeRef,
              parentTree,
              buffer,
              xref
            );
            newRefs.push({
              ref: parentTreeRef,
              data: buffer.join(""),
            });
            buffer.length = 0;
            await (0, _writer.writeObject)(
              structTreeRootRef,
              structTreeRoot,
              buffer,
              xref
            );
            newRefs.push({
              ref: structTreeRootRef,
              data: buffer.join(""),
            });
          }
          async canUpdateStructTree({ pdfManager, newAnnotationsByPage }) {
            if (!this.ref) {
              (0, _util.warn)(
                "Cannot update the struct tree: no root reference."
              );
              return false;
            }
            let nextKey = this.dict.get("ParentTreeNextKey");
            if (!Number.isInteger(nextKey) || nextKey < 0) {
              (0, _util.warn)(
                "Cannot update the struct tree: invalid next key."
              );
              return false;
            }
            const parentTree = this.dict.get("ParentTree");
            if (!(parentTree instanceof _primitives.Dict)) {
              (0, _util.warn)(
                "Cannot update the struct tree: ParentTree isn't a dict."
              );
              return false;
            }
            const nums = parentTree.get("Nums");
            if (!Array.isArray(nums)) {
              (0, _util.warn)(
                "Cannot update the struct tree: nums isn't an array."
              );
              return false;
            }
            const { numPages } = pdfManager.catalog;
            for (const pageIndex of newAnnotationsByPage.keys()) {
              const { pageDict, ref: pageRef } = await pdfManager.getPage(
                pageIndex
              );
              if (!(pageRef instanceof _primitives.Ref)) {
                (0, _util.warn)(
                  `Cannot save the struct tree: page ${pageIndex} has no ref.`
                );
                return false;
              }
              const id = pageDict.get("StructParents");
              if (!Number.isInteger(id) || id < 0 || id >= numPages) {
                (0, _util.warn)(
                  `Cannot save the struct tree: page ${pageIndex} has no id.`
                );
                return false;
              }
            }
            let hasNothingToUpdate = true;
            for (const [pageIndex, elements] of newAnnotationsByPage) {
              const { pageDict } = await pdfManager.getPage(pageIndex);
              StructTreeRoot.#collectParents({
                elements,
                xref: this.dict.xref,
                pageDict,
                parentTree,
              });
              for (const element of elements) {
                if (element.accessibilityData?.type) {
                  element.parentTreeId = nextKey++;
                  hasNothingToUpdate = false;
                }
              }
            }
            if (hasNothingToUpdate) {
              for (const elements of newAnnotationsByPage.values()) {
                for (const element of elements) {
                  delete element.parentTreeId;
                  delete element.structTreeParent;
                }
              }
              return false;
            }
            return true;
          }
          async updateStructureTree({
            newAnnotationsByPage,
            pdfManager,
            newRefs,
          }) {
            const xref = this.dict.xref;
            const structTreeRoot = this.dict.clone();
            const structTreeRootRef = this.ref;
            let parentTreeRef = structTreeRoot.getRaw("ParentTree");
            let parentTree;
            if (parentTreeRef instanceof _primitives.Ref) {
              parentTree = xref.fetch(parentTreeRef);
            } else {
              parentTree = parentTreeRef;
              parentTreeRef = xref.getNewTemporaryRef();
              structTreeRoot.set("ParentTree", parentTreeRef);
            }
            parentTree = parentTree.clone();
            let nums = parentTree.getRaw("Nums");
            let numsRef = null;
            if (nums instanceof _primitives.Ref) {
              numsRef = nums;
              nums = xref.fetch(numsRef);
            }
            nums = nums.slice();
            if (!numsRef) {
              parentTree.set("Nums", nums);
            }
            let kids = structTreeRoot.getRaw("K");
            let kidsRef = null;
            if (kids instanceof _primitives.Ref) {
              kidsRef = kids;
              kids = xref.fetch(kidsRef);
            } else {
              kidsRef = xref.getNewTemporaryRef();
              structTreeRoot.set("K", kidsRef);
            }
            kids = Array.isArray(kids) ? kids.slice() : [kids];
            const buffer = [];
            const newNextkey = await StructTreeRoot.#writeKids({
              newAnnotationsByPage,
              structTreeRootRef,
              kids,
              nums,
              xref,
              pdfManager,
              newRefs,
              buffer,
            });
            structTreeRoot.set("ParentTreeNextKey", newNextkey);
            buffer.length = 0;
            await (0, _writer.writeObject)(kidsRef, kids, buffer, xref);
            newRefs.push({
              ref: kidsRef,
              data: buffer.join(""),
            });
            if (numsRef) {
              buffer.length = 0;
              await (0, _writer.writeObject)(numsRef, nums, buffer, xref);
              newRefs.push({
                ref: numsRef,
                data: buffer.join(""),
              });
            }
            buffer.length = 0;
            await (0, _writer.writeObject)(
              parentTreeRef,
              parentTree,
              buffer,
              xref
            );
            newRefs.push({
              ref: parentTreeRef,
              data: buffer.join(""),
            });
            buffer.length = 0;
            await (0, _writer.writeObject)(
              structTreeRootRef,
              structTreeRoot,
              buffer,
              xref
            );
            newRefs.push({
              ref: structTreeRootRef,
              data: buffer.join(""),
            });
          }
          static async #writeKids({
            newAnnotationsByPage,
            structTreeRootRef,
            kids,
            nums,
            xref,
            pdfManager,
            newRefs,
            buffer,
          }) {
            const objr = _primitives.Name.get("OBJR");
            let nextKey = -Infinity;
            for (const [pageIndex, elements] of newAnnotationsByPage) {
              const { ref: pageRef } = await pdfManager.getPage(pageIndex);
              for (const {
                accessibilityData: {
                  type,
                  title,
                  lang,
                  alt,
                  expanded,
                  actualText,
                },
                ref,
                parentTreeId,
                structTreeParent,
              } of elements) {
                nextKey = Math.max(nextKey, parentTreeId);
                const tagRef = xref.getNewTemporaryRef();
                const tagDict = new _primitives.Dict(xref);
                tagDict.set("S", _primitives.Name.get(type));
                if (title) {
                  tagDict.set("T", title);
                }
                if (lang) {
                  tagDict.set("Lang", lang);
                }
                if (alt) {
                  tagDict.set("Alt", alt);
                }
                if (expanded) {
                  tagDict.set("E", expanded);
                }
                if (actualText) {
                  tagDict.set("ActualText", actualText);
                }
                if (structTreeParent) {
                  await this.#updateParentTag({
                    structTreeParent,
                    tagDict,
                    newTagRef: tagRef,
                    fallbackRef: structTreeRootRef,
                    xref,
                    newRefs,
                    buffer,
                  });
                } else {
                  tagDict.set("P", structTreeRootRef);
                }
                const objDict = new _primitives.Dict(xref);
                tagDict.set("K", objDict);
                objDict.set("Type", objr);
                objDict.set("Pg", pageRef);
                objDict.set("Obj", ref);
                buffer.length = 0;
                await (0, _writer.writeObject)(tagRef, tagDict, buffer, xref);
                newRefs.push({
                  ref: tagRef,
                  data: buffer.join(""),
                });
                nums.push(parentTreeId, tagRef);
                kids.push(tagRef);
              }
            }
            return nextKey + 1;
          }
          static #collectParents({ elements, xref, pageDict, parentTree }) {
            const idToElement = new Map();
            for (const element of elements) {
              if (element.structTreeParentId) {
                const id = parseInt(
                  element.structTreeParentId.split("_mc")[1],
                  10
                );
                idToElement.set(id, element);
              }
            }
            const id = pageDict.get("StructParents");
            const numberTree = new _name_number_tree.NumberTree(
              parentTree,
              xref
            );
            const parentArray = numberTree.get(id);
            if (!Array.isArray(parentArray)) {
              return;
            }
            const updateElement = (kid, pageKid, kidRef) => {
              const element = idToElement.get(kid);
              if (element) {
                const parentRef = pageKid.getRaw("P");
                const parentDict = xref.fetchIfRef(parentRef);
                if (
                  parentRef instanceof _primitives.Ref &&
                  parentDict instanceof _primitives.Dict
                ) {
                  element.structTreeParent = {
                    ref: kidRef,
                    dict: pageKid,
                  };
                }
                return true;
              }
              return false;
            };
            for (const kidRef of parentArray) {
              if (!(kidRef instanceof _primitives.Ref)) {
                continue;
              }
              const pageKid = xref.fetch(kidRef);
              const k = pageKid.get("K");
              if (Number.isInteger(k)) {
                updateElement(k, pageKid, kidRef);
                continue;
              }
              if (!Array.isArray(k)) {
                continue;
              }
              for (let kid of k) {
                kid = xref.fetchIfRef(kid);
                if (
                  Number.isInteger(kid) &&
                  updateElement(kid, pageKid, kidRef)
                ) {
                  break;
                }
              }
            }
          }
          static async #updateParentTag({
            structTreeParent: { ref, dict },
            tagDict,
            newTagRef,
            fallbackRef,
            xref,
            newRefs,
            buffer,
          }) {
            const parentRef = dict.getRaw("P");
            let parentDict = xref.fetchIfRef(parentRef);
            tagDict.set("P", parentRef);
            let saveParentDict = false;
            let parentKids;
            let parentKidsRef = parentDict.getRaw("K");
            if (!(parentKidsRef instanceof _primitives.Ref)) {
              parentKids = parentKidsRef;
              parentKidsRef = xref.getNewTemporaryRef();
              parentDict = parentDict.clone();
              parentDict.set("K", parentKidsRef);
              saveParentDict = true;
            } else {
              parentKids = xref.fetch(parentKidsRef);
            }
            if (Array.isArray(parentKids)) {
              const index = parentKids.indexOf(ref);
              if (index >= 0) {
                parentKids = parentKids.slice();
                parentKids.splice(index + 1, 0, newTagRef);
              } else {
                (0, _util.warn)(
                  "Cannot update the struct tree: parent kid not found."
                );
                tagDict.set("P", fallbackRef);
                return;
              }
            } else if (parentKids instanceof _primitives.Dict) {
              parentKids = [parentKidsRef, newTagRef];
              parentKidsRef = xref.getNewTemporaryRef();
              parentDict.set("K", parentKidsRef);
              saveParentDict = true;
            }
            buffer.length = 0;
            await (0, _writer.writeObject)(
              parentKidsRef,
              parentKids,
              buffer,
              xref
            );
            newRefs.push({
              ref: parentKidsRef,
              data: buffer.join(""),
            });
            if (!saveParentDict) {
              return;
            }
            buffer.length = 0;
            await (0, _writer.writeObject)(parentRef, parentDict, buffer, xref);
            newRefs.push({
              ref: parentRef,
              data: buffer.join(""),
            });
          }
        }
        exports.StructTreeRoot = StructTreeRoot;
        class StructElementNode {
          constructor(tree, dict) {
            this.tree = tree;
            this.dict = dict;
            this.kids = [];
            this.parseKids();
          }
          get role() {
            const nameObj = this.dict.get("S");
            const name =
              nameObj instanceof _primitives.Name ? nameObj.name : "";
            const { root } = this.tree;
            if (root.roleMap.has(name)) {
              return root.roleMap.get(name);
            }
            return name;
          }
          parseKids() {
            let pageObjId = null;
            const objRef = this.dict.getRaw("Pg");
            if (objRef instanceof _primitives.Ref) {
              pageObjId = objRef.toString();
            }
            const kids = this.dict.get("K");
            if (Array.isArray(kids)) {
              for (const kid of kids) {
                const element = this.parseKid(pageObjId, kid);
                if (element) {
                  this.kids.push(element);
                }
              }
            } else {
              const element = this.parseKid(pageObjId, kids);
              if (element) {
                this.kids.push(element);
              }
            }
          }
          parseKid(pageObjId, kid) {
            if (Number.isInteger(kid)) {
              if (this.tree.pageDict.objId !== pageObjId) {
                return null;
              }
              return new StructElement({
                type: StructElementType.PAGE_CONTENT,
                mcid: kid,
                pageObjId,
              });
            }
            let kidDict = null;
            if (kid instanceof _primitives.Ref) {
              kidDict = this.dict.xref.fetch(kid);
            } else if (kid instanceof _primitives.Dict) {
              kidDict = kid;
            }
            if (!kidDict) {
              return null;
            }
            const pageRef = kidDict.getRaw("Pg");
            if (pageRef instanceof _primitives.Ref) {
              pageObjId = pageRef.toString();
            }
            const type =
              kidDict.get("Type") instanceof _primitives.Name
                ? kidDict.get("Type").name
                : null;
            if (type === "MCR") {
              if (this.tree.pageDict.objId !== pageObjId) {
                return null;
              }
              const kidRef = kidDict.getRaw("Stm");
              return new StructElement({
                type: StructElementType.STREAM_CONTENT,
                refObjId:
                  kidRef instanceof _primitives.Ref ? kidRef.toString() : null,
                pageObjId,
                mcid: kidDict.get("MCID"),
              });
            }
            if (type === "OBJR") {
              if (this.tree.pageDict.objId !== pageObjId) {
                return null;
              }
              const kidRef = kidDict.getRaw("Obj");
              return new StructElement({
                type: StructElementType.OBJECT,
                refObjId:
                  kidRef instanceof _primitives.Ref ? kidRef.toString() : null,
                pageObjId,
              });
            }
            return new StructElement({
              type: StructElementType.ELEMENT,
              dict: kidDict,
            });
          }
        }
        class StructElement {
          constructor({
            type,
            dict = null,
            mcid = null,
            pageObjId = null,
            refObjId = null,
          }) {
            this.type = type;
            this.dict = dict;
            this.mcid = mcid;
            this.pageObjId = pageObjId;
            this.refObjId = refObjId;
            this.parentNode = null;
          }
        }
        class StructTreePage {
          constructor(structTreeRoot, pageDict) {
            this.root = structTreeRoot;
            this.rootDict = structTreeRoot ? structTreeRoot.dict : null;
            this.pageDict = pageDict;
            this.nodes = [];
          }
          parse(pageRef) {
            if (!this.root || !this.rootDict) {
              return;
            }
            const parentTree = this.rootDict.get("ParentTree");
            if (!parentTree) {
              return;
            }
            const id = this.pageDict.get("StructParents");
            const ids =
              pageRef instanceof _primitives.Ref &&
              this.root.structParentIds?.get(pageRef);
            if (!Number.isInteger(id) && !ids) {
              return;
            }
            const map = new Map();
            const numberTree = new _name_number_tree.NumberTree(
              parentTree,
              this.rootDict.xref
            );
            if (Number.isInteger(id)) {
              const parentArray = numberTree.get(id);
              if (Array.isArray(parentArray)) {
                for (const ref of parentArray) {
                  if (ref instanceof _primitives.Ref) {
                    this.addNode(this.rootDict.xref.fetch(ref), map);
                  }
                }
              }
            }
            if (!ids) {
              return;
            }
            for (const [elemId, type] of ids) {
              const obj = numberTree.get(elemId);
              if (obj) {
                const elem = this.addNode(
                  this.rootDict.xref.fetchIfRef(obj),
                  map
                );
                if (
                  elem?.kids?.length === 1 &&
                  elem.kids[0].type === StructElementType.OBJECT
                ) {
                  elem.kids[0].type = type;
                }
              }
            }
          }
          addNode(dict, map, level = 0) {
            if (level > MAX_DEPTH) {
              (0, _util.warn)("StructTree MAX_DEPTH reached.");
              return null;
            }
            if (map.has(dict)) {
              return map.get(dict);
            }
            const element = new StructElementNode(this, dict);
            map.set(dict, element);
            const parent = dict.get("P");
            if (
              !parent ||
              (0, _primitives.isName)(parent.get("Type"), "StructTreeRoot")
            ) {
              if (!this.addTopLevelNode(dict, element)) {
                map.delete(dict);
              }
              return element;
            }
            const parentNode = this.addNode(parent, map, level + 1);
            if (!parentNode) {
              return element;
            }
            let save = false;
            for (const kid of parentNode.kids) {
              if (kid.type === StructElementType.ELEMENT && kid.dict === dict) {
                kid.parentNode = element;
                save = true;
              }
            }
            if (!save) {
              map.delete(dict);
            }
            return element;
          }
          addTopLevelNode(dict, element) {
            const obj = this.rootDict.get("K");
            if (!obj) {
              return false;
            }
            if (obj instanceof _primitives.Dict) {
              if (obj.objId !== dict.objId) {
                return false;
              }
              this.nodes[0] = element;
              return true;
            }
            if (!Array.isArray(obj)) {
              return true;
            }
            let save = false;
            for (let i = 0; i < obj.length; i++) {
              const kidRef = obj[i];
              if (kidRef?.toString() === dict.objId) {
                this.nodes[i] = element;
                save = true;
              }
            }
            return save;
          }
          get serializable() {
            function nodeToSerializable(node, parent, level = 0) {
              if (level > MAX_DEPTH) {
                (0, _util.warn)("StructTree too deep to be fully serialized.");
                return;
              }
              const obj = Object.create(null);
              obj.role = node.role;
              obj.children = [];
              parent.children.push(obj);
              const alt = node.dict.get("Alt");
              if (typeof alt === "string") {
                obj.alt = (0, _util.stringToPDFString)(alt);
              }
              const lang = node.dict.get("Lang");
              if (typeof lang === "string") {
                obj.lang = (0, _util.stringToPDFString)(lang);
              }
              for (const kid of node.kids) {
                const kidElement =
                  kid.type === StructElementType.ELEMENT
                    ? kid.parentNode
                    : null;
                if (kidElement) {
                  nodeToSerializable(kidElement, obj, level + 1);
                  continue;
                } else if (
                  kid.type === StructElementType.PAGE_CONTENT ||
                  kid.type === StructElementType.STREAM_CONTENT
                ) {
                  obj.children.push({
                    type: "content",
                    id: `p${kid.pageObjId}_mc${kid.mcid}`,
                  });
                } else if (kid.type === StructElementType.OBJECT) {
                  obj.children.push({
                    type: "object",
                    id: kid.refObjId,
                  });
                } else if (kid.type === StructElementType.ANNOTATION) {
                  obj.children.push({
                    type: "annotation",
                    id: `${_util.AnnotationPrefix}${kid.refObjId}`,
                  });
                }
              }
            }
            const root = Object.create(null);
            root.children = [];
            root.role = "Root";
            for (const child of this.nodes) {
              if (!child) {
                continue;
              }
              nodeToSerializable(child, root);
            }
            return root;
          }
        }
        exports.StructTreePage = StructTreePage;

        /***/
      },
      /* 73 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.incrementalUpdate = incrementalUpdate;
        exports.writeDict = writeDict;
        exports.writeObject = writeObject;
        var _util = __w_pdfjs_require__(2);
        var _primitives = __w_pdfjs_require__(4);
        var _core_utils = __w_pdfjs_require__(3);
        var _xml_parser = __w_pdfjs_require__(71);
        var _base_stream = __w_pdfjs_require__(5);
        var _crypto = __w_pdfjs_require__(74);
        async function writeObject(ref, obj, buffer, { encrypt = null }) {
          const transform = encrypt?.createCipherTransform(ref.num, ref.gen);
          buffer.push(`${ref.num} ${ref.gen} obj\n`);
          if (obj instanceof _primitives.Dict) {
            await writeDict(obj, buffer, transform);
          } else if (obj instanceof _base_stream.BaseStream) {
            await writeStream(obj, buffer, transform);
          } else if (Array.isArray(obj)) {
            await writeArray(obj, buffer, transform);
          }
          buffer.push("\nendobj\n");
        }
        async function writeDict(dict, buffer, transform) {
          buffer.push("<<");
          for (const key of dict.getKeys()) {
            buffer.push(` /${(0, _core_utils.escapePDFName)(key)} `);
            await writeValue(dict.getRaw(key), buffer, transform);
          }
          buffer.push(">>");
        }
        async function writeStream(stream, buffer, transform) {
          let string = stream.getString();
          const { dict } = stream;
          const [filter, params] = await Promise.all([
            dict.getAsync("Filter"),
            dict.getAsync("DecodeParms"),
          ]);
          const filterZero = Array.isArray(filter)
            ? await dict.xref.fetchIfRefAsync(filter[0])
            : filter;
          const isFilterZeroFlateDecode = (0, _primitives.isName)(
            filterZero,
            "FlateDecode"
          );
          const MIN_LENGTH_FOR_COMPRESSING = 256;
          if (
            typeof CompressionStream !== "undefined" &&
            (string.length >= MIN_LENGTH_FOR_COMPRESSING ||
              isFilterZeroFlateDecode)
          ) {
            try {
              const byteArray = (0, _util.stringToBytes)(string);
              const cs = new CompressionStream("deflate");
              const writer = cs.writable.getWriter();
              writer.write(byteArray);
              writer.close();
              const buf = await new Response(cs.readable).arrayBuffer();
              string = (0, _util.bytesToString)(new Uint8Array(buf));
              let newFilter, newParams;
              if (!filter) {
                newFilter = _primitives.Name.get("FlateDecode");
              } else if (!isFilterZeroFlateDecode) {
                newFilter = Array.isArray(filter)
                  ? [_primitives.Name.get("FlateDecode"), ...filter]
                  : [_primitives.Name.get("FlateDecode"), filter];
                if (params) {
                  newParams = Array.isArray(params)
                    ? [null, ...params]
                    : [null, params];
                }
              }
              if (newFilter) {
                dict.set("Filter", newFilter);
              }
              if (newParams) {
                dict.set("DecodeParms", newParams);
              }
            } catch (ex) {
              (0, _util.info)(`writeStream - cannot compress data: "${ex}".`);
            }
          }
          if (transform) {
            string = transform.encryptString(string);
          }
          dict.set("Length", string.length);
          await writeDict(dict, buffer, transform);
          buffer.push(" stream\n", string, "\nendstream");
        }
        async function writeArray(array, buffer, transform) {
          buffer.push("[");
          let first = true;
          for (const val of array) {
            if (!first) {
              buffer.push(" ");
            } else {
              first = false;
            }
            await writeValue(val, buffer, transform);
          }
          buffer.push("]");
        }
        async function writeValue(value, buffer, transform) {
          if (value instanceof _primitives.Name) {
            buffer.push(`/${(0, _core_utils.escapePDFName)(value.name)}`);
          } else if (value instanceof _primitives.Ref) {
            buffer.push(`${value.num} ${value.gen} R`);
          } else if (Array.isArray(value)) {
            await writeArray(value, buffer, transform);
          } else if (typeof value === "string") {
            if (transform) {
              value = transform.encryptString(value);
            }
            buffer.push(`(${(0, _core_utils.escapeString)(value)})`);
          } else if (typeof value === "number") {
            buffer.push((0, _core_utils.numberToString)(value));
          } else if (typeof value === "boolean") {
            buffer.push(value.toString());
          } else if (value instanceof _primitives.Dict) {
            await writeDict(value, buffer, transform);
          } else if (value instanceof _base_stream.BaseStream) {
            await writeStream(value, buffer, transform);
          } else if (value === null) {
            buffer.push("null");
          } else {
            (0, _util.warn)(
              `Unhandled value in writer: ${typeof value}, please file a bug.`
            );
          }
        }
        function writeInt(number, size, offset, buffer) {
          for (let i = size + offset - 1; i > offset - 1; i--) {
            buffer[i] = number & 0xff;
            number >>= 8;
          }
          return offset + size;
        }
        function writeString(string, offset, buffer) {
          for (let i = 0, len = string.length; i < len; i++) {
            buffer[offset + i] = string.charCodeAt(i) & 0xff;
          }
        }
        function computeMD5(filesize, xrefInfo) {
          const time = Math.floor(Date.now() / 1000);
          const filename = xrefInfo.filename || "";
          const md5Buffer = [time.toString(), filename, filesize.toString()];
          let md5BufferLen = md5Buffer.reduce((a, str) => a + str.length, 0);
          for (const value of Object.values(xrefInfo.info)) {
            md5Buffer.push(value);
            md5BufferLen += value.length;
          }
          const array = new Uint8Array(md5BufferLen);
          let offset = 0;
          for (const str of md5Buffer) {
            writeString(str, offset, array);
            offset += str.length;
          }
          return (0, _util.bytesToString)((0, _crypto.calculateMD5)(array));
        }
        function writeXFADataForAcroform(str, newRefs) {
          const xml = new _xml_parser.SimpleXMLParser({
            hasAttributes: true,
          }).parseFromString(str);
          for (const { xfa } of newRefs) {
            if (!xfa) {
              continue;
            }
            const { path, value } = xfa;
            if (!path) {
              continue;
            }
            const nodePath = (0, _core_utils.parseXFAPath)(path);
            let node = xml.documentElement.searchNode(nodePath, 0);
            if (!node && nodePath.length > 1) {
              node = xml.documentElement.searchNode([nodePath.at(-1)], 0);
            }
            if (node) {
              node.childNodes = Array.isArray(value)
                ? value.map(
                    (val) => new _xml_parser.SimpleDOMNode("value", val)
                  )
                : [new _xml_parser.SimpleDOMNode("#text", value)];
            } else {
              (0, _util.warn)(`Node not found for path: ${path}`);
            }
          }
          const buffer = [];
          xml.documentElement.dump(buffer);
          return buffer.join("");
        }
        async function updateAcroform({
          xref,
          acroForm,
          acroFormRef,
          hasXfa,
          hasXfaDatasetsEntry,
          xfaDatasetsRef,
          needAppearances,
          newRefs,
        }) {
          if (hasXfa && !hasXfaDatasetsEntry && !xfaDatasetsRef) {
            (0, _util.warn)("XFA - Cannot save it");
          }
          if (
            !needAppearances &&
            (!hasXfa || !xfaDatasetsRef || hasXfaDatasetsEntry)
          ) {
            return;
          }
          const dict = acroForm.clone();
          if (hasXfa && !hasXfaDatasetsEntry) {
            const newXfa = acroForm.get("XFA").slice();
            newXfa.splice(2, 0, "datasets");
            newXfa.splice(3, 0, xfaDatasetsRef);
            dict.set("XFA", newXfa);
          }
          if (needAppearances) {
            dict.set("NeedAppearances", true);
          }
          const buffer = [];
          await writeObject(acroFormRef, dict, buffer, xref);
          newRefs.push({
            ref: acroFormRef,
            data: buffer.join(""),
          });
        }
        function updateXFA({ xfaData, xfaDatasetsRef, newRefs, xref }) {
          if (xfaData === null) {
            const datasets = xref.fetchIfRef(xfaDatasetsRef);
            xfaData = writeXFADataForAcroform(datasets.getString(), newRefs);
          }
          const encrypt = xref.encrypt;
          if (encrypt) {
            const transform = encrypt.createCipherTransform(
              xfaDatasetsRef.num,
              xfaDatasetsRef.gen
            );
            xfaData = transform.encryptString(xfaData);
          }
          const data =
            `${xfaDatasetsRef.num} ${xfaDatasetsRef.gen} obj\n` +
            `<< /Type /EmbeddedFile /Length ${xfaData.length}>>\nstream\n` +
            xfaData +
            "\nendstream\nendobj\n";
          newRefs.push({
            ref: xfaDatasetsRef,
            data,
          });
        }
        async function incrementalUpdate({
          originalData,
          xrefInfo,
          newRefs,
          xref = null,
          hasXfa = false,
          xfaDatasetsRef = null,
          hasXfaDatasetsEntry = false,
          needAppearances,
          acroFormRef = null,
          acroForm = null,
          xfaData = null,
        }) {
          await updateAcroform({
            xref,
            acroForm,
            acroFormRef,
            hasXfa,
            hasXfaDatasetsEntry,
            xfaDatasetsRef,
            needAppearances,
            newRefs,
          });
          if (hasXfa) {
            updateXFA({
              xfaData,
              xfaDatasetsRef,
              newRefs,
              xref,
            });
          }
          const newXref = new _primitives.Dict(null);
          const refForXrefTable = xrefInfo.newRef;
          let buffer, baseOffset;
          const lastByte = originalData.at(-1);
          if (lastByte === 0x0a || lastByte === 0x0d) {
            buffer = [];
            baseOffset = originalData.length;
          } else {
            buffer = ["\n"];
            baseOffset = originalData.length + 1;
          }
          newXref.set("Size", refForXrefTable.num + 1);
          newXref.set("Prev", xrefInfo.startXRef);
          newXref.set("Type", _primitives.Name.get("XRef"));
          if (xrefInfo.rootRef !== null) {
            newXref.set("Root", xrefInfo.rootRef);
          }
          if (xrefInfo.infoRef !== null) {
            newXref.set("Info", xrefInfo.infoRef);
          }
          if (xrefInfo.encryptRef !== null) {
            newXref.set("Encrypt", xrefInfo.encryptRef);
          }
          newRefs.push({
            ref: refForXrefTable,
            data: "",
          });
          newRefs = newRefs.sort((a, b) => {
            return a.ref.num - b.ref.num;
          });
          const xrefTableData = [[0, 1, 0xffff]];
          const indexes = [0, 1];
          let maxOffset = 0;
          for (const { ref, data } of newRefs) {
            maxOffset = Math.max(maxOffset, baseOffset);
            xrefTableData.push([1, baseOffset, Math.min(ref.gen, 0xffff)]);
            baseOffset += data.length;
            indexes.push(ref.num, 1);
            buffer.push(data);
          }
          newXref.set("Index", indexes);
          if (Array.isArray(xrefInfo.fileIds) && xrefInfo.fileIds.length > 0) {
            const md5 = computeMD5(baseOffset, xrefInfo);
            newXref.set("ID", [xrefInfo.fileIds[0], md5]);
          }
          const offsetSize = Math.ceil(Math.log2(maxOffset) / 8);
          const sizes = [1, offsetSize, 2];
          const structSize = sizes[0] + sizes[1] + sizes[2];
          const tableLength = structSize * xrefTableData.length;
          newXref.set("W", sizes);
          newXref.set("Length", tableLength);
          buffer.push(`${refForXrefTable.num} ${refForXrefTable.gen} obj\n`);
          await writeDict(newXref, buffer, null);
          buffer.push(" stream\n");
          const bufferLen = buffer.reduce((a, str) => a + str.length, 0);
          const footer = `\nendstream\nendobj\nstartxref\n${baseOffset}\n%%EOF\n`;
          const array = new Uint8Array(
            originalData.length + bufferLen + tableLength + footer.length
          );
          array.set(originalData);
          let offset = originalData.length;
          for (const str of buffer) {
            writeString(str, offset, array);
            offset += str.length;
          }
          for (const [type, objOffset, gen] of xrefTableData) {
            offset = writeInt(type, sizes[0], offset, array);
            offset = writeInt(objOffset, sizes[1], offset, array);
            offset = writeInt(gen, sizes[2], offset, array);
          }
          writeString(footer, offset, array);
          return array;
        }

        /***/
      },
      /* 74 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.calculateSHA256 =
          exports.calculateMD5 =
          exports.PDF20 =
          exports.PDF17 =
          exports.CipherTransformFactory =
          exports.ARCFourCipher =
          exports.AES256Cipher =
          exports.AES128Cipher =
            void 0;
        exports.calculateSHA384 = calculateSHA384;
        exports.calculateSHA512 = void 0;
        var _util = __w_pdfjs_require__(2);
        var _primitives = __w_pdfjs_require__(4);
        var _decrypt_stream = __w_pdfjs_require__(75);
        class ARCFourCipher {
          constructor(key) {
            this.a = 0;
            this.b = 0;
            const s = new Uint8Array(256);
            const keyLength = key.length;
            for (let i = 0; i < 256; ++i) {
              s[i] = i;
            }
            for (let i = 0, j = 0; i < 256; ++i) {
              const tmp = s[i];
              j = (j + tmp + key[i % keyLength]) & 0xff;
              s[i] = s[j];
              s[j] = tmp;
            }
            this.s = s;
          }
          encryptBlock(data) {
            let a = this.a,
              b = this.b;
            const s = this.s;
            const n = data.length;
            const output = new Uint8Array(n);
            for (let i = 0; i < n; ++i) {
              a = (a + 1) & 0xff;
              const tmp = s[a];
              b = (b + tmp) & 0xff;
              const tmp2 = s[b];
              s[a] = tmp2;
              s[b] = tmp;
              output[i] = data[i] ^ s[(tmp + tmp2) & 0xff];
            }
            this.a = a;
            this.b = b;
            return output;
          }
          decryptBlock(data) {
            return this.encryptBlock(data);
          }
          encrypt(data) {
            return this.encryptBlock(data);
          }
        }
        exports.ARCFourCipher = ARCFourCipher;
        const calculateMD5 = (function calculateMD5Closure() {
          const r = new Uint8Array([
            7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9,
            14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4,
            11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15,
            21, 6, 10, 15, 21, 6, 10, 15, 21,
          ]);
          const k = new Int32Array([
            -680876936, -389564586, 606105819, -1044525330, -176418897,
            1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063,
            -1990404162, 1804603682, -40341101, -1502002290, 1236535329,
            -165796510, -1069501632, 643717713, -373897302, -701558691,
            38016083, -660478335, -405537848, 568446438, -1019803690,
            -187363961, 1163531501, -1444681467, -51403784, 1735328473,
            -1926607734, -378558, -2022574463, 1839030562, -35309556,
            -1530992060, 1272893353, -155497632, -1094730640, 681279174,
            -358537222, -722521979, 76029189, -640364487, -421815835, 530742520,
            -995338651, -198630844, 1126891415, -1416354905, -57434055,
            1700485571, -1894986606, -1051523, -2054922799, 1873313359,
            -30611744, -1560198380, 1309151649, -145523070, -1120210379,
            718787259, -343485551,
          ]);
          function hash(data, offset, length) {
            let h0 = 1732584193,
              h1 = -271733879,
              h2 = -1732584194,
              h3 = 271733878;
            const paddedLength = (length + 72) & ~63;
            const padded = new Uint8Array(paddedLength);
            let i, j;
            for (i = 0; i < length; ++i) {
              padded[i] = data[offset++];
            }
            padded[i++] = 0x80;
            const n = paddedLength - 8;
            while (i < n) {
              padded[i++] = 0;
            }
            padded[i++] = (length << 3) & 0xff;
            padded[i++] = (length >> 5) & 0xff;
            padded[i++] = (length >> 13) & 0xff;
            padded[i++] = (length >> 21) & 0xff;
            padded[i++] = (length >>> 29) & 0xff;
            padded[i++] = 0;
            padded[i++] = 0;
            padded[i++] = 0;
            const w = new Int32Array(16);
            for (i = 0; i < paddedLength; ) {
              for (j = 0; j < 16; ++j, i += 4) {
                w[j] =
                  padded[i] |
                  (padded[i + 1] << 8) |
                  (padded[i + 2] << 16) |
                  (padded[i + 3] << 24);
              }
              let a = h0,
                b = h1,
                c = h2,
                d = h3,
                f,
                g;
              for (j = 0; j < 64; ++j) {
                if (j < 16) {
                  f = (b & c) | (~b & d);
                  g = j;
                } else if (j < 32) {
                  f = (d & b) | (~d & c);
                  g = (5 * j + 1) & 15;
                } else if (j < 48) {
                  f = b ^ c ^ d;
                  g = (3 * j + 5) & 15;
                } else {
                  f = c ^ (b | ~d);
                  g = (7 * j) & 15;
                }
                const tmp = d,
                  rotateArg = (a + f + k[j] + w[g]) | 0,
                  rotate = r[j];
                d = c;
                c = b;
                b =
                  (b +
                    ((rotateArg << rotate) | (rotateArg >>> (32 - rotate)))) |
                  0;
                a = tmp;
              }
              h0 = (h0 + a) | 0;
              h1 = (h1 + b) | 0;
              h2 = (h2 + c) | 0;
              h3 = (h3 + d) | 0;
            }
            return new Uint8Array([
              h0 & 0xff,
              (h0 >> 8) & 0xff,
              (h0 >> 16) & 0xff,
              (h0 >>> 24) & 0xff,
              h1 & 0xff,
              (h1 >> 8) & 0xff,
              (h1 >> 16) & 0xff,
              (h1 >>> 24) & 0xff,
              h2 & 0xff,
              (h2 >> 8) & 0xff,
              (h2 >> 16) & 0xff,
              (h2 >>> 24) & 0xff,
              h3 & 0xff,
              (h3 >> 8) & 0xff,
              (h3 >> 16) & 0xff,
              (h3 >>> 24) & 0xff,
            ]);
          }
          return hash;
        })();
        exports.calculateMD5 = calculateMD5;
        class Word64 {
          constructor(highInteger, lowInteger) {
            this.high = highInteger | 0;
            this.low = lowInteger | 0;
          }
          and(word) {
            this.high &= word.high;
            this.low &= word.low;
          }
          xor(word) {
            this.high ^= word.high;
            this.low ^= word.low;
          }
          or(word) {
            this.high |= word.high;
            this.low |= word.low;
          }
          shiftRight(places) {
            if (places >= 32) {
              this.low = (this.high >>> (places - 32)) | 0;
              this.high = 0;
            } else {
              this.low = (this.low >>> places) | (this.high << (32 - places));
              this.high = (this.high >>> places) | 0;
            }
          }
          shiftLeft(places) {
            if (places >= 32) {
              this.high = this.low << (places - 32);
              this.low = 0;
            } else {
              this.high = (this.high << places) | (this.low >>> (32 - places));
              this.low <<= places;
            }
          }
          rotateRight(places) {
            let low, high;
            if (places & 32) {
              high = this.low;
              low = this.high;
            } else {
              low = this.low;
              high = this.high;
            }
            places &= 31;
            this.low = (low >>> places) | (high << (32 - places));
            this.high = (high >>> places) | (low << (32 - places));
          }
          not() {
            this.high = ~this.high;
            this.low = ~this.low;
          }
          add(word) {
            const lowAdd = (this.low >>> 0) + (word.low >>> 0);
            let highAdd = (this.high >>> 0) + (word.high >>> 0);
            if (lowAdd > 0xffffffff) {
              highAdd += 1;
            }
            this.low = lowAdd | 0;
            this.high = highAdd | 0;
          }
          copyTo(bytes, offset) {
            bytes[offset] = (this.high >>> 24) & 0xff;
            bytes[offset + 1] = (this.high >> 16) & 0xff;
            bytes[offset + 2] = (this.high >> 8) & 0xff;
            bytes[offset + 3] = this.high & 0xff;
            bytes[offset + 4] = (this.low >>> 24) & 0xff;
            bytes[offset + 5] = (this.low >> 16) & 0xff;
            bytes[offset + 6] = (this.low >> 8) & 0xff;
            bytes[offset + 7] = this.low & 0xff;
          }
          assign(word) {
            this.high = word.high;
            this.low = word.low;
          }
        }
        const calculateSHA256 = (function calculateSHA256Closure() {
          function rotr(x, n) {
            return (x >>> n) | (x << (32 - n));
          }
          function ch(x, y, z) {
            return (x & y) ^ (~x & z);
          }
          function maj(x, y, z) {
            return (x & y) ^ (x & z) ^ (y & z);
          }
          function sigma(x) {
            return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);
          }
          function sigmaPrime(x) {
            return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);
          }
          function littleSigma(x) {
            return rotr(x, 7) ^ rotr(x, 18) ^ (x >>> 3);
          }
          function littleSigmaPrime(x) {
            return rotr(x, 17) ^ rotr(x, 19) ^ (x >>> 10);
          }
          const k = [
            0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,
            0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,
            0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,
            0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
            0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,
            0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,
            0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,
            0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
            0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,
            0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,
            0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,
            0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
            0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,
          ];
          function hash(data, offset, length) {
            let h0 = 0x6a09e667,
              h1 = 0xbb67ae85,
              h2 = 0x3c6ef372,
              h3 = 0xa54ff53a,
              h4 = 0x510e527f,
              h5 = 0x9b05688c,
              h6 = 0x1f83d9ab,
              h7 = 0x5be0cd19;
            const paddedLength = Math.ceil((length + 9) / 64) * 64;
            const padded = new Uint8Array(paddedLength);
            let i, j;
            for (i = 0; i < length; ++i) {
              padded[i] = data[offset++];
            }
            padded[i++] = 0x80;
            const n = paddedLength - 8;
            while (i < n) {
              padded[i++] = 0;
            }
            padded[i++] = 0;
            padded[i++] = 0;
            padded[i++] = 0;
            padded[i++] = (length >>> 29) & 0xff;
            padded[i++] = (length >> 21) & 0xff;
            padded[i++] = (length >> 13) & 0xff;
            padded[i++] = (length >> 5) & 0xff;
            padded[i++] = (length << 3) & 0xff;
            const w = new Uint32Array(64);
            for (i = 0; i < paddedLength; ) {
              for (j = 0; j < 16; ++j) {
                w[j] =
                  (padded[i] << 24) |
                  (padded[i + 1] << 16) |
                  (padded[i + 2] << 8) |
                  padded[i + 3];
                i += 4;
              }
              for (j = 16; j < 64; ++j) {
                w[j] =
                  (littleSigmaPrime(w[j - 2]) +
                    w[j - 7] +
                    littleSigma(w[j - 15]) +
                    w[j - 16]) |
                  0;
              }
              let a = h0,
                b = h1,
                c = h2,
                d = h3,
                e = h4,
                f = h5,
                g = h6,
                h = h7,
                t1,
                t2;
              for (j = 0; j < 64; ++j) {
                t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];
                t2 = sigma(a) + maj(a, b, c);
                h = g;
                g = f;
                f = e;
                e = (d + t1) | 0;
                d = c;
                c = b;
                b = a;
                a = (t1 + t2) | 0;
              }
              h0 = (h0 + a) | 0;
              h1 = (h1 + b) | 0;
              h2 = (h2 + c) | 0;
              h3 = (h3 + d) | 0;
              h4 = (h4 + e) | 0;
              h5 = (h5 + f) | 0;
              h6 = (h6 + g) | 0;
              h7 = (h7 + h) | 0;
            }
            return new Uint8Array([
              (h0 >> 24) & 0xff,
              (h0 >> 16) & 0xff,
              (h0 >> 8) & 0xff,
              h0 & 0xff,
              (h1 >> 24) & 0xff,
              (h1 >> 16) & 0xff,
              (h1 >> 8) & 0xff,
              h1 & 0xff,
              (h2 >> 24) & 0xff,
              (h2 >> 16) & 0xff,
              (h2 >> 8) & 0xff,
              h2 & 0xff,
              (h3 >> 24) & 0xff,
              (h3 >> 16) & 0xff,
              (h3 >> 8) & 0xff,
              h3 & 0xff,
              (h4 >> 24) & 0xff,
              (h4 >> 16) & 0xff,
              (h4 >> 8) & 0xff,
              h4 & 0xff,
              (h5 >> 24) & 0xff,
              (h5 >> 16) & 0xff,
              (h5 >> 8) & 0xff,
              h5 & 0xff,
              (h6 >> 24) & 0xff,
              (h6 >> 16) & 0xff,
              (h6 >> 8) & 0xff,
              h6 & 0xff,
              (h7 >> 24) & 0xff,
              (h7 >> 16) & 0xff,
              (h7 >> 8) & 0xff,
              h7 & 0xff,
            ]);
          }
          return hash;
        })();
        exports.calculateSHA256 = calculateSHA256;
        const calculateSHA512 = (function calculateSHA512Closure() {
          function ch(result, x, y, z, tmp) {
            result.assign(x);
            result.and(y);
            tmp.assign(x);
            tmp.not();
            tmp.and(z);
            result.xor(tmp);
          }
          function maj(result, x, y, z, tmp) {
            result.assign(x);
            result.and(y);
            tmp.assign(x);
            tmp.and(z);
            result.xor(tmp);
            tmp.assign(y);
            tmp.and(z);
            result.xor(tmp);
          }
          function sigma(result, x, tmp) {
            result.assign(x);
            result.rotateRight(28);
            tmp.assign(x);
            tmp.rotateRight(34);
            result.xor(tmp);
            tmp.assign(x);
            tmp.rotateRight(39);
            result.xor(tmp);
          }
          function sigmaPrime(result, x, tmp) {
            result.assign(x);
            result.rotateRight(14);
            tmp.assign(x);
            tmp.rotateRight(18);
            result.xor(tmp);
            tmp.assign(x);
            tmp.rotateRight(41);
            result.xor(tmp);
          }
          function littleSigma(result, x, tmp) {
            result.assign(x);
            result.rotateRight(1);
            tmp.assign(x);
            tmp.rotateRight(8);
            result.xor(tmp);
            tmp.assign(x);
            tmp.shiftRight(7);
            result.xor(tmp);
          }
          function littleSigmaPrime(result, x, tmp) {
            result.assign(x);
            result.rotateRight(19);
            tmp.assign(x);
            tmp.rotateRight(61);
            result.xor(tmp);
            tmp.assign(x);
            tmp.shiftRight(6);
            result.xor(tmp);
          }
          const k = [
            new Word64(0x428a2f98, 0xd728ae22),
            new Word64(0x71374491, 0x23ef65cd),
            new Word64(0xb5c0fbcf, 0xec4d3b2f),
            new Word64(0xe9b5dba5, 0x8189dbbc),
            new Word64(0x3956c25b, 0xf348b538),
            new Word64(0x59f111f1, 0xb605d019),
            new Word64(0x923f82a4, 0xaf194f9b),
            new Word64(0xab1c5ed5, 0xda6d8118),
            new Word64(0xd807aa98, 0xa3030242),
            new Word64(0x12835b01, 0x45706fbe),
            new Word64(0x243185be, 0x4ee4b28c),
            new Word64(0x550c7dc3, 0xd5ffb4e2),
            new Word64(0x72be5d74, 0xf27b896f),
            new Word64(0x80deb1fe, 0x3b1696b1),
            new Word64(0x9bdc06a7, 0x25c71235),
            new Word64(0xc19bf174, 0xcf692694),
            new Word64(0xe49b69c1, 0x9ef14ad2),
            new Word64(0xefbe4786, 0x384f25e3),
            new Word64(0x0fc19dc6, 0x8b8cd5b5),
            new Word64(0x240ca1cc, 0x77ac9c65),
            new Word64(0x2de92c6f, 0x592b0275),
            new Word64(0x4a7484aa, 0x6ea6e483),
            new Word64(0x5cb0a9dc, 0xbd41fbd4),
            new Word64(0x76f988da, 0x831153b5),
            new Word64(0x983e5152, 0xee66dfab),
            new Word64(0xa831c66d, 0x2db43210),
            new Word64(0xb00327c8, 0x98fb213f),
            new Word64(0xbf597fc7, 0xbeef0ee4),
            new Word64(0xc6e00bf3, 0x3da88fc2),
            new Word64(0xd5a79147, 0x930aa725),
            new Word64(0x06ca6351, 0xe003826f),
            new Word64(0x14292967, 0x0a0e6e70),
            new Word64(0x27b70a85, 0x46d22ffc),
            new Word64(0x2e1b2138, 0x5c26c926),
            new Word64(0x4d2c6dfc, 0x5ac42aed),
            new Word64(0x53380d13, 0x9d95b3df),
            new Word64(0x650a7354, 0x8baf63de),
            new Word64(0x766a0abb, 0x3c77b2a8),
            new Word64(0x81c2c92e, 0x47edaee6),
            new Word64(0x92722c85, 0x1482353b),
            new Word64(0xa2bfe8a1, 0x4cf10364),
            new Word64(0xa81a664b, 0xbc423001),
            new Word64(0xc24b8b70, 0xd0f89791),
            new Word64(0xc76c51a3, 0x0654be30),
            new Word64(0xd192e819, 0xd6ef5218),
            new Word64(0xd6990624, 0x5565a910),
            new Word64(0xf40e3585, 0x5771202a),
            new Word64(0x106aa070, 0x32bbd1b8),
            new Word64(0x19a4c116, 0xb8d2d0c8),
            new Word64(0x1e376c08, 0x5141ab53),
            new Word64(0x2748774c, 0xdf8eeb99),
            new Word64(0x34b0bcb5, 0xe19b48a8),
            new Word64(0x391c0cb3, 0xc5c95a63),
            new Word64(0x4ed8aa4a, 0xe3418acb),
            new Word64(0x5b9cca4f, 0x7763e373),
            new Word64(0x682e6ff3, 0xd6b2b8a3),
            new Word64(0x748f82ee, 0x5defb2fc),
            new Word64(0x78a5636f, 0x43172f60),
            new Word64(0x84c87814, 0xa1f0ab72),
            new Word64(0x8cc70208, 0x1a6439ec),
            new Word64(0x90befffa, 0x23631e28),
            new Word64(0xa4506ceb, 0xde82bde9),
            new Word64(0xbef9a3f7, 0xb2c67915),
            new Word64(0xc67178f2, 0xe372532b),
            new Word64(0xca273ece, 0xea26619c),
            new Word64(0xd186b8c7, 0x21c0c207),
            new Word64(0xeada7dd6, 0xcde0eb1e),
            new Word64(0xf57d4f7f, 0xee6ed178),
            new Word64(0x06f067aa, 0x72176fba),
            new Word64(0x0a637dc5, 0xa2c898a6),
            new Word64(0x113f9804, 0xbef90dae),
            new Word64(0x1b710b35, 0x131c471b),
            new Word64(0x28db77f5, 0x23047d84),
            new Word64(0x32caab7b, 0x40c72493),
            new Word64(0x3c9ebe0a, 0x15c9bebc),
            new Word64(0x431d67c4, 0x9c100d4c),
            new Word64(0x4cc5d4be, 0xcb3e42b6),
            new Word64(0x597f299c, 0xfc657e2a),
            new Word64(0x5fcb6fab, 0x3ad6faec),
            new Word64(0x6c44198c, 0x4a475817),
          ];
          function hash(data, offset, length, mode384 = false) {
            let h0, h1, h2, h3, h4, h5, h6, h7;
            if (!mode384) {
              h0 = new Word64(0x6a09e667, 0xf3bcc908);
              h1 = new Word64(0xbb67ae85, 0x84caa73b);
              h2 = new Word64(0x3c6ef372, 0xfe94f82b);
              h3 = new Word64(0xa54ff53a, 0x5f1d36f1);
              h4 = new Word64(0x510e527f, 0xade682d1);
              h5 = new Word64(0x9b05688c, 0x2b3e6c1f);
              h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);
              h7 = new Word64(0x5be0cd19, 0x137e2179);
            } else {
              h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);
              h1 = new Word64(0x629a292a, 0x367cd507);
              h2 = new Word64(0x9159015a, 0x3070dd17);
              h3 = new Word64(0x152fecd8, 0xf70e5939);
              h4 = new Word64(0x67332667, 0xffc00b31);
              h5 = new Word64(0x8eb44a87, 0x68581511);
              h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);
              h7 = new Word64(0x47b5481d, 0xbefa4fa4);
            }
            const paddedLength = Math.ceil((length + 17) / 128) * 128;
            const padded = new Uint8Array(paddedLength);
            let i, j;
            for (i = 0; i < length; ++i) {
              padded[i] = data[offset++];
            }
            padded[i++] = 0x80;
            const n = paddedLength - 16;
            while (i < n) {
              padded[i++] = 0;
            }
            padded[i++] = 0;
            padded[i++] = 0;
            padded[i++] = 0;
            padded[i++] = 0;
            padded[i++] = 0;
            padded[i++] = 0;
            padded[i++] = 0;
            padded[i++] = 0;
            padded[i++] = 0;
            padded[i++] = 0;
            padded[i++] = 0;
            padded[i++] = (length >>> 29) & 0xff;
            padded[i++] = (length >> 21) & 0xff;
            padded[i++] = (length >> 13) & 0xff;
            padded[i++] = (length >> 5) & 0xff;
            padded[i++] = (length << 3) & 0xff;
            const w = new Array(80);
            for (i = 0; i < 80; i++) {
              w[i] = new Word64(0, 0);
            }
            let a = new Word64(0, 0),
              b = new Word64(0, 0),
              c = new Word64(0, 0);
            let d = new Word64(0, 0),
              e = new Word64(0, 0),
              f = new Word64(0, 0);
            let g = new Word64(0, 0),
              h = new Word64(0, 0);
            const t1 = new Word64(0, 0),
              t2 = new Word64(0, 0);
            const tmp1 = new Word64(0, 0),
              tmp2 = new Word64(0, 0);
            let tmp3;
            for (i = 0; i < paddedLength; ) {
              for (j = 0; j < 16; ++j) {
                w[j].high =
                  (padded[i] << 24) |
                  (padded[i + 1] << 16) |
                  (padded[i + 2] << 8) |
                  padded[i + 3];
                w[j].low =
                  (padded[i + 4] << 24) |
                  (padded[i + 5] << 16) |
                  (padded[i + 6] << 8) |
                  padded[i + 7];
                i += 8;
              }
              for (j = 16; j < 80; ++j) {
                tmp3 = w[j];
                littleSigmaPrime(tmp3, w[j - 2], tmp2);
                tmp3.add(w[j - 7]);
                littleSigma(tmp1, w[j - 15], tmp2);
                tmp3.add(tmp1);
                tmp3.add(w[j - 16]);
              }
              a.assign(h0);
              b.assign(h1);
              c.assign(h2);
              d.assign(h3);
              e.assign(h4);
              f.assign(h5);
              g.assign(h6);
              h.assign(h7);
              for (j = 0; j < 80; ++j) {
                t1.assign(h);
                sigmaPrime(tmp1, e, tmp2);
                t1.add(tmp1);
                ch(tmp1, e, f, g, tmp2);
                t1.add(tmp1);
                t1.add(k[j]);
                t1.add(w[j]);
                sigma(t2, a, tmp2);
                maj(tmp1, a, b, c, tmp2);
                t2.add(tmp1);
                tmp3 = h;
                h = g;
                g = f;
                f = e;
                d.add(t1);
                e = d;
                d = c;
                c = b;
                b = a;
                tmp3.assign(t1);
                tmp3.add(t2);
                a = tmp3;
              }
              h0.add(a);
              h1.add(b);
              h2.add(c);
              h3.add(d);
              h4.add(e);
              h5.add(f);
              h6.add(g);
              h7.add(h);
            }
            let result;
            if (!mode384) {
              result = new Uint8Array(64);
              h0.copyTo(result, 0);
              h1.copyTo(result, 8);
              h2.copyTo(result, 16);
              h3.copyTo(result, 24);
              h4.copyTo(result, 32);
              h5.copyTo(result, 40);
              h6.copyTo(result, 48);
              h7.copyTo(result, 56);
            } else {
              result = new Uint8Array(48);
              h0.copyTo(result, 0);
              h1.copyTo(result, 8);
              h2.copyTo(result, 16);
              h3.copyTo(result, 24);
              h4.copyTo(result, 32);
              h5.copyTo(result, 40);
            }
            return result;
          }
          return hash;
        })();
        exports.calculateSHA512 = calculateSHA512;
        function calculateSHA384(data, offset, length) {
          return calculateSHA512(data, offset, length, true);
        }
        class NullCipher {
          decryptBlock(data) {
            return data;
          }
          encrypt(data) {
            return data;
          }
        }
        class AESBaseCipher {
          constructor() {
            if (this.constructor === AESBaseCipher) {
              (0, _util.unreachable)("Cannot initialize AESBaseCipher.");
            }
            this._s = new Uint8Array([
              0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67,
              0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59,
              0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7,
              0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1,
              0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05,
              0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83,
              0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29,
              0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b,
              0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa,
              0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c,
              0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc,
              0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec,
              0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19,
              0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee,
              0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49,
              0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,
              0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4,
              0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6,
              0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70,
              0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9,
              0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e,
              0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1,
              0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0,
              0x54, 0xbb, 0x16,
            ]);
            this._inv_s = new Uint8Array([
              0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3,
              0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f,
              0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54,
              0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b,
              0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24,
              0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8,
              0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d,
              0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda,
              0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab,
              0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3,
              0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1,
              0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41,
              0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6,
              0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9,
              0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d,
              0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b,
              0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0,
              0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07,
              0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60,
              0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f,
              0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5,
              0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b,
              0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55,
              0x21, 0x0c, 0x7d,
            ]);
            this._mix = new Uint32Array([
              0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c,
              0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553,
              0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662,
              0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad,
              0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8,
              0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf,
              0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d,
              0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a,
              0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f,
              0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0,
              0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1,
              0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e,
              0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6,
              0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1,
              0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8,
              0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f,
              0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a,
              0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815,
              0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24,
              0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190,
              0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5,
              0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2,
              0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b,
              0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c,
              0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49,
              0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc,
              0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd,
              0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2,
              0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47,
              0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360,
              0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809,
              0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e,
              0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0,
              0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df,
              0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee,
              0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621,
              0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964,
              0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043,
              0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17,
              0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430,
              0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75,
              0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba,
              0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b,
              0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4,
              0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a,
              0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d,
              0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34,
              0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713,
              0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6,
              0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999,
              0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8,
              0x8d4697a3,
            ]);
            this._mixCol = new Uint8Array(256);
            for (let i = 0; i < 256; i++) {
              this._mixCol[i] = i < 128 ? i << 1 : (i << 1) ^ 0x1b;
            }
            this.buffer = new Uint8Array(16);
            this.bufferPosition = 0;
          }
          _expandKey(cipherKey) {
            (0, _util.unreachable)(
              "Cannot call `_expandKey` on the base class"
            );
          }
          _decrypt(input, key) {
            let t, u, v;
            const state = new Uint8Array(16);
            state.set(input);
            for (let j = 0, k = this._keySize; j < 16; ++j, ++k) {
              state[j] ^= key[k];
            }
            for (let i = this._cyclesOfRepetition - 1; i >= 1; --i) {
              t = state[13];
              state[13] = state[9];
              state[9] = state[5];
              state[5] = state[1];
              state[1] = t;
              t = state[14];
              u = state[10];
              state[14] = state[6];
              state[10] = state[2];
              state[6] = t;
              state[2] = u;
              t = state[15];
              u = state[11];
              v = state[7];
              state[15] = state[3];
              state[11] = t;
              state[7] = u;
              state[3] = v;
              for (let j = 0; j < 16; ++j) {
                state[j] = this._inv_s[state[j]];
              }
              for (let j = 0, k = i * 16; j < 16; ++j, ++k) {
                state[j] ^= key[k];
              }
              for (let j = 0; j < 16; j += 4) {
                const s0 = this._mix[state[j]];
                const s1 = this._mix[state[j + 1]];
                const s2 = this._mix[state[j + 2]];
                const s3 = this._mix[state[j + 3]];
                t =
                  s0 ^
                  (s1 >>> 8) ^
                  (s1 << 24) ^
                  (s2 >>> 16) ^
                  (s2 << 16) ^
                  (s3 >>> 24) ^
                  (s3 << 8);
                state[j] = (t >>> 24) & 0xff;
                state[j + 1] = (t >> 16) & 0xff;
                state[j + 2] = (t >> 8) & 0xff;
                state[j + 3] = t & 0xff;
              }
            }
            t = state[13];
            state[13] = state[9];
            state[9] = state[5];
            state[5] = state[1];
            state[1] = t;
            t = state[14];
            u = state[10];
            state[14] = state[6];
            state[10] = state[2];
            state[6] = t;
            state[2] = u;
            t = state[15];
            u = state[11];
            v = state[7];
            state[15] = state[3];
            state[11] = t;
            state[7] = u;
            state[3] = v;
            for (let j = 0; j < 16; ++j) {
              state[j] = this._inv_s[state[j]];
              state[j] ^= key[j];
            }
            return state;
          }
          _encrypt(input, key) {
            const s = this._s;
            let t, u, v;
            const state = new Uint8Array(16);
            state.set(input);
            for (let j = 0; j < 16; ++j) {
              state[j] ^= key[j];
            }
            for (let i = 1; i < this._cyclesOfRepetition; i++) {
              for (let j = 0; j < 16; ++j) {
                state[j] = s[state[j]];
              }
              v = state[1];
              state[1] = state[5];
              state[5] = state[9];
              state[9] = state[13];
              state[13] = v;
              v = state[2];
              u = state[6];
              state[2] = state[10];
              state[6] = state[14];
              state[10] = v;
              state[14] = u;
              v = state[3];
              u = state[7];
              t = state[11];
              state[3] = state[15];
              state[7] = v;
              state[11] = u;
              state[15] = t;
              for (let j = 0; j < 16; j += 4) {
                const s0 = state[j + 0];
                const s1 = state[j + 1];
                const s2 = state[j + 2];
                const s3 = state[j + 3];
                t = s0 ^ s1 ^ s2 ^ s3;
                state[j + 0] ^= t ^ this._mixCol[s0 ^ s1];
                state[j + 1] ^= t ^ this._mixCol[s1 ^ s2];
                state[j + 2] ^= t ^ this._mixCol[s2 ^ s3];
                state[j + 3] ^= t ^ this._mixCol[s3 ^ s0];
              }
              for (let j = 0, k = i * 16; j < 16; ++j, ++k) {
                state[j] ^= key[k];
              }
            }
            for (let j = 0; j < 16; ++j) {
              state[j] = s[state[j]];
            }
            v = state[1];
            state[1] = state[5];
            state[5] = state[9];
            state[9] = state[13];
            state[13] = v;
            v = state[2];
            u = state[6];
            state[2] = state[10];
            state[6] = state[14];
            state[10] = v;
            state[14] = u;
            v = state[3];
            u = state[7];
            t = state[11];
            state[3] = state[15];
            state[7] = v;
            state[11] = u;
            state[15] = t;
            for (let j = 0, k = this._keySize; j < 16; ++j, ++k) {
              state[j] ^= key[k];
            }
            return state;
          }
          _decryptBlock2(data, finalize) {
            const sourceLength = data.length;
            let buffer = this.buffer,
              bufferLength = this.bufferPosition;
            const result = [];
            let iv = this.iv;
            for (let i = 0; i < sourceLength; ++i) {
              buffer[bufferLength] = data[i];
              ++bufferLength;
              if (bufferLength < 16) {
                continue;
              }
              const plain = this._decrypt(buffer, this._key);
              for (let j = 0; j < 16; ++j) {
                plain[j] ^= iv[j];
              }
              iv = buffer;
              result.push(plain);
              buffer = new Uint8Array(16);
              bufferLength = 0;
            }
            this.buffer = buffer;
            this.bufferLength = bufferLength;
            this.iv = iv;
            if (result.length === 0) {
              return new Uint8Array(0);
            }
            let outputLength = 16 * result.length;
            if (finalize) {
              const lastBlock = result.at(-1);
              let psLen = lastBlock[15];
              if (psLen <= 16) {
                for (let i = 15, ii = 16 - psLen; i >= ii; --i) {
                  if (lastBlock[i] !== psLen) {
                    psLen = 0;
                    break;
                  }
                }
                outputLength -= psLen;
                result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);
              }
            }
            const output = new Uint8Array(outputLength);
            for (let i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {
              output.set(result[i], j);
            }
            return output;
          }
          decryptBlock(data, finalize, iv = null) {
            const sourceLength = data.length;
            const buffer = this.buffer;
            let bufferLength = this.bufferPosition;
            if (iv) {
              this.iv = iv;
            } else {
              for (
                let i = 0;
                bufferLength < 16 && i < sourceLength;
                ++i, ++bufferLength
              ) {
                buffer[bufferLength] = data[i];
              }
              if (bufferLength < 16) {
                this.bufferLength = bufferLength;
                return new Uint8Array(0);
              }
              this.iv = buffer;
              data = data.subarray(16);
            }
            this.buffer = new Uint8Array(16);
            this.bufferLength = 0;
            this.decryptBlock = this._decryptBlock2;
            return this.decryptBlock(data, finalize);
          }
          encrypt(data, iv) {
            const sourceLength = data.length;
            let buffer = this.buffer,
              bufferLength = this.bufferPosition;
            const result = [];
            if (!iv) {
              iv = new Uint8Array(16);
            }
            for (let i = 0; i < sourceLength; ++i) {
              buffer[bufferLength] = data[i];
              ++bufferLength;
              if (bufferLength < 16) {
                continue;
              }
              for (let j = 0; j < 16; ++j) {
                buffer[j] ^= iv[j];
              }
              const cipher = this._encrypt(buffer, this._key);
              iv = cipher;
              result.push(cipher);
              buffer = new Uint8Array(16);
              bufferLength = 0;
            }
            this.buffer = buffer;
            this.bufferLength = bufferLength;
            this.iv = iv;
            if (result.length === 0) {
              return new Uint8Array(0);
            }
            const outputLength = 16 * result.length;
            const output = new Uint8Array(outputLength);
            for (let i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {
              output.set(result[i], j);
            }
            return output;
          }
        }
        class AES128Cipher extends AESBaseCipher {
          constructor(key) {
            super();
            this._cyclesOfRepetition = 10;
            this._keySize = 160;
            this._rcon = new Uint8Array([
              0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36,
              0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97,
              0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72,
              0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66,
              0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04,
              0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d,
              0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3,
              0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61,
              0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,
              0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40,
              0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc,
              0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5,
              0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a,
              0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d,
              0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,
              0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35,
              0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4,
              0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc,
              0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08,
              0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a,
              0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d,
              0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2,
              0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74,
              0xe8, 0xcb, 0x8d,
            ]);
            this._key = this._expandKey(key);
          }
          _expandKey(cipherKey) {
            const b = 176;
            const s = this._s;
            const rcon = this._rcon;
            const result = new Uint8Array(b);
            result.set(cipherKey);
            for (let j = 16, i = 1; j < b; ++i) {
              let t1 = result[j - 3];
              let t2 = result[j - 2];
              let t3 = result[j - 1];
              let t4 = result[j - 4];
              t1 = s[t1];
              t2 = s[t2];
              t3 = s[t3];
              t4 = s[t4];
              t1 ^= rcon[i];
              for (let n = 0; n < 4; ++n) {
                result[j] = t1 ^= result[j - 16];
                j++;
                result[j] = t2 ^= result[j - 16];
                j++;
                result[j] = t3 ^= result[j - 16];
                j++;
                result[j] = t4 ^= result[j - 16];
                j++;
              }
            }
            return result;
          }
        }
        exports.AES128Cipher = AES128Cipher;
        class AES256Cipher extends AESBaseCipher {
          constructor(key) {
            super();
            this._cyclesOfRepetition = 14;
            this._keySize = 224;
            this._key = this._expandKey(key);
          }
          _expandKey(cipherKey) {
            const b = 240;
            const s = this._s;
            const result = new Uint8Array(b);
            result.set(cipherKey);
            let r = 1;
            let t1, t2, t3, t4;
            for (let j = 32, i = 1; j < b; ++i) {
              if (j % 32 === 16) {
                t1 = s[t1];
                t2 = s[t2];
                t3 = s[t3];
                t4 = s[t4];
              } else if (j % 32 === 0) {
                t1 = result[j - 3];
                t2 = result[j - 2];
                t3 = result[j - 1];
                t4 = result[j - 4];
                t1 = s[t1];
                t2 = s[t2];
                t3 = s[t3];
                t4 = s[t4];
                t1 ^= r;
                if ((r <<= 1) >= 256) {
                  r = (r ^ 0x1b) & 0xff;
                }
              }
              for (let n = 0; n < 4; ++n) {
                result[j] = t1 ^= result[j - 32];
                j++;
                result[j] = t2 ^= result[j - 32];
                j++;
                result[j] = t3 ^= result[j - 32];
                j++;
                result[j] = t4 ^= result[j - 32];
                j++;
              }
            }
            return result;
          }
        }
        exports.AES256Cipher = AES256Cipher;
        class PDF17 {
          checkOwnerPassword(
            password,
            ownerValidationSalt,
            userBytes,
            ownerPassword
          ) {
            const hashData = new Uint8Array(password.length + 56);
            hashData.set(password, 0);
            hashData.set(ownerValidationSalt, password.length);
            hashData.set(
              userBytes,
              password.length + ownerValidationSalt.length
            );
            const result = calculateSHA256(hashData, 0, hashData.length);
            return (0, _util.isArrayEqual)(result, ownerPassword);
          }
          checkUserPassword(password, userValidationSalt, userPassword) {
            const hashData = new Uint8Array(password.length + 8);
            hashData.set(password, 0);
            hashData.set(userValidationSalt, password.length);
            const result = calculateSHA256(hashData, 0, hashData.length);
            return (0, _util.isArrayEqual)(result, userPassword);
          }
          getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {
            const hashData = new Uint8Array(password.length + 56);
            hashData.set(password, 0);
            hashData.set(ownerKeySalt, password.length);
            hashData.set(userBytes, password.length + ownerKeySalt.length);
            const key = calculateSHA256(hashData, 0, hashData.length);
            const cipher = new AES256Cipher(key);
            return cipher.decryptBlock(
              ownerEncryption,
              false,
              new Uint8Array(16)
            );
          }
          getUserKey(password, userKeySalt, userEncryption) {
            const hashData = new Uint8Array(password.length + 8);
            hashData.set(password, 0);
            hashData.set(userKeySalt, password.length);
            const key = calculateSHA256(hashData, 0, hashData.length);
            const cipher = new AES256Cipher(key);
            return cipher.decryptBlock(
              userEncryption,
              false,
              new Uint8Array(16)
            );
          }
        }
        exports.PDF17 = PDF17;
        class PDF20 {
          _hash(password, input, userBytes) {
            let k = calculateSHA256(input, 0, input.length).subarray(0, 32);
            let e = [0];
            let i = 0;
            while (i < 64 || e.at(-1) > i - 32) {
              const combinedLength =
                  password.length + k.length + userBytes.length,
                combinedArray = new Uint8Array(combinedLength);
              let writeOffset = 0;
              combinedArray.set(password, writeOffset);
              writeOffset += password.length;
              combinedArray.set(k, writeOffset);
              writeOffset += k.length;
              combinedArray.set(userBytes, writeOffset);
              const k1 = new Uint8Array(combinedLength * 64);
              for (let j = 0, pos = 0; j < 64; j++, pos += combinedLength) {
                k1.set(combinedArray, pos);
              }
              const cipher = new AES128Cipher(k.subarray(0, 16));
              e = cipher.encrypt(k1, k.subarray(16, 32));
              const remainder = e.slice(0, 16).reduce((a, b) => a + b, 0) % 3;
              if (remainder === 0) {
                k = calculateSHA256(e, 0, e.length);
              } else if (remainder === 1) {
                k = calculateSHA384(e, 0, e.length);
              } else if (remainder === 2) {
                k = calculateSHA512(e, 0, e.length);
              }
              i++;
            }
            return k.subarray(0, 32);
          }
          checkOwnerPassword(
            password,
            ownerValidationSalt,
            userBytes,
            ownerPassword
          ) {
            const hashData = new Uint8Array(password.length + 56);
            hashData.set(password, 0);
            hashData.set(ownerValidationSalt, password.length);
            hashData.set(
              userBytes,
              password.length + ownerValidationSalt.length
            );
            const result = this._hash(password, hashData, userBytes);
            return (0, _util.isArrayEqual)(result, ownerPassword);
          }
          checkUserPassword(password, userValidationSalt, userPassword) {
            const hashData = new Uint8Array(password.length + 8);
            hashData.set(password, 0);
            hashData.set(userValidationSalt, password.length);
            const result = this._hash(password, hashData, []);
            return (0, _util.isArrayEqual)(result, userPassword);
          }
          getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {
            const hashData = new Uint8Array(password.length + 56);
            hashData.set(password, 0);
            hashData.set(ownerKeySalt, password.length);
            hashData.set(userBytes, password.length + ownerKeySalt.length);
            const key = this._hash(password, hashData, userBytes);
            const cipher = new AES256Cipher(key);
            return cipher.decryptBlock(
              ownerEncryption,
              false,
              new Uint8Array(16)
            );
          }
          getUserKey(password, userKeySalt, userEncryption) {
            const hashData = new Uint8Array(password.length + 8);
            hashData.set(password, 0);
            hashData.set(userKeySalt, password.length);
            const key = this._hash(password, hashData, []);
            const cipher = new AES256Cipher(key);
            return cipher.decryptBlock(
              userEncryption,
              false,
              new Uint8Array(16)
            );
          }
        }
        exports.PDF20 = PDF20;
        class CipherTransform {
          constructor(stringCipherConstructor, streamCipherConstructor) {
            this.StringCipherConstructor = stringCipherConstructor;
            this.StreamCipherConstructor = streamCipherConstructor;
          }
          createStream(stream, length) {
            const cipher = new this.StreamCipherConstructor();
            return new _decrypt_stream.DecryptStream(
              stream,
              length,
              function cipherTransformDecryptStream(data, finalize) {
                return cipher.decryptBlock(data, finalize);
              }
            );
          }
          decryptString(s) {
            const cipher = new this.StringCipherConstructor();
            let data = (0, _util.stringToBytes)(s);
            data = cipher.decryptBlock(data, true);
            return (0, _util.bytesToString)(data);
          }
          encryptString(s) {
            const cipher = new this.StringCipherConstructor();
            if (cipher instanceof AESBaseCipher) {
              const strLen = s.length;
              const pad = 16 - (strLen % 16);
              s += String.fromCharCode(pad).repeat(pad);
              const iv = new Uint8Array(16);
              if (typeof crypto !== "undefined") {
                crypto.getRandomValues(iv);
              } else {
                for (let i = 0; i < 16; i++) {
                  iv[i] = Math.floor(256 * Math.random());
                }
              }
              let data = (0, _util.stringToBytes)(s);
              data = cipher.encrypt(data, iv);
              const buf = new Uint8Array(16 + data.length);
              buf.set(iv);
              buf.set(data, 16);
              return (0, _util.bytesToString)(buf);
            }
            let data = (0, _util.stringToBytes)(s);
            data = cipher.encrypt(data);
            return (0, _util.bytesToString)(data);
          }
        }
        class CipherTransformFactory {
          static #defaultPasswordBytes = new Uint8Array([
            0x28, 0xbf, 0x4e, 0x5e, 0x4e, 0x75, 0x8a, 0x41, 0x64, 0x00, 0x4e,
            0x56, 0xff, 0xfa, 0x01, 0x08, 0x2e, 0x2e, 0x00, 0xb6, 0xd0, 0x68,
            0x3e, 0x80, 0x2f, 0x0c, 0xa9, 0xfe, 0x64, 0x53, 0x69, 0x7a,
          ]);
          #createEncryptionKey20(
            revision,
            password,
            ownerPassword,
            ownerValidationSalt,
            ownerKeySalt,
            uBytes,
            userPassword,
            userValidationSalt,
            userKeySalt,
            ownerEncryption,
            userEncryption,
            perms
          ) {
            if (password) {
              const passwordLength = Math.min(127, password.length);
              password = password.subarray(0, passwordLength);
            } else {
              password = [];
            }
            const pdfAlgorithm = revision === 6 ? new PDF20() : new PDF17();
            if (
              pdfAlgorithm.checkUserPassword(
                password,
                userValidationSalt,
                userPassword
              )
            ) {
              return pdfAlgorithm.getUserKey(
                password,
                userKeySalt,
                userEncryption
              );
            } else if (
              password.length &&
              pdfAlgorithm.checkOwnerPassword(
                password,
                ownerValidationSalt,
                uBytes,
                ownerPassword
              )
            ) {
              return pdfAlgorithm.getOwnerKey(
                password,
                ownerKeySalt,
                uBytes,
                ownerEncryption
              );
            }
            return null;
          }
          #prepareKeyData(
            fileId,
            password,
            ownerPassword,
            userPassword,
            flags,
            revision,
            keyLength,
            encryptMetadata
          ) {
            const hashDataSize = 40 + ownerPassword.length + fileId.length;
            const hashData = new Uint8Array(hashDataSize);
            let i = 0,
              j,
              n;
            if (password) {
              n = Math.min(32, password.length);
              for (; i < n; ++i) {
                hashData[i] = password[i];
              }
            }
            j = 0;
            while (i < 32) {
              hashData[i++] = CipherTransformFactory.#defaultPasswordBytes[j++];
            }
            for (j = 0, n = ownerPassword.length; j < n; ++j) {
              hashData[i++] = ownerPassword[j];
            }
            hashData[i++] = flags & 0xff;
            hashData[i++] = (flags >> 8) & 0xff;
            hashData[i++] = (flags >> 16) & 0xff;
            hashData[i++] = (flags >>> 24) & 0xff;
            for (j = 0, n = fileId.length; j < n; ++j) {
              hashData[i++] = fileId[j];
            }
            if (revision >= 4 && !encryptMetadata) {
              hashData[i++] = 0xff;
              hashData[i++] = 0xff;
              hashData[i++] = 0xff;
              hashData[i++] = 0xff;
            }
            let hash = calculateMD5(hashData, 0, i);
            const keyLengthInBytes = keyLength >> 3;
            if (revision >= 3) {
              for (j = 0; j < 50; ++j) {
                hash = calculateMD5(hash, 0, keyLengthInBytes);
              }
            }
            const encryptionKey = hash.subarray(0, keyLengthInBytes);
            let cipher, checkData;
            if (revision >= 3) {
              for (i = 0; i < 32; ++i) {
                hashData[i] = CipherTransformFactory.#defaultPasswordBytes[i];
              }
              for (j = 0, n = fileId.length; j < n; ++j) {
                hashData[i++] = fileId[j];
              }
              cipher = new ARCFourCipher(encryptionKey);
              checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));
              n = encryptionKey.length;
              const derivedKey = new Uint8Array(n);
              for (j = 1; j <= 19; ++j) {
                for (let k = 0; k < n; ++k) {
                  derivedKey[k] = encryptionKey[k] ^ j;
                }
                cipher = new ARCFourCipher(derivedKey);
                checkData = cipher.encryptBlock(checkData);
              }
              for (j = 0, n = checkData.length; j < n; ++j) {
                if (userPassword[j] !== checkData[j]) {
                  return null;
                }
              }
            } else {
              cipher = new ARCFourCipher(encryptionKey);
              checkData = cipher.encryptBlock(
                CipherTransformFactory.#defaultPasswordBytes
              );
              for (j = 0, n = checkData.length; j < n; ++j) {
                if (userPassword[j] !== checkData[j]) {
                  return null;
                }
              }
            }
            return encryptionKey;
          }
          #decodeUserPassword(password, ownerPassword, revision, keyLength) {
            const hashData = new Uint8Array(32);
            let i = 0;
            const n = Math.min(32, password.length);
            for (; i < n; ++i) {
              hashData[i] = password[i];
            }
            let j = 0;
            while (i < 32) {
              hashData[i++] = CipherTransformFactory.#defaultPasswordBytes[j++];
            }
            let hash = calculateMD5(hashData, 0, i);
            const keyLengthInBytes = keyLength >> 3;
            if (revision >= 3) {
              for (j = 0; j < 50; ++j) {
                hash = calculateMD5(hash, 0, hash.length);
              }
            }
            let cipher, userPassword;
            if (revision >= 3) {
              userPassword = ownerPassword;
              const derivedKey = new Uint8Array(keyLengthInBytes);
              for (j = 19; j >= 0; j--) {
                for (let k = 0; k < keyLengthInBytes; ++k) {
                  derivedKey[k] = hash[k] ^ j;
                }
                cipher = new ARCFourCipher(derivedKey);
                userPassword = cipher.encryptBlock(userPassword);
              }
            } else {
              cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));
              userPassword = cipher.encryptBlock(ownerPassword);
            }
            return userPassword;
          }
          #buildObjectKey(num, gen, encryptionKey, isAes = false) {
            const key = new Uint8Array(encryptionKey.length + 9);
            const n = encryptionKey.length;
            let i;
            for (i = 0; i < n; ++i) {
              key[i] = encryptionKey[i];
            }
            key[i++] = num & 0xff;
            key[i++] = (num >> 8) & 0xff;
            key[i++] = (num >> 16) & 0xff;
            key[i++] = gen & 0xff;
            key[i++] = (gen >> 8) & 0xff;
            if (isAes) {
              key[i++] = 0x73;
              key[i++] = 0x41;
              key[i++] = 0x6c;
              key[i++] = 0x54;
            }
            const hash = calculateMD5(key, 0, i);
            return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));
          }
          #buildCipherConstructor(cf, name, num, gen, key) {
            if (!(name instanceof _primitives.Name)) {
              throw new _util.FormatError("Invalid crypt filter name.");
            }
            const self = this;
            const cryptFilter = cf.get(name.name);
            const cfm = cryptFilter?.get("CFM");
            if (!cfm || cfm.name === "None") {
              return function () {
                return new NullCipher();
              };
            }
            if (cfm.name === "V2") {
              return function () {
                return new ARCFourCipher(
                  self.#buildObjectKey(num, gen, key, false)
                );
              };
            }
            if (cfm.name === "AESV2") {
              return function () {
                return new AES128Cipher(
                  self.#buildObjectKey(num, gen, key, true)
                );
              };
            }
            if (cfm.name === "AESV3") {
              return function () {
                return new AES256Cipher(key);
              };
            }
            throw new _util.FormatError("Unknown crypto method");
          }
          constructor(dict, fileId, password) {
            const filter = dict.get("Filter");
            if (!(0, _primitives.isName)(filter, "Standard")) {
              throw new _util.FormatError("unknown encryption method");
            }
            this.filterName = filter.name;
            this.dict = dict;
            const algorithm = dict.get("V");
            if (
              !Number.isInteger(algorithm) ||
              (algorithm !== 1 &&
                algorithm !== 2 &&
                algorithm !== 4 &&
                algorithm !== 5)
            ) {
              throw new _util.FormatError("unsupported encryption algorithm");
            }
            this.algorithm = algorithm;
            let keyLength = dict.get("Length");
            if (!keyLength) {
              if (algorithm <= 3) {
                keyLength = 40;
              } else {
                const cfDict = dict.get("CF");
                const streamCryptoName = dict.get("StmF");
                if (
                  cfDict instanceof _primitives.Dict &&
                  streamCryptoName instanceof _primitives.Name
                ) {
                  cfDict.suppressEncryption = true;
                  const handlerDict = cfDict.get(streamCryptoName.name);
                  keyLength = handlerDict?.get("Length") || 128;
                  if (keyLength < 40) {
                    keyLength <<= 3;
                  }
                }
              }
            }
            if (
              !Number.isInteger(keyLength) ||
              keyLength < 40 ||
              keyLength % 8 !== 0
            ) {
              throw new _util.FormatError("invalid key length");
            }
            const ownerBytes = (0, _util.stringToBytes)(dict.get("O")),
              userBytes = (0, _util.stringToBytes)(dict.get("U"));
            const ownerPassword = ownerBytes.subarray(0, 32);
            const userPassword = userBytes.subarray(0, 32);
            const flags = dict.get("P");
            const revision = dict.get("R");
            const encryptMetadata =
              (algorithm === 4 || algorithm === 5) &&
              dict.get("EncryptMetadata") !== false;
            this.encryptMetadata = encryptMetadata;
            const fileIdBytes = (0, _util.stringToBytes)(fileId);
            let passwordBytes;
            if (password) {
              if (revision === 6) {
                try {
                  password = (0, _util.utf8StringToString)(password);
                } catch {
                  (0, _util.warn)(
                    "CipherTransformFactory: Unable to convert UTF8 encoded password."
                  );
                }
              }
              passwordBytes = (0, _util.stringToBytes)(password);
            }
            let encryptionKey;
            if (algorithm !== 5) {
              encryptionKey = this.#prepareKeyData(
                fileIdBytes,
                passwordBytes,
                ownerPassword,
                userPassword,
                flags,
                revision,
                keyLength,
                encryptMetadata
              );
            } else {
              const ownerValidationSalt = ownerBytes.subarray(32, 40);
              const ownerKeySalt = ownerBytes.subarray(40, 48);
              const uBytes = userBytes.subarray(0, 48);
              const userValidationSalt = userBytes.subarray(32, 40);
              const userKeySalt = userBytes.subarray(40, 48);
              const ownerEncryption = (0, _util.stringToBytes)(dict.get("OE"));
              const userEncryption = (0, _util.stringToBytes)(dict.get("UE"));
              const perms = (0, _util.stringToBytes)(dict.get("Perms"));
              encryptionKey = this.#createEncryptionKey20(
                revision,
                passwordBytes,
                ownerPassword,
                ownerValidationSalt,
                ownerKeySalt,
                uBytes,
                userPassword,
                userValidationSalt,
                userKeySalt,
                ownerEncryption,
                userEncryption,
                perms
              );
            }
            if (!encryptionKey && !password) {
              throw new _util.PasswordException(
                "No password given",
                _util.PasswordResponses.NEED_PASSWORD
              );
            } else if (!encryptionKey && password) {
              const decodedPassword = this.#decodeUserPassword(
                passwordBytes,
                ownerPassword,
                revision,
                keyLength
              );
              encryptionKey = this.#prepareKeyData(
                fileIdBytes,
                decodedPassword,
                ownerPassword,
                userPassword,
                flags,
                revision,
                keyLength,
                encryptMetadata
              );
            }
            if (!encryptionKey) {
              throw new _util.PasswordException(
                "Incorrect Password",
                _util.PasswordResponses.INCORRECT_PASSWORD
              );
            }
            this.encryptionKey = encryptionKey;
            if (algorithm >= 4) {
              const cf = dict.get("CF");
              if (cf instanceof _primitives.Dict) {
                cf.suppressEncryption = true;
              }
              this.cf = cf;
              this.stmf = dict.get("StmF") || _primitives.Name.get("Identity");
              this.strf = dict.get("StrF") || _primitives.Name.get("Identity");
              this.eff = dict.get("EFF") || this.stmf;
            }
          }
          createCipherTransform(num, gen) {
            if (this.algorithm === 4 || this.algorithm === 5) {
              return new CipherTransform(
                this.#buildCipherConstructor(
                  this.cf,
                  this.strf,
                  num,
                  gen,
                  this.encryptionKey
                ),
                this.#buildCipherConstructor(
                  this.cf,
                  this.stmf,
                  num,
                  gen,
                  this.encryptionKey
                )
              );
            }
            const key = this.#buildObjectKey(
              num,
              gen,
              this.encryptionKey,
              false
            );
            const cipherConstructor = function () {
              return new ARCFourCipher(key);
            };
            return new CipherTransform(cipherConstructor, cipherConstructor);
          }
        }
        exports.CipherTransformFactory = CipherTransformFactory;

        /***/
      },
      /* 75 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.DecryptStream = void 0;
        var _decode_stream = __w_pdfjs_require__(18);
        const chunkSize = 512;
        class DecryptStream extends _decode_stream.DecodeStream {
          constructor(str, maybeLength, decrypt) {
            super(maybeLength);
            this.str = str;
            this.dict = str.dict;
            this.decrypt = decrypt;
            this.nextChunk = null;
            this.initialized = false;
          }
          readBlock() {
            let chunk;
            if (this.initialized) {
              chunk = this.nextChunk;
            } else {
              chunk = this.str.getBytes(chunkSize);
              this.initialized = true;
            }
            if (!chunk || chunk.length === 0) {
              this.eof = true;
              return;
            }
            this.nextChunk = this.str.getBytes(chunkSize);
            const hasMoreData = this.nextChunk?.length > 0;
            const decrypt = this.decrypt;
            chunk = decrypt(chunk, !hasMoreData);
            const bufferLength = this.bufferLength,
              newLength = bufferLength + chunk.length,
              buffer = this.ensureBuffer(newLength);
            buffer.set(chunk, bufferLength);
            this.bufferLength = newLength;
          }
        }
        exports.DecryptStream = DecryptStream;

        /***/
      },
      /* 76 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.ObjectLoader = void 0;
        var _primitives = __w_pdfjs_require__(4);
        var _base_stream = __w_pdfjs_require__(5);
        var _core_utils = __w_pdfjs_require__(3);
        var _util = __w_pdfjs_require__(2);
        function mayHaveChildren(value) {
          return (
            value instanceof _primitives.Ref ||
            value instanceof _primitives.Dict ||
            value instanceof _base_stream.BaseStream ||
            Array.isArray(value)
          );
        }
        function addChildren(node, nodesToVisit) {
          if (node instanceof _primitives.Dict) {
            node = node.getRawValues();
          } else if (node instanceof _base_stream.BaseStream) {
            node = node.dict.getRawValues();
          } else if (!Array.isArray(node)) {
            return;
          }
          for (const rawValue of node) {
            if (mayHaveChildren(rawValue)) {
              nodesToVisit.push(rawValue);
            }
          }
        }
        class ObjectLoader {
          constructor(dict, keys, xref) {
            this.dict = dict;
            this.keys = keys;
            this.xref = xref;
            this.refSet = null;
          }
          async load() {
            if (this.xref.stream.isDataLoaded) {
              return undefined;
            }
            const { keys, dict } = this;
            this.refSet = new _primitives.RefSet();
            const nodesToVisit = [];
            for (const key of keys) {
              const rawValue = dict.getRaw(key);
              if (rawValue !== undefined) {
                nodesToVisit.push(rawValue);
              }
            }
            return this._walk(nodesToVisit);
          }
          async _walk(nodesToVisit) {
            const nodesToRevisit = [];
            const pendingRequests = [];
            while (nodesToVisit.length) {
              let currentNode = nodesToVisit.pop();
              if (currentNode instanceof _primitives.Ref) {
                if (this.refSet.has(currentNode)) {
                  continue;
                }
                try {
                  this.refSet.put(currentNode);
                  currentNode = this.xref.fetch(currentNode);
                } catch (ex) {
                  if (!(ex instanceof _core_utils.MissingDataException)) {
                    (0, _util.warn)(
                      `ObjectLoader._walk - requesting all data: "${ex}".`
                    );
                    this.refSet = null;
                    const { manager } = this.xref.stream;
                    return manager.requestAllChunks();
                  }
                  nodesToRevisit.push(currentNode);
                  pendingRequests.push({
                    begin: ex.begin,
                    end: ex.end,
                  });
                }
              }
              if (currentNode instanceof _base_stream.BaseStream) {
                const baseStreams = currentNode.getBaseStreams();
                if (baseStreams) {
                  let foundMissingData = false;
                  for (const stream of baseStreams) {
                    if (stream.isDataLoaded) {
                      continue;
                    }
                    foundMissingData = true;
                    pendingRequests.push({
                      begin: stream.start,
                      end: stream.end,
                    });
                  }
                  if (foundMissingData) {
                    nodesToRevisit.push(currentNode);
                  }
                }
              }
              addChildren(currentNode, nodesToVisit);
            }
            if (pendingRequests.length) {
              await this.xref.stream.manager.requestRanges(pendingRequests);
              for (const node of nodesToRevisit) {
                if (node instanceof _primitives.Ref) {
                  this.refSet.remove(node);
                }
              }
              return this._walk(nodesToRevisit);
            }
            this.refSet = null;
            return undefined;
          }
        }
        exports.ObjectLoader = ObjectLoader;

        /***/
      },
      /* 77 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.XFAFactory = void 0;
        var _symbol_utils = __w_pdfjs_require__(78);
        var _bind = __w_pdfjs_require__(79);
        var _data = __w_pdfjs_require__(89);
        var _fonts = __w_pdfjs_require__(85);
        var _utils = __w_pdfjs_require__(84);
        var _util = __w_pdfjs_require__(2);
        var _parser = __w_pdfjs_require__(90);
        var _xhtml = __w_pdfjs_require__(100);
        class XFAFactory {
          constructor(data) {
            try {
              this.root = new _parser.XFAParser().parse(
                XFAFactory._createDocument(data)
              );
              const binder = new _bind.Binder(this.root);
              this.form = binder.bind();
              this.dataHandler = new _data.DataHandler(
                this.root,
                binder.getData()
              );
              this.form[_symbol_utils.$globalData].template = this.form;
            } catch (e) {
              (0, _util.warn)(
                `XFA - an error occurred during parsing and binding: ${e}`
              );
            }
          }
          isValid() {
            return this.root && this.form;
          }
          _createPagesHelper() {
            const iterator = this.form[_symbol_utils.$toPages]();
            return new Promise((resolve, reject) => {
              const nextIteration = () => {
                try {
                  const value = iterator.next();
                  if (value.done) {
                    resolve(value.value);
                  } else {
                    setTimeout(nextIteration, 0);
                  }
                } catch (e) {
                  reject(e);
                }
              };
              setTimeout(nextIteration, 0);
            });
          }
          async _createPages() {
            try {
              this.pages = await this._createPagesHelper();
              this.dims = this.pages.children.map((c) => {
                const { width, height } = c.attributes.style;
                return [0, 0, parseInt(width), parseInt(height)];
              });
            } catch (e) {
              (0, _util.warn)(`XFA - an error occurred during layout: ${e}`);
            }
          }
          getBoundingBox(pageIndex) {
            return this.dims[pageIndex];
          }
          async getNumPages() {
            if (!this.pages) {
              await this._createPages();
            }
            return this.dims.length;
          }
          setImages(images) {
            this.form[_symbol_utils.$globalData].images = images;
          }
          setFonts(fonts) {
            this.form[_symbol_utils.$globalData].fontFinder =
              new _fonts.FontFinder(fonts);
            const missingFonts = [];
            for (let typeface of this.form[_symbol_utils.$globalData]
              .usedTypefaces) {
              typeface = (0, _utils.stripQuotes)(typeface);
              const font =
                this.form[_symbol_utils.$globalData].fontFinder.find(typeface);
              if (!font) {
                missingFonts.push(typeface);
              }
            }
            if (missingFonts.length > 0) {
              return missingFonts;
            }
            return null;
          }
          appendFonts(fonts, reallyMissingFonts) {
            this.form[_symbol_utils.$globalData].fontFinder.add(
              fonts,
              reallyMissingFonts
            );
          }
          async getPages() {
            if (!this.pages) {
              await this._createPages();
            }
            const pages = this.pages;
            this.pages = null;
            return pages;
          }
          serializeData(storage) {
            return this.dataHandler.serialize(storage);
          }
          static _createDocument(data) {
            if (!data["/xdp:xdp"]) {
              return data["xdp:xdp"];
            }
            return Object.values(data).join("");
          }
          static getRichTextAsHtml(rc) {
            if (!rc || typeof rc !== "string") {
              return null;
            }
            try {
              let root = new _parser.XFAParser(
                _xhtml.XhtmlNamespace,
                true
              ).parse(rc);
              if (!["body", "xhtml"].includes(root[_symbol_utils.$nodeName])) {
                const newRoot = _xhtml.XhtmlNamespace.body({});
                newRoot[_symbol_utils.$appendChild](root);
                root = newRoot;
              }
              const result = root[_symbol_utils.$toHTML]();
              if (!result.success) {
                return null;
              }
              const { html } = result;
              const { attributes } = html;
              if (attributes) {
                if (attributes.class) {
                  attributes.class = attributes.class.filter(
                    (attr) => !attr.startsWith("xfa")
                  );
                }
                attributes.dir = "auto";
              }
              return {
                html,
                str: root[_symbol_utils.$text](),
              };
            } catch (e) {
              (0, _util.warn)(
                `XFA - an error occurred during parsing of rich text: ${e}`
              );
            }
            return null;
          }
        }
        exports.XFAFactory = XFAFactory;

        /***/
      },
      /* 78 */
      /***/ (__unused_webpack_module, exports) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.$uid =
          exports.$toStyle =
          exports.$toString =
          exports.$toPages =
          exports.$toHTML =
          exports.$text =
          exports.$tabIndex =
          exports.$setValue =
          exports.$setSetAttributes =
          exports.$setId =
          exports.$searchNode =
          exports.$root =
          exports.$resolvePrototypes =
          exports.$removeChild =
          exports.$pushPara =
          exports.$pushGlyphs =
          exports.$popPara =
          exports.$onText =
          exports.$onChildCheck =
          exports.$onChild =
          exports.$nsAttributes =
          exports.$nodeName =
          exports.$namespaceId =
          exports.$lastAttribute =
          exports.$isUsable =
          exports.$isTransparent =
          exports.$isThereMoreWidth =
          exports.$isSplittable =
          exports.$isNsAgnostic =
          exports.$isDescendent =
          exports.$isDataValue =
          exports.$isCDATAXml =
          exports.$isBindable =
          exports.$insertAt =
          exports.$indexOf =
          exports.$ids =
          exports.$hasSettableValue =
          exports.$globalData =
          exports.$getTemplateRoot =
          exports.$getSubformParent =
          exports.$getRealChildrenByNameIt =
          exports.$getParent =
          exports.$getNextPage =
          exports.$getExtra =
          exports.$getDataValue =
          exports.$getContainedChildren =
          exports.$getChildrenByNameIt =
          exports.$getChildrenByName =
          exports.$getChildrenByClass =
          exports.$getChildren =
          exports.$getAvailableSpace =
          exports.$getAttributes =
          exports.$getAttributeIt =
          exports.$flushHTML =
          exports.$finalize =
          exports.$extra =
          exports.$dump =
          exports.$data =
          exports.$content =
          exports.$consumed =
          exports.$clone =
          exports.$cleanup =
          exports.$cleanPage =
          exports.$clean =
          exports.$childrenToHTML =
          exports.$appendChild =
          exports.$addHTML =
          exports.$acceptWhitespace =
            void 0;
        const $acceptWhitespace = Symbol();
        exports.$acceptWhitespace = $acceptWhitespace;
        const $addHTML = Symbol();
        exports.$addHTML = $addHTML;
        const $appendChild = Symbol();
        exports.$appendChild = $appendChild;
        const $childrenToHTML = Symbol();
        exports.$childrenToHTML = $childrenToHTML;
        const $clean = Symbol();
        exports.$clean = $clean;
        const $cleanPage = Symbol();
        exports.$cleanPage = $cleanPage;
        const $cleanup = Symbol();
        exports.$cleanup = $cleanup;
        const $clone = Symbol();
        exports.$clone = $clone;
        const $consumed = Symbol();
        exports.$consumed = $consumed;
        const $content = Symbol("content");
        exports.$content = $content;
        const $data = Symbol("data");
        exports.$data = $data;
        const $dump = Symbol();
        exports.$dump = $dump;
        const $extra = Symbol("extra");
        exports.$extra = $extra;
        const $finalize = Symbol();
        exports.$finalize = $finalize;
        const $flushHTML = Symbol();
        exports.$flushHTML = $flushHTML;
        const $getAttributeIt = Symbol();
        exports.$getAttributeIt = $getAttributeIt;
        const $getAttributes = Symbol();
        exports.$getAttributes = $getAttributes;
        const $getAvailableSpace = Symbol();
        exports.$getAvailableSpace = $getAvailableSpace;
        const $getChildrenByClass = Symbol();
        exports.$getChildrenByClass = $getChildrenByClass;
        const $getChildrenByName = Symbol();
        exports.$getChildrenByName = $getChildrenByName;
        const $getChildrenByNameIt = Symbol();
        exports.$getChildrenByNameIt = $getChildrenByNameIt;
        const $getDataValue = Symbol();
        exports.$getDataValue = $getDataValue;
        const $getExtra = Symbol();
        exports.$getExtra = $getExtra;
        const $getRealChildrenByNameIt = Symbol();
        exports.$getRealChildrenByNameIt = $getRealChildrenByNameIt;
        const $getChildren = Symbol();
        exports.$getChildren = $getChildren;
        const $getContainedChildren = Symbol();
        exports.$getContainedChildren = $getContainedChildren;
        const $getNextPage = Symbol();
        exports.$getNextPage = $getNextPage;
        const $getSubformParent = Symbol();
        exports.$getSubformParent = $getSubformParent;
        const $getParent = Symbol();
        exports.$getParent = $getParent;
        const $getTemplateRoot = Symbol();
        exports.$getTemplateRoot = $getTemplateRoot;
        const $globalData = Symbol();
        exports.$globalData = $globalData;
        const $hasSettableValue = Symbol();
        exports.$hasSettableValue = $hasSettableValue;
        const $ids = Symbol();
        exports.$ids = $ids;
        const $indexOf = Symbol();
        exports.$indexOf = $indexOf;
        const $insertAt = Symbol();
        exports.$insertAt = $insertAt;
        const $isCDATAXml = Symbol();
        exports.$isCDATAXml = $isCDATAXml;
        const $isBindable = Symbol();
        exports.$isBindable = $isBindable;
        const $isDataValue = Symbol();
        exports.$isDataValue = $isDataValue;
        const $isDescendent = Symbol();
        exports.$isDescendent = $isDescendent;
        const $isNsAgnostic = Symbol();
        exports.$isNsAgnostic = $isNsAgnostic;
        const $isSplittable = Symbol();
        exports.$isSplittable = $isSplittable;
        const $isThereMoreWidth = Symbol();
        exports.$isThereMoreWidth = $isThereMoreWidth;
        const $isTransparent = Symbol();
        exports.$isTransparent = $isTransparent;
        const $isUsable = Symbol();
        exports.$isUsable = $isUsable;
        const $lastAttribute = Symbol();
        exports.$lastAttribute = $lastAttribute;
        const $namespaceId = Symbol("namespaceId");
        exports.$namespaceId = $namespaceId;
        const $nodeName = Symbol("nodeName");
        exports.$nodeName = $nodeName;
        const $nsAttributes = Symbol();
        exports.$nsAttributes = $nsAttributes;
        const $onChild = Symbol();
        exports.$onChild = $onChild;
        const $onChildCheck = Symbol();
        exports.$onChildCheck = $onChildCheck;
        const $onText = Symbol();
        exports.$onText = $onText;
        const $pushGlyphs = Symbol();
        exports.$pushGlyphs = $pushGlyphs;
        const $popPara = Symbol();
        exports.$popPara = $popPara;
        const $pushPara = Symbol();
        exports.$pushPara = $pushPara;
        const $removeChild = Symbol();
        exports.$removeChild = $removeChild;
        const $root = Symbol("root");
        exports.$root = $root;
        const $resolvePrototypes = Symbol();
        exports.$resolvePrototypes = $resolvePrototypes;
        const $searchNode = Symbol();
        exports.$searchNode = $searchNode;
        const $setId = Symbol();
        exports.$setId = $setId;
        const $setSetAttributes = Symbol();
        exports.$setSetAttributes = $setSetAttributes;
        const $setValue = Symbol();
        exports.$setValue = $setValue;
        const $tabIndex = Symbol();
        exports.$tabIndex = $tabIndex;
        const $text = Symbol();
        exports.$text = $text;
        const $toPages = Symbol();
        exports.$toPages = $toPages;
        const $toHTML = Symbol();
        exports.$toHTML = $toHTML;
        const $toString = Symbol();
        exports.$toString = $toString;
        const $toStyle = Symbol();
        exports.$toStyle = $toStyle;
        const $uid = Symbol("uid");
        exports.$uid = $uid;

        /***/
      },
      /* 79 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.Binder = void 0;
        var _symbol_utils = __w_pdfjs_require__(78);
        var _template = __w_pdfjs_require__(80);
        var _som = __w_pdfjs_require__(88);
        var _xfa_object = __w_pdfjs_require__(87);
        var _namespaces = __w_pdfjs_require__(81);
        var _util = __w_pdfjs_require__(2);
        const NS_DATASETS = _namespaces.NamespaceIds.datasets.id;
        function createText(content) {
          const node = new _template.Text({});
          node[_symbol_utils.$content] = content;
          return node;
        }
        class Binder {
          constructor(root) {
            this.root = root;
            this.datasets = root.datasets;
            this.data =
              root.datasets?.data ||
              new _xfa_object.XmlObject(
                _namespaces.NamespaceIds.datasets.id,
                "data"
              );
            this.emptyMerge =
              this.data[_symbol_utils.$getChildren]().length === 0;
            this.root.form = this.form = root.template[_symbol_utils.$clone]();
          }
          _isConsumeData() {
            return !this.emptyMerge && this._mergeMode;
          }
          _isMatchTemplate() {
            return !this._isConsumeData();
          }
          bind() {
            this._bindElement(this.form, this.data);
            return this.form;
          }
          getData() {
            return this.data;
          }
          _bindValue(formNode, data, picture) {
            formNode[_symbol_utils.$data] = data;
            if (formNode[_symbol_utils.$hasSettableValue]()) {
              if (data[_symbol_utils.$isDataValue]()) {
                const value = data[_symbol_utils.$getDataValue]();
                formNode[_symbol_utils.$setValue](createText(value));
              } else if (
                formNode instanceof _template.Field &&
                formNode.ui?.choiceList?.open === "multiSelect"
              ) {
                const value = data[_symbol_utils.$getChildren]()
                  .map((child) => child[_symbol_utils.$content].trim())
                  .join("\n");
                formNode[_symbol_utils.$setValue](createText(value));
              } else if (this._isConsumeData()) {
                (0, _util.warn)(`XFA - Nodes haven't the same type.`);
              }
            } else if (
              !data[_symbol_utils.$isDataValue]() ||
              this._isMatchTemplate()
            ) {
              this._bindElement(formNode, data);
            } else {
              (0, _util.warn)(`XFA - Nodes haven't the same type.`);
            }
          }
          _findDataByNameToConsume(name, isValue, dataNode, global) {
            if (!name) {
              return null;
            }
            let generator, match;
            for (let i = 0; i < 3; i++) {
              generator = dataNode[_symbol_utils.$getRealChildrenByNameIt](
                name,
                false,
                true
              );
              while (true) {
                match = generator.next().value;
                if (!match) {
                  break;
                }
                if (isValue === match[_symbol_utils.$isDataValue]()) {
                  return match;
                }
              }
              if (
                dataNode[_symbol_utils.$namespaceId] ===
                  _namespaces.NamespaceIds.datasets.id &&
                dataNode[_symbol_utils.$nodeName] === "data"
              ) {
                break;
              }
              dataNode = dataNode[_symbol_utils.$getParent]();
            }
            if (!global) {
              return null;
            }
            generator = this.data[_symbol_utils.$getRealChildrenByNameIt](
              name,
              true,
              false
            );
            match = generator.next().value;
            if (match) {
              return match;
            }
            generator = this.data[_symbol_utils.$getAttributeIt](name, true);
            match = generator.next().value;
            if (match?.[_symbol_utils.$isDataValue]()) {
              return match;
            }
            return null;
          }
          _setProperties(formNode, dataNode) {
            if (!formNode.hasOwnProperty("setProperty")) {
              return;
            }
            for (const { ref, target, connection } of formNode.setProperty
              .children) {
              if (connection) {
                continue;
              }
              if (!ref) {
                continue;
              }
              const nodes = (0, _som.searchNode)(
                this.root,
                dataNode,
                ref,
                false,
                false
              );
              if (!nodes) {
                (0, _util.warn)(`XFA - Invalid reference: ${ref}.`);
                continue;
              }
              const [node] = nodes;
              if (!node[_symbol_utils.$isDescendent](this.data)) {
                (0, _util.warn)(`XFA - Invalid node: must be a data node.`);
                continue;
              }
              const targetNodes = (0, _som.searchNode)(
                this.root,
                formNode,
                target,
                false,
                false
              );
              if (!targetNodes) {
                (0, _util.warn)(`XFA - Invalid target: ${target}.`);
                continue;
              }
              const [targetNode] = targetNodes;
              if (!targetNode[_symbol_utils.$isDescendent](formNode)) {
                (0, _util.warn)(
                  `XFA - Invalid target: must be a property or subproperty.`
                );
                continue;
              }
              const targetParent = targetNode[_symbol_utils.$getParent]();
              if (
                targetNode instanceof _template.SetProperty ||
                targetParent instanceof _template.SetProperty
              ) {
                (0, _util.warn)(
                  `XFA - Invalid target: cannot be a setProperty or one of its properties.`
                );
                continue;
              }
              if (
                targetNode instanceof _template.BindItems ||
                targetParent instanceof _template.BindItems
              ) {
                (0, _util.warn)(
                  `XFA - Invalid target: cannot be a bindItems or one of its properties.`
                );
                continue;
              }
              const content = node[_symbol_utils.$text]();
              const name = targetNode[_symbol_utils.$nodeName];
              if (targetNode instanceof _xfa_object.XFAAttribute) {
                const attrs = Object.create(null);
                attrs[name] = content;
                const obj = Reflect.construct(
                  Object.getPrototypeOf(targetParent).constructor,
                  [attrs]
                );
                targetParent[name] = obj[name];
                continue;
              }
              if (!targetNode.hasOwnProperty(_symbol_utils.$content)) {
                (0, _util.warn)(`XFA - Invalid node to use in setProperty`);
                continue;
              }
              targetNode[_symbol_utils.$data] = node;
              targetNode[_symbol_utils.$content] = content;
              targetNode[_symbol_utils.$finalize]();
            }
          }
          _bindItems(formNode, dataNode) {
            if (
              !formNode.hasOwnProperty("items") ||
              !formNode.hasOwnProperty("bindItems") ||
              formNode.bindItems.isEmpty()
            ) {
              return;
            }
            for (const item of formNode.items.children) {
              formNode[_symbol_utils.$removeChild](item);
            }
            formNode.items.clear();
            const labels = new _template.Items({});
            const values = new _template.Items({});
            formNode[_symbol_utils.$appendChild](labels);
            formNode.items.push(labels);
            formNode[_symbol_utils.$appendChild](values);
            formNode.items.push(values);
            for (const { ref, labelRef, valueRef, connection } of formNode
              .bindItems.children) {
              if (connection) {
                continue;
              }
              if (!ref) {
                continue;
              }
              const nodes = (0, _som.searchNode)(
                this.root,
                dataNode,
                ref,
                false,
                false
              );
              if (!nodes) {
                (0, _util.warn)(`XFA - Invalid reference: ${ref}.`);
                continue;
              }
              for (const node of nodes) {
                if (!node[_symbol_utils.$isDescendent](this.datasets)) {
                  (0, _util.warn)(
                    `XFA - Invalid ref (${ref}): must be a datasets child.`
                  );
                  continue;
                }
                const labelNodes = (0, _som.searchNode)(
                  this.root,
                  node,
                  labelRef,
                  true,
                  false
                );
                if (!labelNodes) {
                  (0, _util.warn)(`XFA - Invalid label: ${labelRef}.`);
                  continue;
                }
                const [labelNode] = labelNodes;
                if (!labelNode[_symbol_utils.$isDescendent](this.datasets)) {
                  (0, _util.warn)(
                    `XFA - Invalid label: must be a datasets child.`
                  );
                  continue;
                }
                const valueNodes = (0, _som.searchNode)(
                  this.root,
                  node,
                  valueRef,
                  true,
                  false
                );
                if (!valueNodes) {
                  (0, _util.warn)(`XFA - Invalid value: ${valueRef}.`);
                  continue;
                }
                const [valueNode] = valueNodes;
                if (!valueNode[_symbol_utils.$isDescendent](this.datasets)) {
                  (0, _util.warn)(
                    `XFA - Invalid value: must be a datasets child.`
                  );
                  continue;
                }
                const label = createText(labelNode[_symbol_utils.$text]());
                const value = createText(valueNode[_symbol_utils.$text]());
                labels[_symbol_utils.$appendChild](label);
                labels.text.push(label);
                values[_symbol_utils.$appendChild](value);
                values.text.push(value);
              }
            }
          }
          _bindOccurrences(formNode, matches, picture) {
            let baseClone;
            if (matches.length > 1) {
              baseClone = formNode[_symbol_utils.$clone]();
              baseClone[_symbol_utils.$removeChild](baseClone.occur);
              baseClone.occur = null;
            }
            this._bindValue(formNode, matches[0], picture);
            this._setProperties(formNode, matches[0]);
            this._bindItems(formNode, matches[0]);
            if (matches.length === 1) {
              return;
            }
            const parent = formNode[_symbol_utils.$getParent]();
            const name = formNode[_symbol_utils.$nodeName];
            const pos = parent[_symbol_utils.$indexOf](formNode);
            for (let i = 1, ii = matches.length; i < ii; i++) {
              const match = matches[i];
              const clone = baseClone[_symbol_utils.$clone]();
              parent[name].push(clone);
              parent[_symbol_utils.$insertAt](pos + i, clone);
              this._bindValue(clone, match, picture);
              this._setProperties(clone, match);
              this._bindItems(clone, match);
            }
          }
          _createOccurrences(formNode) {
            if (!this.emptyMerge) {
              return;
            }
            const { occur } = formNode;
            if (!occur || occur.initial <= 1) {
              return;
            }
            const parent = formNode[_symbol_utils.$getParent]();
            const name = formNode[_symbol_utils.$nodeName];
            if (!(parent[name] instanceof _xfa_object.XFAObjectArray)) {
              return;
            }
            let currentNumber;
            if (formNode.name) {
              currentNumber = parent[name].children.filter(
                (e) => e.name === formNode.name
              ).length;
            } else {
              currentNumber = parent[name].children.length;
            }
            const pos = parent[_symbol_utils.$indexOf](formNode) + 1;
            const ii = occur.initial - currentNumber;
            if (ii) {
              const nodeClone = formNode[_symbol_utils.$clone]();
              nodeClone[_symbol_utils.$removeChild](nodeClone.occur);
              nodeClone.occur = null;
              parent[name].push(nodeClone);
              parent[_symbol_utils.$insertAt](pos, nodeClone);
              for (let i = 1; i < ii; i++) {
                const clone = nodeClone[_symbol_utils.$clone]();
                parent[name].push(clone);
                parent[_symbol_utils.$insertAt](pos + i, clone);
              }
            }
          }
          _getOccurInfo(formNode) {
            const { name, occur } = formNode;
            if (!occur || !name) {
              return [1, 1];
            }
            const max = occur.max === -1 ? Infinity : occur.max;
            return [occur.min, max];
          }
          _setAndBind(formNode, dataNode) {
            this._setProperties(formNode, dataNode);
            this._bindItems(formNode, dataNode);
            this._bindElement(formNode, dataNode);
          }
          _bindElement(formNode, dataNode) {
            const uselessNodes = [];
            this._createOccurrences(formNode);
            for (const child of formNode[_symbol_utils.$getChildren]()) {
              if (child[_symbol_utils.$data]) {
                continue;
              }
              if (
                this._mergeMode === undefined &&
                child[_symbol_utils.$nodeName] === "subform"
              ) {
                this._mergeMode = child.mergeMode === "consumeData";
                const dataChildren = dataNode[_symbol_utils.$getChildren]();
                if (dataChildren.length > 0) {
                  this._bindOccurrences(child, [dataChildren[0]], null);
                } else if (this.emptyMerge) {
                  const nsId =
                    dataNode[_symbol_utils.$namespaceId] === NS_DATASETS
                      ? -1
                      : dataNode[_symbol_utils.$namespaceId];
                  const dataChild = (child[_symbol_utils.$data] =
                    new _xfa_object.XmlObject(nsId, child.name || "root"));
                  dataNode[_symbol_utils.$appendChild](dataChild);
                  this._bindElement(child, dataChild);
                }
                continue;
              }
              if (!child[_symbol_utils.$isBindable]()) {
                continue;
              }
              let global = false;
              let picture = null;
              let ref = null;
              let match = null;
              if (child.bind) {
                switch (child.bind.match) {
                  case "none":
                    this._setAndBind(child, dataNode);
                    continue;
                  case "global":
                    global = true;
                    break;
                  case "dataRef":
                    if (!child.bind.ref) {
                      (0, _util.warn)(
                        `XFA - ref is empty in node ${
                          child[_symbol_utils.$nodeName]
                        }.`
                      );
                      this._setAndBind(child, dataNode);
                      continue;
                    }
                    ref = child.bind.ref;
                    break;
                  default:
                    break;
                }
                if (child.bind.picture) {
                  picture = child.bind.picture[_symbol_utils.$content];
                }
              }
              const [min, max] = this._getOccurInfo(child);
              if (ref) {
                match = (0, _som.searchNode)(
                  this.root,
                  dataNode,
                  ref,
                  true,
                  false
                );
                if (match === null) {
                  match = (0, _som.createDataNode)(this.data, dataNode, ref);
                  if (!match) {
                    continue;
                  }
                  if (this._isConsumeData()) {
                    match[_symbol_utils.$consumed] = true;
                  }
                  this._setAndBind(child, match);
                  continue;
                } else {
                  if (this._isConsumeData()) {
                    match = match.filter(
                      (node) => !node[_symbol_utils.$consumed]
                    );
                  }
                  if (match.length > max) {
                    match = match.slice(0, max);
                  } else if (match.length === 0) {
                    match = null;
                  }
                  if (match && this._isConsumeData()) {
                    match.forEach((node) => {
                      node[_symbol_utils.$consumed] = true;
                    });
                  }
                }
              } else {
                if (!child.name) {
                  this._setAndBind(child, dataNode);
                  continue;
                }
                if (this._isConsumeData()) {
                  const matches = [];
                  while (matches.length < max) {
                    const found = this._findDataByNameToConsume(
                      child.name,
                      child[_symbol_utils.$hasSettableValue](),
                      dataNode,
                      global
                    );
                    if (!found) {
                      break;
                    }
                    found[_symbol_utils.$consumed] = true;
                    matches.push(found);
                  }
                  match = matches.length > 0 ? matches : null;
                } else {
                  match = dataNode[_symbol_utils.$getRealChildrenByNameIt](
                    child.name,
                    false,
                    this.emptyMerge
                  ).next().value;
                  if (!match) {
                    if (min === 0) {
                      uselessNodes.push(child);
                      continue;
                    }
                    const nsId =
                      dataNode[_symbol_utils.$namespaceId] === NS_DATASETS
                        ? -1
                        : dataNode[_symbol_utils.$namespaceId];
                    match = child[_symbol_utils.$data] =
                      new _xfa_object.XmlObject(nsId, child.name);
                    if (this.emptyMerge) {
                      match[_symbol_utils.$consumed] = true;
                    }
                    dataNode[_symbol_utils.$appendChild](match);
                    this._setAndBind(child, match);
                    continue;
                  }
                  if (this.emptyMerge) {
                    match[_symbol_utils.$consumed] = true;
                  }
                  match = [match];
                }
              }
              if (match) {
                this._bindOccurrences(child, match, picture);
              } else if (min > 0) {
                this._setAndBind(child, dataNode);
              } else {
                uselessNodes.push(child);
              }
            }
            uselessNodes.forEach((node) =>
              node[_symbol_utils.$getParent]()[_symbol_utils.$removeChild](node)
            );
          }
        }
        exports.Binder = Binder;

        /***/
      },
      /* 80 */
      /***/ (__unused_webpack_module, exports, __w_pdfjs_require__) => {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.Value =
          exports.Text =
          exports.TemplateNamespace =
          exports.Template =
          exports.SetProperty =
          exports.Items =
          exports.Field =
          exports.BindItems =
            void 0;
        var _symbol_utils = __w_pdfjs_require__(78);
        var _namespaces = __w_pdfjs_require__(81);
        var _layout = __w_pdfjs_require__(82);
        var _html_utils = __w_pdfjs_require__(83);
        var _xfa_object = __w_pdfjs_require__(87);
        var _utils = __w_pdfjs_require__(84);
        var _util = __w_pdfjs_require__(2);
        var _fonts = __w_pdfjs_require__(85);
        var _core_utils = __w_pdfjs_require__(3);
        var _som = __w_pdfjs_require__(88);
        const TEMPLATE_NS_ID = _namespaces.NamespaceIds.template.id;
        const SVG_NS = "http://www.w3.org/2000/svg";
        const MAX_ATTEMPTS_FOR_LRTB_LAYOUT = 2;
        const MAX_EMPTY_PAGES = 3;
        const DEFAULT_TAB_INDEX = 5000;
        const HEADING_PATTERN = /^H(\d+)$/;
        const MIMES = new Set([
          "image/gif",
          "image/jpeg",
          "image/jpg",
          "image/pjpeg",
          "image/png",
          "image/apng",
          "image/x-png",
          "image/bmp",
          "image/x-ms-bmp",
          "image/tiff",
          "image/tif",
          "application/octet-stream",
        ]);
        const IMAGES_HEADERS = [
          [[0x42, 0x4d], "image/bmp"],
          [[0xff, 0xd8, 0xff], "image/jpeg"],
          [[0x49, 0x49, 0x2a, 0x00], "image/tiff"],
          [[0x4d, 0x4d, 0x00, 0x2a], "image/tiff"],
          [[0x47, 0x49, 0x46, 0x38, 0x39, 0x61], "image/gif"],
          [[0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a], "image/png"],
        ];
        function getBorderDims(node) {
          if (!node || !node.border) {
            return {
              w: 0,
              h: 0,
            };
          }
          const borderExtra = node.border[_symbol_utils.$getExtra]();
          if (!borderExtra) {
            return {
              w: 0,
              h: 0,
            };
          }
          return {
            w:
              borderExtra.widths[0] +
              borderExtra.widths[2] +
              borderExtra.insets[0] +
              borderExtra.insets[2],
            h:
              borderExtra.widths[1] +
              borderExtra.widths[3] +
              borderExtra.insets[1] +
              borderExtra.insets[3],
          };
        }
        function hasMargin(node) {
          return (
            node.margin &&
            (node.margin.topInset ||
              node.margin.rightInset ||
              node.margin.bottomInset ||
              node.margin.leftInset)
          );
        }
        function _setValue(templateNode, value) {
          if (!templateNode.value) {
            const nodeValue = new Value({});
            templateNode[_symbol_utils.$appendChild](nodeValue);
            templateNode.value = nodeValue;
          }
          templateNode.value[_symbol_utils.$setValue](value);
        }
        function* getContainedChildren(node) {
          for (const child of node[_symbol_utils.$getChildren]()) {
            if (child instanceof SubformSet) {
              yield* child[_symbol_utils.$getContainedChildren]();
              continue;
            }
            yield child;
          }
        }
        function isRequired(node) {
          return node.validate?.nullTest === "error";
        }
        function setTabIndex(node) {
          while (node) {
            if (!node.traversal) {
              node[_symbol_utils.$tabIndex] =
                node[_symbol_utils.$getParent]()[_symbol_utils.$tabIndex];
              return;
            }
            if (node[_symbol_utils.$tabIndex]) {
              return;
            }
            let next = null;
            for (const child of node.traversal[_symbol_utils.$getChildren]()) {
              if (child.operation === "next") {
                next = child;
                break;
              }
            }
            if (!next || !next.ref) {
              node[_symbol_utils.$tabIndex] =
                node[_symbol_utils.$getParent]()[_symbol_utils.$tabIndex];
              return;
            }
            const root = node[_symbol_utils.$getTemplateRoot]();
            node[_symbol_utils.$tabIndex] = ++root[_symbol_utils.$tabIndex];
            const ref = root[_symbol_utils.$searchNode](next.ref, node);
            if (!ref) {
              return;
            }
            node = ref[0];
          }
        }
        function applyAssist(obj, attributes) {
          const assist = obj.assist;
          if (assist) {
            const assistTitle = assist[_symbol_utils.$toHTML]();
            if (assistTitle) {
              attributes.title = assistTitle;
            }
            const role = assist.role;
            const match = role.match(HEADING_PATTERN);
            if (match) {
              const ariaRole = "heading";
              const ariaLevel = match[1];
              attributes.role = ariaRole;
              attributes["aria-level"] = ariaLevel;
            }
          }
          if (obj.layout === "table") {
            attributes.role = "table";
          } else if (obj.layout === "row") {
            attributes.role = "row";
          } else {
            const parent = obj[_symbol_utils.$getParent]();
            if (parent.layout === "row") {
              attributes.role =
                parent.assist?.role === "TH" ? "columnheader" : "cell";
            }
          }
        }
        function ariaLabel(obj) {
          if (!obj.assist) {
            return null;
          }
          const assist = obj.assist;
          if (assist.speak && assist.speak[_symbol_utils.$content] !== "") {
            return assist.speak[_symbol_utils.$content];
          }
          if (assist.toolTip) {
            return assist.toolTip[_symbol_utils.$content];
          }
          return null;
        }
        function valueToHtml(value) {
          return _utils.HTMLResult.success({
            name: "div",
            attributes: {
              class: ["xfaRich"],
              style: Object.create(null),
            },
            children: [
              {
                name: "span",
                attributes: {
                  style: Object.create(null),
                },
                value,
              },
            ],
          });
        }
        function setFirstUnsplittable(node) {
          const root = node[_symbol_utils.$getTemplateRoot]();
          if (root[_symbol_utils.$extra].firstUnsplittable === null) {
            root[_symbol_utils.$extra].firstUnsplittable = node;
            root[_symbol_utils.$extra].noLayoutFailure = true;
          }
        }
        function unsetFirstUnsplittable(node) {
          const root = node[_symbol_utils.$getTemplateRoot]();
          if (root[_symbol_utils.$extra].firstUnsplittable === node) {
            root[_symbol_utils.$extra].noLayoutFailure = false;
          }
        }
        function handleBreak(node) {
          if (node[_symbol_utils.$extra]) {
            return false;
          }
          node[_symbol_utils.$extra] = Object.create(null);
          if (node.targetType === "auto") {
            return false;
          }
          const root = node[_symbol_utils.$getTemplateRoot]();
          let target = null;
          if (node.target) {
            target = root[_symbol_utils.$searchNode](
              node.target,
              node[_symbol_utils.$getParent]()
            );
            if (!target) {
              return false;
            }
            target = target[0];
          }
          const { currentPageArea, currentContentArea } =
            root[_symbol_utils.$extra];
          if (node.targetType === "pageArea") {
            if (!(target instanceof PageArea)) {
              target = null;
            }
            if (node.startNew) {
              node[_symbol_utils.$extra].target = target || currentPageArea;
              return true;
            } else if (target && target !== currentPageArea) {
              node[_symbol_utils.$extra].target = target;
              return true;
            }
            return false;
          }
          if (!(target instanceof ContentArea)) {
            target = null;
          }
          const pageArea = target && target[_symbol_utils.$getParent]();
          let index;
          let nextPageArea = pageArea;
          if (node.startNew) {
            if (target) {
              const contentAreas = pageArea.contentArea.children;
              const indexForCurrent = contentAreas.indexOf(currentContentArea);
              const indexForTarget = contentAreas.indexOf(target);
              if (indexForCurrent !== -1 && indexForCurrent < indexForTarget) {
                nextPageArea = null;
              }
              index = indexForTarget - 1;
            } else {
              index =
                currentPageArea.contentArea.children.indexOf(
                  currentContentArea
                );
            }
          } else if (target && target !== currentContentArea) {
            const contentAreas = pageArea.contentArea.children;
            index = contentAreas.indexOf(target) - 1;
            nextPageArea = pageArea === currentPageArea ? null : pageArea;
          } else {
            return false;
          }
          node[_symbol_utils.$extra].target = nextPageArea;
          node[_symbol_utils.$extra].index = index;
          return true;
        }
        function handleOverflow(node, extraNode, space) {
          const root = node[_symbol_utils.$getTemplateRoot]();
          const saved = root[_symbol_utils.$extra].noLayoutFailure;
          const savedMethod = extraNode[_symbol_utils.$getSubformParent];
          extraNode[_symbol_utils.$getSubformParent] = () => node;
          root[_symbol_utils.$extra].noLayoutFailure = true;
          const res = extraNode[_symbol_utils.$toHTML](space);
          node[_symbol_utils.$addHTML](res.html, res.bbox);
          root[_symbol_utils.$extra].noLayoutFailure = saved;
          extraNode[_symbol_utils.$getSubformParent] = savedMethod;
        }
        class AppearanceFilter extends _xfa_object.StringObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "appearanceFilter");
            this.id = attributes.id || "";
            this.type = (0, _utils.getStringOption)(attributes.type, [
              "optional",
              "required",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
        }
        class Arc extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "arc", true);
            this.circular = (0, _utils.getInteger)({
              data: attributes.circular,
              defaultValue: 0,
              validate: (x) => x === 1,
            });
            this.hand = (0, _utils.getStringOption)(attributes.hand, [
              "even",
              "left",
              "right",
            ]);
            this.id = attributes.id || "";
            this.startAngle = (0, _utils.getFloat)({
              data: attributes.startAngle,
              defaultValue: 0,
              validate: (x) => true,
            });
            this.sweepAngle = (0, _utils.getFloat)({
              data: attributes.sweepAngle,
              defaultValue: 360,
              validate: (x) => true,
            });
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.edge = null;
            this.fill = null;
          }
          [_symbol_utils.$toHTML]() {
            const edge = this.edge || new Edge({});
            const edgeStyle = edge[_symbol_utils.$toStyle]();
            const style = Object.create(null);
            if (this.fill?.presence === "visible") {
              Object.assign(style, this.fill[_symbol_utils.$toStyle]());
            } else {
              style.fill = "transparent";
            }
            style.strokeWidth = (0, _html_utils.measureToString)(
              edge.presence === "visible" ? edge.thickness : 0
            );
            style.stroke = edgeStyle.color;
            let arc;
            const attributes = {
              xmlns: SVG_NS,
              style: {
                width: "100%",
                height: "100%",
                overflow: "visible",
              },
            };
            if (this.sweepAngle === 360) {
              arc = {
                name: "ellipse",
                attributes: {
                  xmlns: SVG_NS,
                  cx: "50%",
                  cy: "50%",
                  rx: "50%",
                  ry: "50%",
                  style,
                },
              };
            } else {
              const startAngle = (this.startAngle * Math.PI) / 180;
              const sweepAngle = (this.sweepAngle * Math.PI) / 180;
              const largeArc = this.sweepAngle > 180 ? 1 : 0;
              const [x1, y1, x2, y2] = [
                50 * (1 + Math.cos(startAngle)),
                50 * (1 - Math.sin(startAngle)),
                50 * (1 + Math.cos(startAngle + sweepAngle)),
                50 * (1 - Math.sin(startAngle + sweepAngle)),
              ];
              arc = {
                name: "path",
                attributes: {
                  xmlns: SVG_NS,
                  d: `M ${x1} ${y1} A 50 50 0 ${largeArc} 0 ${x2} ${y2}`,
                  vectorEffect: "non-scaling-stroke",
                  style,
                },
              };
              Object.assign(attributes, {
                viewBox: "0 0 100 100",
                preserveAspectRatio: "none",
              });
            }
            const svg = {
              name: "svg",
              children: [arc],
              attributes,
            };
            const parent =
              this[_symbol_utils.$getParent]()[_symbol_utils.$getParent]();
            if (hasMargin(parent)) {
              return _utils.HTMLResult.success({
                name: "div",
                attributes: {
                  style: {
                    display: "inline",
                    width: "100%",
                    height: "100%",
                  },
                },
                children: [svg],
              });
            }
            svg.attributes.style.position = "absolute";
            return _utils.HTMLResult.success(svg);
          }
        }
        class Area extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "area", true);
            this.colSpan = (0, _utils.getInteger)({
              data: attributes.colSpan,
              defaultValue: 1,
              validate: (n) => n >= 1 || n === -1,
            });
            this.id = attributes.id || "";
            this.name = attributes.name || "";
            this.relevant = (0, _utils.getRelevant)(attributes.relevant);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.x = (0, _utils.getMeasurement)(attributes.x, "0pt");
            this.y = (0, _utils.getMeasurement)(attributes.y, "0pt");
            this.desc = null;
            this.extras = null;
            this.area = new _xfa_object.XFAObjectArray();
            this.draw = new _xfa_object.XFAObjectArray();
            this.exObject = new _xfa_object.XFAObjectArray();
            this.exclGroup = new _xfa_object.XFAObjectArray();
            this.field = new _xfa_object.XFAObjectArray();
            this.subform = new _xfa_object.XFAObjectArray();
            this.subformSet = new _xfa_object.XFAObjectArray();
          }
          *[_symbol_utils.$getContainedChildren]() {
            yield* getContainedChildren(this);
          }
          [_symbol_utils.$isTransparent]() {
            return true;
          }
          [_symbol_utils.$isBindable]() {
            return true;
          }
          [_symbol_utils.$addHTML](html, bbox) {
            const [x, y, w, h] = bbox;
            this[_symbol_utils.$extra].width = Math.max(
              this[_symbol_utils.$extra].width,
              x + w
            );
            this[_symbol_utils.$extra].height = Math.max(
              this[_symbol_utils.$extra].height,
              y + h
            );
            this[_symbol_utils.$extra].children.push(html);
          }
          [_symbol_utils.$getAvailableSpace]() {
            return this[_symbol_utils.$extra].availableSpace;
          }
          [_symbol_utils.$toHTML](availableSpace) {
            const style = (0, _html_utils.toStyle)(this, "position");
            const attributes = {
              style,
              id: this[_symbol_utils.$uid],
              class: ["xfaArea"],
            };
            if ((0, _html_utils.isPrintOnly)(this)) {
              attributes.class.push("xfaPrintOnly");
            }
            if (this.name) {
              attributes.xfaName = this.name;
            }
            const children = [];
            this[_symbol_utils.$extra] = {
              children,
              width: 0,
              height: 0,
              availableSpace,
            };
            const result = this[_symbol_utils.$childrenToHTML]({
              filter: new Set([
                "area",
                "draw",
                "field",
                "exclGroup",
                "subform",
                "subformSet",
              ]),
              include: true,
            });
            if (!result.success) {
              if (result.isBreak()) {
                return result;
              }
              delete this[_symbol_utils.$extra];
              return _utils.HTMLResult.FAILURE;
            }
            style.width = (0, _html_utils.measureToString)(
              this[_symbol_utils.$extra].width
            );
            style.height = (0, _html_utils.measureToString)(
              this[_symbol_utils.$extra].height
            );
            const html = {
              name: "div",
              attributes,
              children,
            };
            const bbox = [
              this.x,
              this.y,
              this[_symbol_utils.$extra].width,
              this[_symbol_utils.$extra].height,
            ];
            delete this[_symbol_utils.$extra];
            return _utils.HTMLResult.success(html, bbox);
          }
        }
        class Assist extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "assist", true);
            this.id = attributes.id || "";
            this.role = attributes.role || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.speak = null;
            this.toolTip = null;
          }
          [_symbol_utils.$toHTML]() {
            return this.toolTip?.[_symbol_utils.$content] || null;
          }
        }
        class Barcode extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "barcode", true);
            this.charEncoding = (0, _utils.getKeyword)({
              data: attributes.charEncoding
                ? attributes.charEncoding.toLowerCase()
                : "",
              defaultValue: "",
              validate: (k) =>
                [
                  "utf-8",
                  "big-five",
                  "fontspecific",
                  "gbk",
                  "gb-18030",
                  "gb-2312",
                  "ksc-5601",
                  "none",
                  "shift-jis",
                  "ucs-2",
                  "utf-16",
                ].includes(k) || k.match(/iso-8859-\d{2}/),
            });
            this.checksum = (0, _utils.getStringOption)(attributes.checksum, [
              "none",
              "1mod10",
              "1mod10_1mod11",
              "2mod10",
              "auto",
            ]);
            this.dataColumnCount = (0, _utils.getInteger)({
              data: attributes.dataColumnCount,
              defaultValue: -1,
              validate: (x) => x >= 0,
            });
            this.dataLength = (0, _utils.getInteger)({
              data: attributes.dataLength,
              defaultValue: -1,
              validate: (x) => x >= 0,
            });
            this.dataPrep = (0, _utils.getStringOption)(attributes.dataPrep, [
              "none",
              "flateCompress",
            ]);
            this.dataRowCount = (0, _utils.getInteger)({
              data: attributes.dataRowCount,
              defaultValue: -1,
              validate: (x) => x >= 0,
            });
            this.endChar = attributes.endChar || "";
            this.errorCorrectionLevel = (0, _utils.getInteger)({
              data: attributes.errorCorrectionLevel,
              defaultValue: -1,
              validate: (x) => x >= 0 && x <= 8,
            });
            this.id = attributes.id || "";
            this.moduleHeight = (0, _utils.getMeasurement)(
              attributes.moduleHeight,
              "5mm"
            );
            this.moduleWidth = (0, _utils.getMeasurement)(
              attributes.moduleWidth,
              "0.25mm"
            );
            this.printCheckDigit = (0, _utils.getInteger)({
              data: attributes.printCheckDigit,
              defaultValue: 0,
              validate: (x) => x === 1,
            });
            this.rowColumnRatio = (0, _utils.getRatio)(
              attributes.rowColumnRatio
            );
            this.startChar = attributes.startChar || "";
            this.textLocation = (0, _utils.getStringOption)(
              attributes.textLocation,
              ["below", "above", "aboveEmbedded", "belowEmbedded", "none"]
            );
            this.truncate = (0, _utils.getInteger)({
              data: attributes.truncate,
              defaultValue: 0,
              validate: (x) => x === 1,
            });
            this.type = (0, _utils.getStringOption)(
              attributes.type ? attributes.type.toLowerCase() : "",
              [
                "aztec",
                "codabar",
                "code2of5industrial",
                "code2of5interleaved",
                "code2of5matrix",
                "code2of5standard",
                "code3of9",
                "code3of9extended",
                "code11",
                "code49",
                "code93",
                "code128",
                "code128a",
                "code128b",
                "code128c",
                "code128sscc",
                "datamatrix",
                "ean8",
                "ean8add2",
                "ean8add5",
                "ean13",
                "ean13add2",
                "ean13add5",
                "ean13pwcd",
                "fim",
                "logmars",
                "maxicode",
                "msi",
                "pdf417",
                "pdf417macro",
                "plessey",
                "postauscust2",
                "postauscust3",
                "postausreplypaid",
                "postausstandard",
                "postukrm4scc",
                "postusdpbc",
                "postusimb",
                "postusstandard",
                "postus5zip",
                "qrcode",
                "rfid",
                "rss14",
                "rss14expanded",
                "rss14limited",
                "rss14stacked",
                "rss14stackedomni",
                "rss14truncated",
                "telepen",
                "ucc128",
                "ucc128random",
                "ucc128sscc",
                "upca",
                "upcaadd2",
                "upcaadd5",
                "upcapwcd",
                "upce",
                "upceadd2",
                "upceadd5",
                "upcean2",
                "upcean5",
                "upsmaxicode",
              ]
            );
            this.upsMode = (0, _utils.getStringOption)(attributes.upsMode, [
              "usCarrier",
              "internationalCarrier",
              "secureSymbol",
              "standardSymbol",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.wideNarrowRatio = (0, _utils.getRatio)(
              attributes.wideNarrowRatio
            );
            this.encrypt = null;
            this.extras = null;
          }
        }
        class Bind extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "bind", true);
            this.match = (0, _utils.getStringOption)(attributes.match, [
              "once",
              "dataRef",
              "global",
              "none",
            ]);
            this.ref = attributes.ref || "";
            this.picture = null;
          }
        }
        class BindItems extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "bindItems");
            this.connection = attributes.connection || "";
            this.labelRef = attributes.labelRef || "";
            this.ref = attributes.ref || "";
            this.valueRef = attributes.valueRef || "";
          }
        }
        exports.BindItems = BindItems;
        class Bookend extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "bookend");
            this.id = attributes.id || "";
            this.leader = attributes.leader || "";
            this.trailer = attributes.trailer || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
        }
        class BooleanElement extends _xfa_object.Option01 {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "boolean");
            this.id = attributes.id || "";
            this.name = attributes.name || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
          [_symbol_utils.$toHTML](availableSpace) {
            return valueToHtml(this[_symbol_utils.$content] === 1 ? "1" : "0");
          }
        }
        class Border extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "border", true);
            this.break = (0, _utils.getStringOption)(attributes.break, [
              "close",
              "open",
            ]);
            this.hand = (0, _utils.getStringOption)(attributes.hand, [
              "even",
              "left",
              "right",
            ]);
            this.id = attributes.id || "";
            this.presence = (0, _utils.getStringOption)(attributes.presence, [
              "visible",
              "hidden",
              "inactive",
              "invisible",
            ]);
            this.relevant = (0, _utils.getRelevant)(attributes.relevant);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.corner = new _xfa_object.XFAObjectArray(4);
            this.edge = new _xfa_object.XFAObjectArray(4);
            this.extras = null;
            this.fill = null;
            this.margin = null;
          }
          [_symbol_utils.$getExtra]() {
            if (!this[_symbol_utils.$extra]) {
              const edges = this.edge.children.slice();
              if (edges.length < 4) {
                const defaultEdge = edges.at(-1) || new Edge({});
                for (let i = edges.length; i < 4; i++) {
                  edges.push(defaultEdge);
                }
              }
              const widths = edges.map((edge) => edge.thickness);
              const insets = [0, 0, 0, 0];
              if (this.margin) {
                insets[0] = this.margin.topInset;
                insets[1] = this.margin.rightInset;
                insets[2] = this.margin.bottomInset;
                insets[3] = this.margin.leftInset;
              }
              this[_symbol_utils.$extra] = {
                widths,
                insets,
                edges,
              };
            }
            return this[_symbol_utils.$extra];
          }
          [_symbol_utils.$toStyle]() {
            const { edges } = this[_symbol_utils.$getExtra]();
            const edgeStyles = edges.map((node) => {
              const style = node[_symbol_utils.$toStyle]();
              style.color ||= "#000000";
              return style;
            });
            const style = Object.create(null);
            if (this.margin) {
              Object.assign(style, this.margin[_symbol_utils.$toStyle]());
            }
            if (this.fill?.presence === "visible") {
              Object.assign(style, this.fill[_symbol_utils.$toStyle]());
            }
            if (this.corner.children.some((node) => node.radius !== 0)) {
              const cornerStyles = this.corner.children.map((node) =>
                node[_symbol_utils.$toStyle]()
              );
              if (cornerStyles.length === 2 || cornerStyles.length === 3) {
                const last = cornerStyles.at(-1);
                for (let i = cornerStyles.length; i < 4; i++) {
                  cornerStyles.push(last);
                }
              }
              style.borderRadius = cornerStyles.map((s) => s.radius).join(" ");
            }
            switch (this.presence) {
              case "invisible":
              case "hidden":
                style.borderStyle = "";
                break;
              case "inactive":
                style.borderStyle = "none";
                break;
              default:
                style.borderStyle = edgeStyles.map((s) => s.style).join(" ");
                break;
            }
            style.borderWidth = edgeStyles.map((s) => s.width).join(" ");
            style.borderColor = edgeStyles.map((s) => s.color).join(" ");
            return style;
          }
        }
        class Break extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "break", true);
            this.after = (0, _utils.getStringOption)(attributes.after, [
              "auto",
              "contentArea",
              "pageArea",
              "pageEven",
              "pageOdd",
            ]);
            this.afterTarget = attributes.afterTarget || "";
            this.before = (0, _utils.getStringOption)(attributes.before, [
              "auto",
              "contentArea",
              "pageArea",
              "pageEven",
              "pageOdd",
            ]);
            this.beforeTarget = attributes.beforeTarget || "";
            this.bookendLeader = attributes.bookendLeader || "";
            this.bookendTrailer = attributes.bookendTrailer || "";
            this.id = attributes.id || "";
            this.overflowLeader = attributes.overflowLeader || "";
            this.overflowTarget = attributes.overflowTarget || "";
            this.overflowTrailer = attributes.overflowTrailer || "";
            this.startNew = (0, _utils.getInteger)({
              data: attributes.startNew,
              defaultValue: 0,
              validate: (x) => x === 1,
            });
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.extras = null;
          }
        }
        class BreakAfter extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "breakAfter", true);
            this.id = attributes.id || "";
            this.leader = attributes.leader || "";
            this.startNew = (0, _utils.getInteger)({
              data: attributes.startNew,
              defaultValue: 0,
              validate: (x) => x === 1,
            });
            this.target = attributes.target || "";
            this.targetType = (0, _utils.getStringOption)(
              attributes.targetType,
              ["auto", "contentArea", "pageArea"]
            );
            this.trailer = attributes.trailer || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.script = null;
          }
        }
        class BreakBefore extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "breakBefore", true);
            this.id = attributes.id || "";
            this.leader = attributes.leader || "";
            this.startNew = (0, _utils.getInteger)({
              data: attributes.startNew,
              defaultValue: 0,
              validate: (x) => x === 1,
            });
            this.target = attributes.target || "";
            this.targetType = (0, _utils.getStringOption)(
              attributes.targetType,
              ["auto", "contentArea", "pageArea"]
            );
            this.trailer = attributes.trailer || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.script = null;
          }
          [_symbol_utils.$toHTML](availableSpace) {
            this[_symbol_utils.$extra] = {};
            return _utils.HTMLResult.FAILURE;
          }
        }
        class Button extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "button", true);
            this.highlight = (0, _utils.getStringOption)(attributes.highlight, [
              "inverted",
              "none",
              "outline",
              "push",
            ]);
            this.id = attributes.id || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.extras = null;
          }
          [_symbol_utils.$toHTML](availableSpace) {
            const parent = this[_symbol_utils.$getParent]();
            const grandpa = parent[_symbol_utils.$getParent]();
            const htmlButton = {
              name: "button",
              attributes: {
                id: this[_symbol_utils.$uid],
                class: ["xfaButton"],
                style: {},
              },
              children: [],
            };
            for (const event of grandpa.event.children) {
              if (event.activity !== "click" || !event.script) {
                continue;
              }
              const jsURL = (0, _core_utils.recoverJsURL)(
                event.script[_symbol_utils.$content]
              );
              if (!jsURL) {
                continue;
              }
              const href = (0, _html_utils.fixURL)(jsURL.url);
              if (!href) {
                continue;
              }
              htmlButton.children.push({
                name: "a",
                attributes: {
                  id: "link" + this[_symbol_utils.$uid],
                  href,
                  newWindow: jsURL.newWindow,
                  class: ["xfaLink"],
                  style: {},
                },
                children: [],
              });
            }
            return _utils.HTMLResult.success(htmlButton);
          }
        }
        class Calculate extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "calculate", true);
            this.id = attributes.id || "";
            this.override = (0, _utils.getStringOption)(attributes.override, [
              "disabled",
              "error",
              "ignore",
              "warning",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.extras = null;
            this.message = null;
            this.script = null;
          }
        }
        class Caption extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "caption", true);
            this.id = attributes.id || "";
            this.placement = (0, _utils.getStringOption)(attributes.placement, [
              "left",
              "bottom",
              "inline",
              "right",
              "top",
            ]);
            this.presence = (0, _utils.getStringOption)(attributes.presence, [
              "visible",
              "hidden",
              "inactive",
              "invisible",
            ]);
            this.reserve = Math.ceil(
              (0, _utils.getMeasurement)(attributes.reserve)
            );
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.extras = null;
            this.font = null;
            this.margin = null;
            this.para = null;
            this.value = null;
          }
          [_symbol_utils.$setValue](value) {
            _setValue(this, value);
          }
          [_symbol_utils.$getExtra](availableSpace) {
            if (!this[_symbol_utils.$extra]) {
              let { width, height } = availableSpace;
              switch (this.placement) {
                case "left":
                case "right":
                case "inline":
                  width = this.reserve <= 0 ? width : this.reserve;
                  break;
                case "top":
                case "bottom":
                  height = this.reserve <= 0 ? height : this.reserve;
                  break;
              }
              this[_symbol_utils.$extra] = (0, _html_utils.layoutNode)(this, {
                width,
                height,
              });
            }
            return this[_symbol_utils.$extra];
          }
          [_symbol_utils.$toHTML](availableSpace) {
            if (!this.value) {
              return _utils.HTMLResult.EMPTY;
            }
            this[_symbol_utils.$pushPara]();
            const value =
              this.value[_symbol_utils.$toHTML](availableSpace).html;
            if (!value) {
              this[_symbol_utils.$popPara]();
              return _utils.HTMLResult.EMPTY;
            }
            const savedReserve = this.reserve;
            if (this.reserve <= 0) {
              const { w, h } = this[_symbol_utils.$getExtra](availableSpace);
              switch (this.placement) {
                case "left":
                case "right":
                case "inline":
                  this.reserve = w;
                  break;
                case "top":
                case "bottom":
                  this.reserve = h;
                  break;
              }
            }
            const children = [];
            if (typeof value === "string") {
              children.push({
                name: "#text",
                value,
              });
            } else {
              children.push(value);
            }
            const style = (0, _html_utils.toStyle)(
              this,
              "font",
              "margin",
              "visibility"
            );
            switch (this.placement) {
              case "left":
              case "right":
                if (this.reserve > 0) {
                  style.width = (0, _html_utils.measureToString)(this.reserve);
                }
                break;
              case "top":
              case "bottom":
                if (this.reserve > 0) {
                  style.height = (0, _html_utils.measureToString)(this.reserve);
                }
                break;
            }
            (0, _html_utils.setPara)(this, null, value);
            this[_symbol_utils.$popPara]();
            this.reserve = savedReserve;
            return _utils.HTMLResult.success({
              name: "div",
              attributes: {
                style,
                class: ["xfaCaption"],
              },
              children,
            });
          }
        }
        class Certificate extends _xfa_object.StringObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "certificate");
            this.id = attributes.id || "";
            this.name = attributes.name || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
        }
        class Certificates extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "certificates", true);
            this.credentialServerPolicy = (0, _utils.getStringOption)(
              attributes.credentialServerPolicy,
              ["optional", "required"]
            );
            this.id = attributes.id || "";
            this.url = attributes.url || "";
            this.urlPolicy = attributes.urlPolicy || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.encryption = null;
            this.issuers = null;
            this.keyUsage = null;
            this.oids = null;
            this.signing = null;
            this.subjectDNs = null;
          }
        }
        class CheckButton extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "checkButton", true);
            this.id = attributes.id || "";
            this.mark = (0, _utils.getStringOption)(attributes.mark, [
              "default",
              "check",
              "circle",
              "cross",
              "diamond",
              "square",
              "star",
            ]);
            this.shape = (0, _utils.getStringOption)(attributes.shape, [
              "square",
              "round",
            ]);
            this.size = (0, _utils.getMeasurement)(attributes.size, "10pt");
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.border = null;
            this.extras = null;
            this.margin = null;
          }
          [_symbol_utils.$toHTML](availableSpace) {
            const style = (0, _html_utils.toStyle)("margin");
            const size = (0, _html_utils.measureToString)(this.size);
            style.width = style.height = size;
            let type;
            let className;
            let groupId;
            const field =
              this[_symbol_utils.$getParent]()[_symbol_utils.$getParent]();
            const items =
              (field.items.children.length &&
                field.items.children[0][_symbol_utils.$toHTML]().html) ||
              [];
            const exportedValue = {
              on: (items[0] !== undefined ? items[0] : "on").toString(),
              off: (items[1] !== undefined ? items[1] : "off").toString(),
            };
            const value = field.value?.[_symbol_utils.$text]() || "off";
            const checked = value === exportedValue.on || undefined;
            const container = field[_symbol_utils.$getSubformParent]();
            const fieldId = field[_symbol_utils.$uid];
            let dataId;
            if (container instanceof ExclGroup) {
              groupId = container[_symbol_utils.$uid];
              type = "radio";
              className = "xfaRadio";
              dataId =
                container[_symbol_utils.$data]?.[_symbol_utils.$uid] ||
                container[_symbol_utils.$uid];
            } else {
              type = "checkbox";
              className = "xfaCheckbox";
              dataId =
                field[_symbol_utils.$data]?.[_symbol_utils.$uid] ||
                field[_symbol_utils.$uid];
            }
            const input = {
              name: "input",
              attributes: {
                class: [className],
                style,
                fieldId,
                dataId,
                type,
                checked,
                xfaOn: exportedValue.on,
                xfaOff: exportedValue.off,
                "aria-label": ariaLabel(field),
                "aria-required": false,
              },
            };
            if (groupId) {
              input.attributes.name = groupId;
            }
            if (isRequired(field)) {
              input.attributes["aria-required"] = true;
              input.attributes.required = true;
            }
            return _utils.HTMLResult.success({
              name: "label",
              attributes: {
                class: ["xfaLabel"],
              },
              children: [input],
            });
          }
        }
        class ChoiceList extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "choiceList", true);
            this.commitOn = (0, _utils.getStringOption)(attributes.commitOn, [
              "select",
              "exit",
            ]);
            this.id = attributes.id || "";
            this.open = (0, _utils.getStringOption)(attributes.open, [
              "userControl",
              "always",
              "multiSelect",
              "onEntry",
            ]);
            this.textEntry = (0, _utils.getInteger)({
              data: attributes.textEntry,
              defaultValue: 0,
              validate: (x) => x === 1,
            });
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.border = null;
            this.extras = null;
            this.margin = null;
          }
          [_symbol_utils.$toHTML](availableSpace) {
            const style = (0, _html_utils.toStyle)(this, "border", "margin");
            const ui = this[_symbol_utils.$getParent]();
            const field = ui[_symbol_utils.$getParent]();
            const fontSize = field.font?.size || 10;
            const optionStyle = {
              fontSize: `calc(${fontSize}px * var(--scale-factor))`,
            };
            const children = [];
            if (field.items.children.length > 0) {
              const items = field.items;
              let displayedIndex = 0;
              let saveIndex = 0;
              if (items.children.length === 2) {
                displayedIndex = items.children[0].save;
                saveIndex = 1 - displayedIndex;
              }
              const displayed =
                items.children[displayedIndex][_symbol_utils.$toHTML]().html;
              const values =
                items.children[saveIndex][_symbol_utils.$toHTML]().html;
              let selected = false;
              const value = field.value?.[_symbol_utils.$text]() || "";
              for (let i = 0, ii = displayed.length; i < ii; i++) {
                const option = {
                  name: "option",
                  attributes: {
                    value: values[i] || displayed[i],
                    style: optionStyle,
                  },
                  value: displayed[i],
                };
                if (values[i] === value) {
                  option.attributes.selected = selected = true;
                }
                children.push(option);
              }
              if (!selected) {
                children.splice(0, 0, {
                  name: "option",
                  attributes: {
                    hidden: true,
                    selected: true,
                  },
                  value: " ",
                });
              }
            }
            const selectAttributes = {
              class: ["xfaSelect"],
              fieldId: field[_symbol_utils.$uid],
              dataId:
                field[_symbol_utils.$data]?.[_symbol_utils.$uid] ||
                field[_symbol_utils.$uid],
              style,
              "aria-label": ariaLabel(field),
              "aria-required": false,
            };
            if (isRequired(field)) {
              selectAttributes["aria-required"] = true;
              selectAttributes.required = true;
            }
            if (this.open === "multiSelect") {
              selectAttributes.multiple = true;
            }
            return _utils.HTMLResult.success({
              name: "label",
              attributes: {
                class: ["xfaLabel"],
              },
              children: [
                {
                  name: "select",
                  children,
                  attributes: selectAttributes,
                },
              ],
            });
          }
        }
        class Color extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "color", true);
            this.cSpace = (0, _utils.getStringOption)(attributes.cSpace, [
              "SRGB",
            ]);
            this.id = attributes.id || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.value = attributes.value
              ? (0, _utils.getColor)(attributes.value)
              : "";
            this.extras = null;
          }
          [_symbol_utils.$hasSettableValue]() {
            return false;
          }
          [_symbol_utils.$toStyle]() {
            return this.value
              ? _util.Util.makeHexColor(
                  this.value.r,
                  this.value.g,
                  this.value.b
                )
              : null;
          }
        }
        class Comb extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "comb");
            this.id = attributes.id || "";
            this.numberOfCells = (0, _utils.getInteger)({
              data: attributes.numberOfCells,
              defaultValue: 0,
              validate: (x) => x >= 0,
            });
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
        }
        class Connect extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "connect", true);
            this.connection = attributes.connection || "";
            this.id = attributes.id || "";
            this.ref = attributes.ref || "";
            this.usage = (0, _utils.getStringOption)(attributes.usage, [
              "exportAndImport",
              "exportOnly",
              "importOnly",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.picture = null;
          }
        }
        class ContentArea extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "contentArea", true);
            this.h = (0, _utils.getMeasurement)(attributes.h);
            this.id = attributes.id || "";
            this.name = attributes.name || "";
            this.relevant = (0, _utils.getRelevant)(attributes.relevant);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.w = (0, _utils.getMeasurement)(attributes.w);
            this.x = (0, _utils.getMeasurement)(attributes.x, "0pt");
            this.y = (0, _utils.getMeasurement)(attributes.y, "0pt");
            this.desc = null;
            this.extras = null;
          }
          [_symbol_utils.$toHTML](availableSpace) {
            const left = (0, _html_utils.measureToString)(this.x);
            const top = (0, _html_utils.measureToString)(this.y);
            const style = {
              left,
              top,
              width: (0, _html_utils.measureToString)(this.w),
              height: (0, _html_utils.measureToString)(this.h),
            };
            const classNames = ["xfaContentarea"];
            if ((0, _html_utils.isPrintOnly)(this)) {
              classNames.push("xfaPrintOnly");
            }
            return _utils.HTMLResult.success({
              name: "div",
              children: [],
              attributes: {
                style,
                class: classNames,
                id: this[_symbol_utils.$uid],
              },
            });
          }
        }
        class Corner extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "corner", true);
            this.id = attributes.id || "";
            this.inverted = (0, _utils.getInteger)({
              data: attributes.inverted,
              defaultValue: 0,
              validate: (x) => x === 1,
            });
            this.join = (0, _utils.getStringOption)(attributes.join, [
              "square",
              "round",
            ]);
            this.presence = (0, _utils.getStringOption)(attributes.presence, [
              "visible",
              "hidden",
              "inactive",
              "invisible",
            ]);
            this.radius = (0, _utils.getMeasurement)(attributes.radius);
            this.stroke = (0, _utils.getStringOption)(attributes.stroke, [
              "solid",
              "dashDot",
              "dashDotDot",
              "dashed",
              "dotted",
              "embossed",
              "etched",
              "lowered",
              "raised",
            ]);
            this.thickness = (0, _utils.getMeasurement)(
              attributes.thickness,
              "0.5pt"
            );
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.color = null;
            this.extras = null;
          }
          [_symbol_utils.$toStyle]() {
            const style = (0, _html_utils.toStyle)(this, "visibility");
            style.radius = (0, _html_utils.measureToString)(
              this.join === "square" ? 0 : this.radius
            );
            return style;
          }
        }
        class DateElement extends _xfa_object.ContentObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "date");
            this.id = attributes.id || "";
            this.name = attributes.name || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
          [_symbol_utils.$finalize]() {
            const date = this[_symbol_utils.$content].trim();
            this[_symbol_utils.$content] = date ? new Date(date) : null;
          }
          [_symbol_utils.$toHTML](availableSpace) {
            return valueToHtml(
              this[_symbol_utils.$content]
                ? this[_symbol_utils.$content].toString()
                : ""
            );
          }
        }
        class DateTime extends _xfa_object.ContentObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "dateTime");
            this.id = attributes.id || "";
            this.name = attributes.name || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
          [_symbol_utils.$finalize]() {
            const date = this[_symbol_utils.$content].trim();
            this[_symbol_utils.$content] = date ? new Date(date) : null;
          }
          [_symbol_utils.$toHTML](availableSpace) {
            return valueToHtml(
              this[_symbol_utils.$content]
                ? this[_symbol_utils.$content].toString()
                : ""
            );
          }
        }
        class DateTimeEdit extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "dateTimeEdit", true);
            this.hScrollPolicy = (0, _utils.getStringOption)(
              attributes.hScrollPolicy,
              ["auto", "off", "on"]
            );
            this.id = attributes.id || "";
            this.picker = (0, _utils.getStringOption)(attributes.picker, [
              "host",
              "none",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.border = null;
            this.comb = null;
            this.extras = null;
            this.margin = null;
          }
          [_symbol_utils.$toHTML](availableSpace) {
            const style = (0, _html_utils.toStyle)(
              this,
              "border",
              "font",
              "margin"
            );
            const field =
              this[_symbol_utils.$getParent]()[_symbol_utils.$getParent]();
            const html = {
              name: "input",
              attributes: {
                type: "text",
                fieldId: field[_symbol_utils.$uid],
                dataId:
                  field[_symbol_utils.$data]?.[_symbol_utils.$uid] ||
                  field[_symbol_utils.$uid],
                class: ["xfaTextfield"],
                style,
                "aria-label": ariaLabel(field),
                "aria-required": false,
              },
            };
            if (isRequired(field)) {
              html.attributes["aria-required"] = true;
              html.attributes.required = true;
            }
            return _utils.HTMLResult.success({
              name: "label",
              attributes: {
                class: ["xfaLabel"],
              },
              children: [html],
            });
          }
        }
        class Decimal extends _xfa_object.ContentObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "decimal");
            this.fracDigits = (0, _utils.getInteger)({
              data: attributes.fracDigits,
              defaultValue: 2,
              validate: (x) => true,
            });
            this.id = attributes.id || "";
            this.leadDigits = (0, _utils.getInteger)({
              data: attributes.leadDigits,
              defaultValue: -1,
              validate: (x) => true,
            });
            this.name = attributes.name || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
          [_symbol_utils.$finalize]() {
            const number = parseFloat(this[_symbol_utils.$content].trim());
            this[_symbol_utils.$content] = isNaN(number) ? null : number;
          }
          [_symbol_utils.$toHTML](availableSpace) {
            return valueToHtml(
              this[_symbol_utils.$content] !== null
                ? this[_symbol_utils.$content].toString()
                : ""
            );
          }
        }
        class DefaultUi extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "defaultUi", true);
            this.id = attributes.id || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.extras = null;
          }
        }
        class Desc extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "desc", true);
            this.id = attributes.id || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.boolean = new _xfa_object.XFAObjectArray();
            this.date = new _xfa_object.XFAObjectArray();
            this.dateTime = new _xfa_object.XFAObjectArray();
            this.decimal = new _xfa_object.XFAObjectArray();
            this.exData = new _xfa_object.XFAObjectArray();
            this.float = new _xfa_object.XFAObjectArray();
            this.image = new _xfa_object.XFAObjectArray();
            this.integer = new _xfa_object.XFAObjectArray();
            this.text = new _xfa_object.XFAObjectArray();
            this.time = new _xfa_object.XFAObjectArray();
          }
        }
        class DigestMethod extends _xfa_object.OptionObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "digestMethod", [
              "",
              "SHA1",
              "SHA256",
              "SHA512",
              "RIPEMD160",
            ]);
            this.id = attributes.id || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
        }
        class DigestMethods extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "digestMethods", true);
            this.id = attributes.id || "";
            this.type = (0, _utils.getStringOption)(attributes.type, [
              "optional",
              "required",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.digestMethod = new _xfa_object.XFAObjectArray();
          }
        }
        class Draw extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "draw", true);
            this.anchorType = (0, _utils.getStringOption)(
              attributes.anchorType,
              [
                "topLeft",
                "bottomCenter",
                "bottomLeft",
                "bottomRight",
                "middleCenter",
                "middleLeft",
                "middleRight",
                "topCenter",
                "topRight",
              ]
            );
            this.colSpan = (0, _utils.getInteger)({
              data: attributes.colSpan,
              defaultValue: 1,
              validate: (n) => n >= 1 || n === -1,
            });
            this.h = attributes.h
              ? (0, _utils.getMeasurement)(attributes.h)
              : "";
            this.hAlign = (0, _utils.getStringOption)(attributes.hAlign, [
              "left",
              "center",
              "justify",
              "justifyAll",
              "radix",
              "right",
            ]);
            this.id = attributes.id || "";
            this.locale = attributes.locale || "";
            this.maxH = (0, _utils.getMeasurement)(attributes.maxH, "0pt");
            this.maxW = (0, _utils.getMeasurement)(attributes.maxW, "0pt");
            this.minH = (0, _utils.getMeasurement)(attributes.minH, "0pt");
            this.minW = (0, _utils.getMeasurement)(attributes.minW, "0pt");
            this.name = attributes.name || "";
            this.presence = (0, _utils.getStringOption)(attributes.presence, [
              "visible",
              "hidden",
              "inactive",
              "invisible",
            ]);
            this.relevant = (0, _utils.getRelevant)(attributes.relevant);
            this.rotate = (0, _utils.getInteger)({
              data: attributes.rotate,
              defaultValue: 0,
              validate: (x) => x % 90 === 0,
            });
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.w = attributes.w
              ? (0, _utils.getMeasurement)(attributes.w)
              : "";
            this.x = (0, _utils.getMeasurement)(attributes.x, "0pt");
            this.y = (0, _utils.getMeasurement)(attributes.y, "0pt");
            this.assist = null;
            this.border = null;
            this.caption = null;
            this.desc = null;
            this.extras = null;
            this.font = null;
            this.keep = null;
            this.margin = null;
            this.para = null;
            this.traversal = null;
            this.ui = null;
            this.value = null;
            this.setProperty = new _xfa_object.XFAObjectArray();
          }
          [_symbol_utils.$setValue](value) {
            _setValue(this, value);
          }
          [_symbol_utils.$toHTML](availableSpace) {
            setTabIndex(this);
            if (this.presence === "hidden" || this.presence === "inactive") {
              return _utils.HTMLResult.EMPTY;
            }
            (0, _html_utils.fixDimensions)(this);
            this[_symbol_utils.$pushPara]();
            const savedW = this.w;
            const savedH = this.h;
            const { w, h, isBroken } = (0, _html_utils.layoutNode)(
              this,
              availableSpace
            );
            if (w && this.w === "") {
              if (
                isBroken &&
                this[_symbol_utils.$getSubformParent]()[
                  _symbol_utils.$isThereMoreWidth
                ]()
              ) {
                this[_symbol_utils.$popPara]();
                return _utils.HTMLResult.FAILURE;
              }
              this.w = w;
            }
            if (h && this.h === "") {
              this.h = h;
            }
            setFirstUnsplittable(this);
            if (!(0, _layout.checkDimensions)(this, availableSpace)) {
              this.w = savedW;
              this.h = savedH;
              this[_symbol_utils.$popPara]();
              return _utils.HTMLResult.FAILURE;
            }
            unsetFirstUnsplittable(this);
            const style = (0, _html_utils.toStyle)(
              this,
              "font",
              "hAlign",
              "dimensions",
              "position",
              "presence",
              "rotate",
              "anchorType",
              "border",
              "margin"
            );
            (0, _html_utils.setMinMaxDimensions)(this, style);
            if (style.margin) {
              style.padding = style.margin;
              delete style.margin;
            }
            const classNames = ["xfaDraw"];
            if (this.font) {
              classNames.push("xfaFont");
            }
            if ((0, _html_utils.isPrintOnly)(this)) {
              classNames.push("xfaPrintOnly");
            }
            const attributes = {
              style,
              id: this[_symbol_utils.$uid],
              class: classNames,
            };
            if (this.name) {
              attributes.xfaName = this.name;
            }
            const html = {
              name: "div",
              attributes,
              children: [],
            };
            applyAssist(this, attributes);
            const bbox = (0, _html_utils.computeBbox)(
              this,
              html,
              availableSpace
            );
            const value = this.value
              ? this.value[_symbol_utils.$toHTML](availableSpace).html
              : null;
            if (value === null) {
              this.w = savedW;
              this.h = savedH;
              this[_symbol_utils.$popPara]();
              return _utils.HTMLResult.success(
                (0, _html_utils.createWrapper)(this, html),
                bbox
              );
            }
            html.children.push(value);
            (0, _html_utils.setPara)(this, style, value);
            this.w = savedW;
            this.h = savedH;
            this[_symbol_utils.$popPara]();
            return _utils.HTMLResult.success(
              (0, _html_utils.createWrapper)(this, html),
              bbox
            );
          }
        }
        class Edge extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "edge", true);
            this.cap = (0, _utils.getStringOption)(attributes.cap, [
              "square",
              "butt",
              "round",
            ]);
            this.id = attributes.id || "";
            this.presence = (0, _utils.getStringOption)(attributes.presence, [
              "visible",
              "hidden",
              "inactive",
              "invisible",
            ]);
            this.stroke = (0, _utils.getStringOption)(attributes.stroke, [
              "solid",
              "dashDot",
              "dashDotDot",
              "dashed",
              "dotted",
              "embossed",
              "etched",
              "lowered",
              "raised",
            ]);
            this.thickness = (0, _utils.getMeasurement)(
              attributes.thickness,
              "0.5pt"
            );
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.color = null;
            this.extras = null;
          }
          [_symbol_utils.$toStyle]() {
            const style = (0, _html_utils.toStyle)(this, "visibility");
            Object.assign(style, {
              linecap: this.cap,
              width: (0, _html_utils.measureToString)(this.thickness),
              color: this.color
                ? this.color[_symbol_utils.$toStyle]()
                : "#000000",
              style: "",
            });
            if (this.presence !== "visible") {
              style.style = "none";
            } else {
              switch (this.stroke) {
                case "solid":
                  style.style = "solid";
                  break;
                case "dashDot":
                  style.style = "dashed";
                  break;
                case "dashDotDot":
                  style.style = "dashed";
                  break;
                case "dashed":
                  style.style = "dashed";
                  break;
                case "dotted":
                  style.style = "dotted";
                  break;
                case "embossed":
                  style.style = "ridge";
                  break;
                case "etched":
                  style.style = "groove";
                  break;
                case "lowered":
                  style.style = "inset";
                  break;
                case "raised":
                  style.style = "outset";
                  break;
              }
            }
            return style;
          }
        }
        class Encoding extends _xfa_object.OptionObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "encoding", [
              "adbe.x509.rsa_sha1",
              "adbe.pkcs7.detached",
              "adbe.pkcs7.sha1",
            ]);
            this.id = attributes.id || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
        }
        class Encodings extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "encodings", true);
            this.id = attributes.id || "";
            this.type = (0, _utils.getStringOption)(attributes.type, [
              "optional",
              "required",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.encoding = new _xfa_object.XFAObjectArray();
          }
        }
        class Encrypt extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "encrypt", true);
            this.id = attributes.id || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.certificate = null;
          }
        }
        class EncryptData extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "encryptData", true);
            this.id = attributes.id || "";
            this.operation = (0, _utils.getStringOption)(attributes.operation, [
              "encrypt",
              "decrypt",
            ]);
            this.target = attributes.target || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.filter = null;
            this.manifest = null;
          }
        }
        class Encryption extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "encryption", true);
            this.id = attributes.id || "";
            this.type = (0, _utils.getStringOption)(attributes.type, [
              "optional",
              "required",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.certificate = new _xfa_object.XFAObjectArray();
          }
        }
        class EncryptionMethod extends _xfa_object.OptionObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "encryptionMethod", [
              "",
              "AES256-CBC",
              "TRIPLEDES-CBC",
              "AES128-CBC",
              "AES192-CBC",
            ]);
            this.id = attributes.id || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
        }
        class EncryptionMethods extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "encryptionMethods", true);
            this.id = attributes.id || "";
            this.type = (0, _utils.getStringOption)(attributes.type, [
              "optional",
              "required",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.encryptionMethod = new _xfa_object.XFAObjectArray();
          }
        }
        class Event extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "event", true);
            this.activity = (0, _utils.getStringOption)(attributes.activity, [
              "click",
              "change",
              "docClose",
              "docReady",
              "enter",
              "exit",
              "full",
              "indexChange",
              "initialize",
              "mouseDown",
              "mouseEnter",
              "mouseExit",
              "mouseUp",
              "postExecute",
              "postOpen",
              "postPrint",
              "postSave",
              "postSign",
              "postSubmit",
              "preExecute",
              "preOpen",
              "prePrint",
              "preSave",
              "preSign",
              "preSubmit",
              "ready",
              "validationState",
            ]);
            this.id = attributes.id || "";
            this.listen = (0, _utils.getStringOption)(attributes.listen, [
              "refOnly",
              "refAndDescendents",
            ]);
            this.name = attributes.name || "";
            this.ref = attributes.ref || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.extras = null;
            this.encryptData = null;
            this.execute = null;
            this.script = null;
            this.signData = null;
            this.submit = null;
          }
        }
        class ExData extends _xfa_object.ContentObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "exData");
            this.contentType = attributes.contentType || "";
            this.href = attributes.href || "";
            this.id = attributes.id || "";
            this.maxLength = (0, _utils.getInteger)({
              data: attributes.maxLength,
              defaultValue: -1,
              validate: (x) => x >= -1,
            });
            this.name = attributes.name || "";
            this.rid = attributes.rid || "";
            this.transferEncoding = (0, _utils.getStringOption)(
              attributes.transferEncoding,
              ["none", "base64", "package"]
            );
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
          [_symbol_utils.$isCDATAXml]() {
            return this.contentType === "text/html";
          }
          [_symbol_utils.$onChild](child) {
            if (
              this.contentType === "text/html" &&
              child[_symbol_utils.$namespaceId] ===
                _namespaces.NamespaceIds.xhtml.id
            ) {
              this[_symbol_utils.$content] = child;
              return true;
            }
            if (this.contentType === "text/xml") {
              this[_symbol_utils.$content] = child;
              return true;
            }
            return false;
          }
          [_symbol_utils.$toHTML](availableSpace) {
            if (
              this.contentType !== "text/html" ||
              !this[_symbol_utils.$content]
            ) {
              return _utils.HTMLResult.EMPTY;
            }
            return this[_symbol_utils.$content][_symbol_utils.$toHTML](
              availableSpace
            );
          }
        }
        class ExObject extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "exObject", true);
            this.archive = attributes.archive || "";
            this.classId = attributes.classId || "";
            this.codeBase = attributes.codeBase || "";
            this.codeType = attributes.codeType || "";
            this.id = attributes.id || "";
            this.name = attributes.name || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.extras = null;
            this.boolean = new _xfa_object.XFAObjectArray();
            this.date = new _xfa_object.XFAObjectArray();
            this.dateTime = new _xfa_object.XFAObjectArray();
            this.decimal = new _xfa_object.XFAObjectArray();
            this.exData = new _xfa_object.XFAObjectArray();
            this.exObject = new _xfa_object.XFAObjectArray();
            this.float = new _xfa_object.XFAObjectArray();
            this.image = new _xfa_object.XFAObjectArray();
            this.integer = new _xfa_object.XFAObjectArray();
            this.text = new _xfa_object.XFAObjectArray();
            this.time = new _xfa_object.XFAObjectArray();
          }
        }
        class ExclGroup extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "exclGroup", true);
            this.access = (0, _utils.getStringOption)(attributes.access, [
              "open",
              "nonInteractive",
              "protected",
              "readOnly",
            ]);
            this.accessKey = attributes.accessKey || "";
            this.anchorType = (0, _utils.getStringOption)(
              attributes.anchorType,
              [
                "topLeft",
                "bottomCenter",
                "bottomLeft",
                "bottomRight",
                "middleCenter",
                "middleLeft",
                "middleRight",
                "topCenter",
                "topRight",
              ]
            );
            this.colSpan = (0, _utils.getInteger)({
              data: attributes.colSpan,
              defaultValue: 1,
              validate: (n) => n >= 1 || n === -1,
            });
            this.h = attributes.h
              ? (0, _utils.getMeasurement)(attributes.h)
              : "";
            this.hAlign = (0, _utils.getStringOption)(attributes.hAlign, [
              "left",
              "center",
              "justify",
              "justifyAll",
              "radix",
              "right",
            ]);
            this.id = attributes.id || "";
            this.layout = (0, _utils.getStringOption)(attributes.layout, [
              "position",
              "lr-tb",
              "rl-row",
              "rl-tb",
              "row",
              "table",
              "tb",
            ]);
            this.maxH = (0, _utils.getMeasurement)(attributes.maxH, "0pt");
            this.maxW = (0, _utils.getMeasurement)(attributes.maxW, "0pt");
            this.minH = (0, _utils.getMeasurement)(attributes.minH, "0pt");
            this.minW = (0, _utils.getMeasurement)(attributes.minW, "0pt");
            this.name = attributes.name || "";
            this.presence = (0, _utils.getStringOption)(attributes.presence, [
              "visible",
              "hidden",
              "inactive",
              "invisible",
            ]);
            this.relevant = (0, _utils.getRelevant)(attributes.relevant);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.w = attributes.w
              ? (0, _utils.getMeasurement)(attributes.w)
              : "";
            this.x = (0, _utils.getMeasurement)(attributes.x, "0pt");
            this.y = (0, _utils.getMeasurement)(attributes.y, "0pt");
            this.assist = null;
            this.bind = null;
            this.border = null;
            this.calculate = null;
            this.caption = null;
            this.desc = null;
            this.extras = null;
            this.margin = null;
            this.para = null;
            this.traversal = null;
            this.validate = null;
            this.connect = new _xfa_object.XFAObjectArray();
            this.event = new _xfa_object.XFAObjectArray();
            this.field = new _xfa_object.XFAObjectArray();
            this.setProperty = new _xfa_object.XFAObjectArray();
          }
          [_symbol_utils.$isBindable]() {
            return true;
          }
          [_symbol_utils.$hasSettableValue]() {
            return true;
          }
          [_symbol_utils.$setValue](value) {
            for (const field of this.field.children) {
              if (!field.value) {
                const nodeValue = new Value({});
                field[_symbol_utils.$appendChild](nodeValue);
                field.value = nodeValue;
              }
              field.value[_symbol_utils.$setValue](value);
            }
          }
          [_symbol_utils.$isThereMoreWidth]() {
            return (
              (this.layout.endsWith("-tb") &&
                this[_symbol_utils.$extra].attempt === 0 &&
                this[_symbol_utils.$extra].numberInLine > 0) ||
              this[_symbol_utils.$getParent]()[
                _symbol_utils.$isThereMoreWidth
              ]()
            );
          }
          [_symbol_utils.$isSplittable]() {
            const parent = this[_symbol_utils.$getSubformParent]();
            if (!parent[_symbol_utils.$isSplittable]()) {
              return false;
            }
            if (this[_symbol_utils.$extra]._isSplittable !== undefined) {
              return this[_symbol_utils.$extra]._isSplittable;
            }
            if (this.layout === "position" || this.layout.includes("row")) {
              this[_symbol_utils.$extra]._isSplittable = false;
              return false;
            }
            if (
              parent.layout?.endsWith("-tb") &&
              parent[_symbol_utils.$extra].numberInLine !== 0
            ) {
              return false;
            }
            this[_symbol_utils.$extra]._isSplittable = true;
            return true;
          }
          [_symbol_utils.$flushHTML]() {
            return (0, _layout.flushHTML)(this);
          }
          [_symbol_utils.$addHTML](html, bbox) {
            (0, _layout.addHTML)(this, html, bbox);
          }
          [_symbol_utils.$getAvailableSpace]() {
            return (0, _layout.getAvailableSpace)(this);
          }
          [_symbol_utils.$toHTML](availableSpace) {
            setTabIndex(this);
            if (
              this.presence === "hidden" ||
              this.presence === "inactive" ||
              this.h === 0 ||
              this.w === 0
            ) {
              return _utils.HTMLResult.EMPTY;
            }
            (0, _html_utils.fixDimensions)(this);
            const children = [];
            const attributes = {
              id: this[_symbol_utils.$uid],
              class: [],
            };
            (0, _html_utils.setAccess)(this, attributes.class);
            if (!this[_symbol_utils.$extra]) {
              this[_symbol_utils.$extra] = Object.create(null);
            }
            Object.assign(this[_symbol_utils.$extra], {
              children,
              attributes,
              attempt: 0,
              line: null,
              numberInLine: 0,
              availableSpace: {
                width: Math.min(this.w || Infinity, availableSpace.width),
                height: Math.min(this.h || Infinity, availableSpace.height),
              },
              width: 0,
              height: 0,
              prevHeight: 0,
              currentWidth: 0,
            });
            const isSplittable = this[_symbol_utils.$isSplittable]();
            if (!isSplittable) {
              setFirstUnsplittable(this);
            }
            if (!(0, _layout.checkDimensions)(this, availableSpace)) {
              return _utils.HTMLResult.FAILURE;
            }
            const filter = new Set(["field"]);
            if (this.layout.includes("row")) {
              const columnWidths =
                this[_symbol_utils.$getSubformParent]().columnWidths;
              if (Array.isArray(columnWidths) && columnWidths.length > 0) {
                this[_symbol_utils.$extra].columnWidths = columnWidths;
                this[_symbol_utils.$extra].currentColumn = 0;
              }
            }
            const style = (0, _html_utils.toStyle)(
              this,
              "anchorType",
              "dimensions",
              "position",
              "presence",
              "border",
              "margin",
              "hAlign"
            );
            const classNames = ["xfaExclgroup"];
            const cl = (0, _html_utils.layoutClass)(this);
            if (cl) {
              classNames.push(cl);
            }
            if ((0, _html_utils.isPrintOnly)(this)) {
              classNames.push("xfaPrintOnly");
            }
            attributes.style = style;
            attributes.class = classNames;
            if (this.name) {
              attributes.xfaName = this.name;
            }
            this[_symbol_utils.$pushPara]();
            const isLrTb = this.layout === "lr-tb" || this.layout === "rl-tb";
            const maxRun = isLrTb ? MAX_ATTEMPTS_FOR_LRTB_LAYOUT : 1;
            for (
              ;
              this[_symbol_utils.$extra].attempt < maxRun;
              this[_symbol_utils.$extra].attempt++
            ) {
              if (
                isLrTb &&
                this[_symbol_utils.$extra].attempt ===
                  MAX_ATTEMPTS_FOR_LRTB_LAYOUT - 1
              ) {
                this[_symbol_utils.$extra].numberInLine = 0;
              }
              const result = this[_symbol_utils.$childrenToHTML]({
                filter,
                include: true,
              });
              if (result.success) {
                break;
              }
              if (result.isBreak()) {
                this[_symbol_utils.$popPara]();
                return result;
              }
              if (
                isLrTb &&
                this[_symbol_utils.$extra].attempt === 0 &&
                this[_symbol_utils.$extra].numberInLine === 0 &&
                !this[_symbol_utils.$getTemplateRoot]()[_symbol_utils.$extra]
                  .noLayoutFailure
              ) {
                this[_symbol_utils.$extra].attempt = maxRun;
                break;
              }
            }
            this[_symbol_utils.$popPara]();
            if (!isSplittable) {
              unsetFirstUnsplittable(this);
            }
            if (this[_symbol_utils.$extra].attempt === maxRun) {
              if (!isSplittable) {
                delete this[_symbol_utils.$extra];
              }
              return _utils.HTMLResult.FAILURE;
            }
            let marginH = 0;
            let marginV = 0;
            if (this.margin) {
              marginH = this.margin.leftInset + this.margin.rightInset;
              marginV = this.margin.topInset + this.margin.bottomInset;
            }
            const width = Math.max(
              this[_symbol_utils.$extra].width + marginH,
              this.w || 0
            );
            const height = Math.max(
              this[_symbol_utils.$extra].height + marginV,
              this.h || 0
            );
            const bbox = [this.x, this.y, width, height];
            if (this.w === "") {
              style.width = (0, _html_utils.measureToString)(width);
            }
            if (this.h === "") {
              style.height = (0, _html_utils.measureToString)(height);
            }
            const html = {
              name: "div",
              attributes,
              children,
            };
            applyAssist(this, attributes);
            delete this[_symbol_utils.$extra];
            return _utils.HTMLResult.success(
              (0, _html_utils.createWrapper)(this, html),
              bbox
            );
          }
        }
        class Execute extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "execute");
            this.connection = attributes.connection || "";
            this.executeType = (0, _utils.getStringOption)(
              attributes.executeType,
              ["import", "remerge"]
            );
            this.id = attributes.id || "";
            this.runAt = (0, _utils.getStringOption)(attributes.runAt, [
              "client",
              "both",
              "server",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
        }
        class Extras extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "extras", true);
            this.id = attributes.id || "";
            this.name = attributes.name || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.boolean = new _xfa_object.XFAObjectArray();
            this.date = new _xfa_object.XFAObjectArray();
            this.dateTime = new _xfa_object.XFAObjectArray();
            this.decimal = new _xfa_object.XFAObjectArray();
            this.exData = new _xfa_object.XFAObjectArray();
            this.extras = new _xfa_object.XFAObjectArray();
            this.float = new _xfa_object.XFAObjectArray();
            this.image = new _xfa_object.XFAObjectArray();
            this.integer = new _xfa_object.XFAObjectArray();
            this.text = new _xfa_object.XFAObjectArray();
            this.time = new _xfa_object.XFAObjectArray();
          }
        }
        class Field extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "field", true);
            this.access = (0, _utils.getStringOption)(attributes.access, [
              "open",
              "nonInteractive",
              "protected",
              "readOnly",
            ]);
            this.accessKey = attributes.accessKey || "";
            this.anchorType = (0, _utils.getStringOption)(
              attributes.anchorType,
              [
                "topLeft",
                "bottomCenter",
                "bottomLeft",
                "bottomRight",
                "middleCenter",
                "middleLeft",
                "middleRight",
                "topCenter",
                "topRight",
              ]
            );
            this.colSpan = (0, _utils.getInteger)({
              data: attributes.colSpan,
              defaultValue: 1,
              validate: (n) => n >= 1 || n === -1,
            });
            this.h = attributes.h
              ? (0, _utils.getMeasurement)(attributes.h)
              : "";
            this.hAlign = (0, _utils.getStringOption)(attributes.hAlign, [
              "left",
              "center",
              "justify",
              "justifyAll",
              "radix",
              "right",
            ]);
            this.id = attributes.id || "";
            this.locale = attributes.locale || "";
            this.maxH = (0, _utils.getMeasurement)(attributes.maxH, "0pt");
            this.maxW = (0, _utils.getMeasurement)(attributes.maxW, "0pt");
            this.minH = (0, _utils.getMeasurement)(attributes.minH, "0pt");
            this.minW = (0, _utils.getMeasurement)(attributes.minW, "0pt");
            this.name = attributes.name || "";
            this.presence = (0, _utils.getStringOption)(attributes.presence, [
              "visible",
              "hidden",
              "inactive",
              "invisible",
            ]);
            this.relevant = (0, _utils.getRelevant)(attributes.relevant);
            this.rotate = (0, _utils.getInteger)({
              data: attributes.rotate,
              defaultValue: 0,
              validate: (x) => x % 90 === 0,
            });
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.w = attributes.w
              ? (0, _utils.getMeasurement)(attributes.w)
              : "";
            this.x = (0, _utils.getMeasurement)(attributes.x, "0pt");
            this.y = (0, _utils.getMeasurement)(attributes.y, "0pt");
            this.assist = null;
            this.bind = null;
            this.border = null;
            this.calculate = null;
            this.caption = null;
            this.desc = null;
            this.extras = null;
            this.font = null;
            this.format = null;
            this.items = new _xfa_object.XFAObjectArray(2);
            this.keep = null;
            this.margin = null;
            this.para = null;
            this.traversal = null;
            this.ui = null;
            this.validate = null;
            this.value = null;
            this.bindItems = new _xfa_object.XFAObjectArray();
            this.connect = new _xfa_object.XFAObjectArray();
            this.event = new _xfa_object.XFAObjectArray();
            this.setProperty = new _xfa_object.XFAObjectArray();
          }
          [_symbol_utils.$isBindable]() {
            return true;
          }
          [_symbol_utils.$setValue](value) {
            _setValue(this, value);
          }
          [_symbol_utils.$toHTML](availableSpace) {
            setTabIndex(this);
            if (!this.ui) {
              this.ui = new Ui({});
              this.ui[_symbol_utils.$globalData] =
                this[_symbol_utils.$globalData];
              this[_symbol_utils.$appendChild](this.ui);
              let node;
              switch (this.items.children.length) {
                case 0:
                  node = new TextEdit({});
                  this.ui.textEdit = node;
                  break;
                case 1:
                  node = new CheckButton({});
                  this.ui.checkButton = node;
                  break;
                case 2:
                  node = new ChoiceList({});
                  this.ui.choiceList = node;
                  break;
              }
              this.ui[_symbol_utils.$appendChild](node);
            }
            if (
              !this.ui ||
              this.presence === "hidden" ||
              this.presence === "inactive" ||
              this.h === 0 ||
              this.w === 0
            ) {
              return _utils.HTMLResult.EMPTY;
            }
            if (this.caption) {
              delete this.caption[_symbol_utils.$extra];
            }
            this[_symbol_utils.$pushPara]();
            const caption = this.caption
              ? this.caption[_symbol_utils.$toHTML](availableSpace).html
              : null;
            const savedW = this.w;
            const savedH = this.h;
            let marginH = 0;
            let marginV = 0;
            if (this.margin) {
              marginH = this.margin.leftInset + this.margin.rightInset;
              marginV = this.margin.topInset + this.margin.bottomInset;
            }
            let borderDims = null;
            if (this.w === "" || this.h === "") {
              let width = null;
              let height = null;
              let uiW = 0;
              let uiH = 0;
              if (this.ui.checkButton) {
                uiW = uiH = this.ui.checkButton.size;
              } else {
                const { w, h } = (0, _html_utils.layoutNode)(
                  this,
                  availableSpace
                );
                if (w !== null) {
                  uiW = w;
                  uiH = h;
                } else {
                  uiH = (0, _fonts.getMetrics)(this.font, true).lineNoGap;
                }
              }
              borderDims = getBorderDims(this.ui[_symbol_utils.$getExtra]());
              uiW += borderDims.w;
              uiH += borderDims.h;
              if (this.caption) {
                const { w, h, isBroken } =
                  this.caption[_symbol_utils.$getExtra](availableSpace);
                if (
                  isBroken &&
                  this[_symbol_utils.$getSubformParent]()[
                    _symbol_utils.$isThereMoreWidth
                  ]()
                ) {
                  this[_symbol_utils.$popPara]();
                  return _utils.HTMLResult.FAILURE;
                }
                width = w;
                height = h;
                switch (this.caption.placement) {
                  case "left":
                  case "right":
                  case "inline":
                    width += uiW;
                    break;
                  case "top":
                  case "bottom":
                    height += uiH;
                    break;
                }
              } else {
                width = uiW;
                height = uiH;
              }
              if (width && this.w === "") {
                width += marginH;
                this.w = Math.min(
                  this.maxW <= 0 ? Infinity : this.maxW,
                  this.minW + 1 < width ? width : this.minW
                );
              }
              if (height && this.h === "") {
                height += marginV;
                this.h = Math.min(
                  this.maxH <= 0 ? Infinity : this.maxH,
                  this.minH + 1 < height ? height : this.minH
                );
              }
            }
            this[_symbol_utils.$popPara]();
            (0, _html_utils.fixDimensions)(this);
            setFirstUnsplittable(this);
            if (!(0, _layout.checkDimensions)(this, availableSpace)) {
              this.w = savedW;
              this.h = savedH;
              this[_symbol_utils.$popPara]();
              return _utils.HTMLResult.FAILURE;
            }
            unsetFirstUnsplittable(this);
            const style = (0, _html_utils.toStyle)(
              this,
              "font",
              "dimensions",
              "position",
              "rotate",
              "anchorType",
              "presence",
              "margin",
              "hAlign"
            );
            (0, _html_utils.setMinMaxDimensions)(this, style);
            const classNames = ["xfaField"];
            if (this.font) {
              classNames.push("xfaFont");
            }
            if ((0, _html_utils.isPrintOnly)(this)) {
              classNames.push("xfaPrintOnly");
            }
            const attributes = {
              style,
              id: this[_symbol_utils.$uid],
              class: classNames,
            };
            if (style.margin) {
              style.padding = style.margin;
              delete style.margin;
            }
            (0, _html_utils.setAccess)(this, classNames);
            if (this.name) {
              attributes.xfaName = this.name;
            }
            const children = [];
            const html = {
              name: "div",
              attributes,
              children,
            };
            applyAssist(this, attributes);
            const borderStyle = this.border
              ? this.border[_symbol_utils.$toStyle]()
              : null;
            const bbox = (0, _html_utils.computeBbox)(
              this,
              html,
              availableSpace
            );
            const ui = this.ui[_symbol_utils.$toHTML]().html;
            if (!ui) {
              Object.assign(style, borderStyle);
              return _utils.HTMLResult.success(
                (0, _html_utils.createWrapper)(this, html),
                bbox
              );
            }
            if (this[_symbol_utils.$tabIndex]) {
              if (ui.children?.[0]) {
                ui.children[0].attributes.tabindex =
                  this[_symbol_utils.$tabIndex];
              } else {
                ui.attributes.tabindex = this[_symbol_utils.$tabIndex];
              }
            }
            if (!ui.attributes.style) {
              ui.attributes.style = Object.create(null);
            }
            let aElement = null;
            if (this.ui.button) {
              if (ui.children.length === 1) {
                [aElement] = ui.children.splice(0, 1);
              }
              Object.assign(ui.attributes.style, borderStyle);
            } else {
              Object.assign(style, borderStyle);
            }
            children.push(ui);
            if (this.value) {
              if (this.ui.imageEdit) {
                ui.children.push(this.value[_symbol_utils.$toHTML]().html);
              } else if (!this.ui.button) {
                let value = "";
                if (this.value.exData) {
                  value = this.value.exData[_symbol_utils.$text]();
                } else if (this.value.text) {
                  value = this.value.text[_symbol_utils.$getExtra]();
                } else {
                  const htmlValue = this.value[_symbol_utils.$toHTML]().html;
                  if (htmlValue !== null) {
                    value = htmlValue.children[0].value;
                  }
                }
                if (this.ui.textEdit && this.value.text?.maxChars) {
                  ui.children[0].attributes.maxLength =
                    this.value.text.maxChars;
                }
                if (value) {
                  if (this.ui.numericEdit) {
                    value = parseFloat(value);
                    value = isNaN(value) ? "" : value.toString();
                  }
                  if (ui.children[0].name === "textarea") {
                    ui.children[0].attributes.textContent = value;
                  } else {
                    ui.children[0].attributes.value = value;
                  }
                }
              }
            }
            if (!this.ui.imageEdit && ui.children?.[0] && this.h) {
              borderDims =
                borderDims || getBorderDims(this.ui[_symbol_utils.$getExtra]());
              let captionHeight = 0;
              if (
                this.caption &&
                ["top", "bottom"].includes(this.caption.placement)
              ) {
                captionHeight = this.caption.reserve;
                if (captionHeight <= 0) {
                  captionHeight =
                    this.caption[_symbol_utils.$getExtra](availableSpace).h;
                }
                const inputHeight =
                  this.h - captionHeight - marginV - borderDims.h;
                ui.children[0].attributes.style.height = (0,
                _html_utils.measureToString)(inputHeight);
              } else {
                ui.children[0].attributes.style.height = "100%";
              }
            }
            if (aElement) {
              ui.children.push(aElement);
            }
            if (!caption) {
              if (ui.attributes.class) {
                ui.attributes.class.push("xfaLeft");
              }
              this.w = savedW;
              this.h = savedH;
              return _utils.HTMLResult.success(
                (0, _html_utils.createWrapper)(this, html),
                bbox
              );
            }
            if (this.ui.button) {
              if (style.padding) {
                delete style.padding;
              }
              if (caption.name === "div") {
                caption.name = "span";
              }
              ui.children.push(caption);
              return _utils.HTMLResult.success(html, bbox);
            } else if (this.ui.checkButton) {
              caption.attributes.class[0] = "xfaCaptionForCheckButton";
            }
            if (!ui.attributes.class) {
              ui.attributes.class = [];
            }
            ui.children.splice(0, 0, caption);
            switch (this.caption.placement) {
              case "left":
                ui.attributes.class.push("xfaLeft");
                break;
              case "right":
                ui.attributes.class.push("xfaRight");
                break;
              case "top":
                ui.attributes.class.push("xfaTop");
                break;
              case "bottom":
                ui.attributes.class.push("xfaBottom");
                break;
              case "inline":
                ui.attributes.class.push("xfaLeft");
                break;
            }
            this.w = savedW;
            this.h = savedH;
            return _utils.HTMLResult.success(
              (0, _html_utils.createWrapper)(this, html),
              bbox
            );
          }
        }
        exports.Field = Field;
        class Fill extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "fill", true);
            this.id = attributes.id || "";
            this.presence = (0, _utils.getStringOption)(attributes.presence, [
              "visible",
              "hidden",
              "inactive",
              "invisible",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.color = null;
            this.extras = null;
            this.linear = null;
            this.pattern = null;
            this.radial = null;
            this.solid = null;
            this.stipple = null;
          }
          [_symbol_utils.$toStyle]() {
            const parent = this[_symbol_utils.$getParent]();
            const grandpa = parent[_symbol_utils.$getParent]();
            const ggrandpa = grandpa[_symbol_utils.$getParent]();
            const style = Object.create(null);
            let propName = "color";
            let altPropName = propName;
            if (parent instanceof Border) {
              propName = "background-color";
              altPropName = "background";
              if (ggrandpa instanceof Ui) {
                style.backgroundColor = "white";
              }
            }
            if (parent instanceof Rectangle || parent instanceof Arc) {
              propName = altPropName = "fill";
              style.fill = "white";
            }
            for (const name of Object.getOwnPropertyNames(this)) {
              if (name === "extras" || name === "color") {
                continue;
              }
              const obj = this[name];
              if (!(obj instanceof _xfa_object.XFAObject)) {
                continue;
              }
              const color = obj[_symbol_utils.$toStyle](this.color);
              if (color) {
                style[color.startsWith("#") ? propName : altPropName] = color;
              }
              return style;
            }
            if (this.color?.value) {
              const color = this.color[_symbol_utils.$toStyle]();
              style[color.startsWith("#") ? propName : altPropName] = color;
            }
            return style;
          }
        }
        class Filter extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "filter", true);
            this.addRevocationInfo = (0, _utils.getStringOption)(
              attributes.addRevocationInfo,
              ["", "required", "optional", "none"]
            );
            this.id = attributes.id || "";
            this.name = attributes.name || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.version = (0, _utils.getInteger)({
              data: this.version,
              defaultValue: 5,
              validate: (x) => x >= 1 && x <= 5,
            });
            this.appearanceFilter = null;
            this.certificates = null;
            this.digestMethods = null;
            this.encodings = null;
            this.encryptionMethods = null;
            this.handler = null;
            this.lockDocument = null;
            this.mdp = null;
            this.reasons = null;
            this.timeStamp = null;
          }
        }
        class Float extends _xfa_object.ContentObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "float");
            this.id = attributes.id || "";
            this.name = attributes.name || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
          [_symbol_utils.$finalize]() {
            const number = parseFloat(this[_symbol_utils.$content].trim());
            this[_symbol_utils.$content] = isNaN(number) ? null : number;
          }
          [_symbol_utils.$toHTML](availableSpace) {
            return valueToHtml(
              this[_symbol_utils.$content] !== null
                ? this[_symbol_utils.$content].toString()
                : ""
            );
          }
        }
        class Font extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "font", true);
            this.baselineShift = (0, _utils.getMeasurement)(
              attributes.baselineShift
            );
            this.fontHorizontalScale = (0, _utils.getFloat)({
              data: attributes.fontHorizontalScale,
              defaultValue: 100,
              validate: (x) => x >= 0,
            });
            this.fontVerticalScale = (0, _utils.getFloat)({
              data: attributes.fontVerticalScale,
              defaultValue: 100,
              validate: (x) => x >= 0,
            });
            this.id = attributes.id || "";
            this.kerningMode = (0, _utils.getStringOption)(
              attributes.kerningMode,
              ["none", "pair"]
            );
            this.letterSpacing = (0, _utils.getMeasurement)(
              attributes.letterSpacing,
              "0"
            );
            this.lineThrough = (0, _utils.getInteger)({
              data: attributes.lineThrough,
              defaultValue: 0,
              validate: (x) => x === 1 || x === 2,
            });
            this.lineThroughPeriod = (0, _utils.getStringOption)(
              attributes.lineThroughPeriod,
              ["all", "word"]
            );
            this.overline = (0, _utils.getInteger)({
              data: attributes.overline,
              defaultValue: 0,
              validate: (x) => x === 1 || x === 2,
            });
            this.overlinePeriod = (0, _utils.getStringOption)(
              attributes.overlinePeriod,
              ["all", "word"]
            );
            this.posture = (0, _utils.getStringOption)(attributes.posture, [
              "normal",
              "italic",
            ]);
            this.size = (0, _utils.getMeasurement)(attributes.size, "10pt");
            this.typeface = attributes.typeface || "Courier";
            this.underline = (0, _utils.getInteger)({
              data: attributes.underline,
              defaultValue: 0,
              validate: (x) => x === 1 || x === 2,
            });
            this.underlinePeriod = (0, _utils.getStringOption)(
              attributes.underlinePeriod,
              ["all", "word"]
            );
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.weight = (0, _utils.getStringOption)(attributes.weight, [
              "normal",
              "bold",
            ]);
            this.extras = null;
            this.fill = null;
          }
          [_symbol_utils.$clean](builder) {
            super[_symbol_utils.$clean](builder);
            this[_symbol_utils.$globalData].usedTypefaces.add(this.typeface);
          }
          [_symbol_utils.$toStyle]() {
            const style = (0, _html_utils.toStyle)(this, "fill");
            const color = style.color;
            if (color) {
              if (color === "#000000") {
                delete style.color;
              } else if (!color.startsWith("#")) {
                style.background = color;
                style.backgroundClip = "text";
                style.color = "transparent";
              }
            }
            if (this.baselineShift) {
              style.verticalAlign = (0, _html_utils.measureToString)(
                this.baselineShift
              );
            }
            style.fontKerning = this.kerningMode === "none" ? "none" : "normal";
            style.letterSpacing = (0, _html_utils.measureToString)(
              this.letterSpacing
            );
            if (this.lineThrough !== 0) {
              style.textDecoration = "line-through";
              if (this.lineThrough === 2) {
                style.textDecorationStyle = "double";
              }
            }
            if (this.overline !== 0) {
              style.textDecoration = "overline";
              if (this.overline === 2) {
                style.textDecorationStyle = "double";
              }
            }
            style.fontStyle = this.posture;
            style.fontSize = (0, _html_utils.measureToString)(0.99 * this.size);
            (0, _html_utils.setFontFamily)(
              this,
              this,
              this[_symbol_utils.$globalData].fontFinder,
              style
            );
            if (this.underline !== 0) {
              style.textDecoration = "underline";
              if (this.underline === 2) {
                style.textDecorationStyle = "double";
              }
            }
            style.fontWeight = this.weight;
            return style;
          }
        }
        class Format extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "format", true);
            this.id = attributes.id || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.extras = null;
            this.picture = null;
          }
        }
        class Handler extends _xfa_object.StringObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "handler");
            this.id = attributes.id || "";
            this.type = (0, _utils.getStringOption)(attributes.type, [
              "optional",
              "required",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
        }
        class Hyphenation extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "hyphenation");
            this.excludeAllCaps = (0, _utils.getInteger)({
              data: attributes.excludeAllCaps,
              defaultValue: 0,
              validate: (x) => x === 1,
            });
            this.excludeInitialCap = (0, _utils.getInteger)({
              data: attributes.excludeInitialCap,
              defaultValue: 0,
              validate: (x) => x === 1,
            });
            this.hyphenate = (0, _utils.getInteger)({
              data: attributes.hyphenate,
              defaultValue: 0,
              validate: (x) => x === 1,
            });
            this.id = attributes.id || "";
            this.pushCharacterCount = (0, _utils.getInteger)({
              data: attributes.pushCharacterCount,
              defaultValue: 3,
              validate: (x) => x >= 0,
            });
            this.remainCharacterCount = (0, _utils.getInteger)({
              data: attributes.remainCharacterCount,
              defaultValue: 3,
              validate: (x) => x >= 0,
            });
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.wordCharacterCount = (0, _utils.getInteger)({
              data: attributes.wordCharacterCount,
              defaultValue: 7,
              validate: (x) => x >= 0,
            });
          }
        }
        class Image extends _xfa_object.StringObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "image");
            this.aspect = (0, _utils.getStringOption)(attributes.aspect, [
              "fit",
              "actual",
              "height",
              "none",
              "width",
            ]);
            this.contentType = attributes.contentType || "";
            this.href = attributes.href || "";
            this.id = attributes.id || "";
            this.name = attributes.name || "";
            this.transferEncoding = (0, _utils.getStringOption)(
              attributes.transferEncoding,
              ["base64", "none", "package"]
            );
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
          [_symbol_utils.$toHTML]() {
            if (
              this.contentType &&
              !MIMES.has(this.contentType.toLowerCase())
            ) {
              return _utils.HTMLResult.EMPTY;
            }
            let buffer =
              this[_symbol_utils.$globalData].images &&
              this[_symbol_utils.$globalData].images.get(this.href);
            if (!buffer && (this.href || !this[_symbol_utils.$content])) {
              return _utils.HTMLResult.EMPTY;
            }
            if (!buffer && this.transferEncoding === "base64") {
              buffer = (0, _util.stringToBytes)(
                atob(this[_symbol_utils.$content])
              );
            }
            if (!buffer) {
              return _utils.HTMLResult.EMPTY;
            }
            if (!this.contentType) {
              for (const [header, type] of IMAGES_HEADERS) {
                if (
                  buffer.length > header.length &&
                  header.every((x, i) => x === buffer[i])
                ) {
                  this.contentType = type;
                  break;
                }
              }
              if (!this.contentType) {
                return _utils.HTMLResult.EMPTY;
              }
            }
            const blob = new Blob([buffer], {
              type: this.contentType,
            });
            let style;
            switch (this.aspect) {
              case "fit":
              case "actual":
                break;
              case "height":
                style = {
                  height: "100%",
                  objectFit: "fill",
                };
                break;
              case "none":
                style = {
                  width: "100%",
                  height: "100%",
                  objectFit: "fill",
                };
                break;
              case "width":
                style = {
                  width: "100%",
                  objectFit: "fill",
                };
                break;
            }
            const parent = this[_symbol_utils.$getParent]();
            return _utils.HTMLResult.success({
              name: "img",
              attributes: {
                class: ["xfaImage"],
                style,
                src: URL.createObjectURL(blob),
                alt: parent
                  ? ariaLabel(parent[_symbol_utils.$getParent]())
                  : null,
              },
            });
          }
        }
        class ImageEdit extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "imageEdit", true);
            this.data = (0, _utils.getStringOption)(attributes.data, [
              "link",
              "embed",
            ]);
            this.id = attributes.id || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.border = null;
            this.extras = null;
            this.margin = null;
          }
          [_symbol_utils.$toHTML](availableSpace) {
            if (this.data === "embed") {
              return _utils.HTMLResult.success({
                name: "div",
                children: [],
                attributes: {},
              });
            }
            return _utils.HTMLResult.EMPTY;
          }
        }
        class Integer extends _xfa_object.ContentObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "integer");
            this.id = attributes.id || "";
            this.name = attributes.name || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
          [_symbol_utils.$finalize]() {
            const number = parseInt(this[_symbol_utils.$content].trim(), 10);
            this[_symbol_utils.$content] = isNaN(number) ? null : number;
          }
          [_symbol_utils.$toHTML](availableSpace) {
            return valueToHtml(
              this[_symbol_utils.$content] !== null
                ? this[_symbol_utils.$content].toString()
                : ""
            );
          }
        }
        class Issuers extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "issuers", true);
            this.id = attributes.id || "";
            this.type = (0, _utils.getStringOption)(attributes.type, [
              "optional",
              "required",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.certificate = new _xfa_object.XFAObjectArray();
          }
        }
        class Items extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "items", true);
            this.id = attributes.id || "";
            this.name = attributes.name || "";
            this.presence = (0, _utils.getStringOption)(attributes.presence, [
              "visible",
              "hidden",
              "inactive",
              "invisible",
            ]);
            this.ref = attributes.ref || "";
            this.save = (0, _utils.getInteger)({
              data: attributes.save,
              defaultValue: 0,
              validate: (x) => x === 1,
            });
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.boolean = new _xfa_object.XFAObjectArray();
            this.date = new _xfa_object.XFAObjectArray();
            this.dateTime = new _xfa_object.XFAObjectArray();
            this.decimal = new _xfa_object.XFAObjectArray();
            this.exData = new _xfa_object.XFAObjectArray();
            this.float = new _xfa_object.XFAObjectArray();
            this.image = new _xfa_object.XFAObjectArray();
            this.integer = new _xfa_object.XFAObjectArray();
            this.text = new _xfa_object.XFAObjectArray();
            this.time = new _xfa_object.XFAObjectArray();
          }
          [_symbol_utils.$toHTML]() {
            const output = [];
            for (const child of this[_symbol_utils.$getChildren]()) {
              output.push(child[_symbol_utils.$text]());
            }
            return _utils.HTMLResult.success(output);
          }
        }
        exports.Items = Items;
        class Keep extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "keep", true);
            this.id = attributes.id || "";
            const options = ["none", "contentArea", "pageArea"];
            this.intact = (0, _utils.getStringOption)(
              attributes.intact,
              options
            );
            this.next = (0, _utils.getStringOption)(attributes.next, options);
            this.previous = (0, _utils.getStringOption)(
              attributes.previous,
              options
            );
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.extras = null;
          }
        }
        class KeyUsage extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "keyUsage");
            const options = ["", "yes", "no"];
            this.crlSign = (0, _utils.getStringOption)(
              attributes.crlSign,
              options
            );
            this.dataEncipherment = (0, _utils.getStringOption)(
              attributes.dataEncipherment,
              options
            );
            this.decipherOnly = (0, _utils.getStringOption)(
              attributes.decipherOnly,
              options
            );
            this.digitalSignature = (0, _utils.getStringOption)(
              attributes.digitalSignature,
              options
            );
            this.encipherOnly = (0, _utils.getStringOption)(
              attributes.encipherOnly,
              options
            );
            this.id = attributes.id || "";
            this.keyAgreement = (0, _utils.getStringOption)(
              attributes.keyAgreement,
              options
            );
            this.keyCertSign = (0, _utils.getStringOption)(
              attributes.keyCertSign,
              options
            );
            this.keyEncipherment = (0, _utils.getStringOption)(
              attributes.keyEncipherment,
              options
            );
            this.nonRepudiation = (0, _utils.getStringOption)(
              attributes.nonRepudiation,
              options
            );
            this.type = (0, _utils.getStringOption)(attributes.type, [
              "optional",
              "required",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
        }
        class Line extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "line", true);
            this.hand = (0, _utils.getStringOption)(attributes.hand, [
              "even",
              "left",
              "right",
            ]);
            this.id = attributes.id || "";
            this.slope = (0, _utils.getStringOption)(attributes.slope, [
              "\\",
              "/",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.edge = null;
          }
          [_symbol_utils.$toHTML]() {
            const parent =
              this[_symbol_utils.$getParent]()[_symbol_utils.$getParent]();
            const edge = this.edge || new Edge({});
            const edgeStyle = edge[_symbol_utils.$toStyle]();
            const style = Object.create(null);
            const thickness = edge.presence === "visible" ? edge.thickness : 0;
            style.strokeWidth = (0, _html_utils.measureToString)(thickness);
            style.stroke = edgeStyle.color;
            let x1, y1, x2, y2;
            let width = "100%";
            let height = "100%";
            if (parent.w <= thickness) {
              [x1, y1, x2, y2] = ["50%", 0, "50%", "100%"];
              width = style.strokeWidth;
            } else if (parent.h <= thickness) {
              [x1, y1, x2, y2] = [0, "50%", "100%", "50%"];
              height = style.strokeWidth;
            } else if (this.slope === "\\") {
              [x1, y1, x2, y2] = [0, 0, "100%", "100%"];
            } else {
              [x1, y1, x2, y2] = [0, "100%", "100%", 0];
            }
            const line = {
              name: "line",
              attributes: {
                xmlns: SVG_NS,
                x1,
                y1,
                x2,
                y2,
                style,
              },
            };
            const svg = {
              name: "svg",
              children: [line],
              attributes: {
                xmlns: SVG_NS,
                width,
                height,
                style: {
                  overflow: "visible",
                },
              },
            };
            if (hasMargin(parent)) {
              return _utils.HTMLResult.success({
                name: "div",
                attributes: {
                  style: {
                    display: "inline",
                    width: "100%",
                    height: "100%",
                  },
                },
                children: [svg],
              });
            }
            svg.attributes.style.position = "absolute";
            return _utils.HTMLResult.success(svg);
          }
        }
        class Linear extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "linear", true);
            this.id = attributes.id || "";
            this.type = (0, _utils.getStringOption)(attributes.type, [
              "toRight",
              "toBottom",
              "toLeft",
              "toTop",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.color = null;
            this.extras = null;
          }
          [_symbol_utils.$toStyle](startColor) {
            startColor = startColor
              ? startColor[_symbol_utils.$toStyle]()
              : "#FFFFFF";
            const transf = this.type.replace(/([RBLT])/, " $1").toLowerCase();
            const endColor = this.color
              ? this.color[_symbol_utils.$toStyle]()
              : "#000000";
            return `linear-gradient(${transf}, ${startColor}, ${endColor})`;
          }
        }
        class LockDocument extends _xfa_object.ContentObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "lockDocument");
            this.id = attributes.id || "";
            this.type = (0, _utils.getStringOption)(attributes.type, [
              "optional",
              "required",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
          [_symbol_utils.$finalize]() {
            this[_symbol_utils.$content] = (0, _utils.getStringOption)(
              this[_symbol_utils.$content],
              ["auto", "0", "1"]
            );
          }
        }
        class Manifest extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "manifest", true);
            this.action = (0, _utils.getStringOption)(attributes.action, [
              "include",
              "all",
              "exclude",
            ]);
            this.id = attributes.id || "";
            this.name = attributes.name || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.extras = null;
            this.ref = new _xfa_object.XFAObjectArray();
          }
        }
        class Margin extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "margin", true);
            this.bottomInset = (0, _utils.getMeasurement)(
              attributes.bottomInset,
              "0"
            );
            this.id = attributes.id || "";
            this.leftInset = (0, _utils.getMeasurement)(
              attributes.leftInset,
              "0"
            );
            this.rightInset = (0, _utils.getMeasurement)(
              attributes.rightInset,
              "0"
            );
            this.topInset = (0, _utils.getMeasurement)(
              attributes.topInset,
              "0"
            );
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.extras = null;
          }
          [_symbol_utils.$toStyle]() {
            return {
              margin:
                (0, _html_utils.measureToString)(this.topInset) +
                " " +
                (0, _html_utils.measureToString)(this.rightInset) +
                " " +
                (0, _html_utils.measureToString)(this.bottomInset) +
                " " +
                (0, _html_utils.measureToString)(this.leftInset),
            };
          }
        }
        class Mdp extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "mdp");
            this.id = attributes.id || "";
            this.permissions = (0, _utils.getInteger)({
              data: attributes.permissions,
              defaultValue: 2,
              validate: (x) => x === 1 || x === 3,
            });
            this.signatureType = (0, _utils.getStringOption)(
              attributes.signatureType,
              ["filler", "author"]
            );
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
        }
        class Medium extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "medium");
            this.id = attributes.id || "";
            this.imagingBBox = (0, _utils.getBBox)(attributes.imagingBBox);
            this.long = (0, _utils.getMeasurement)(attributes.long);
            this.orientation = (0, _utils.getStringOption)(
              attributes.orientation,
              ["portrait", "landscape"]
            );
            this.short = (0, _utils.getMeasurement)(attributes.short);
            this.stock = attributes.stock || "";
            this.trayIn = (0, _utils.getStringOption)(attributes.trayIn, [
              "auto",
              "delegate",
              "pageFront",
            ]);
            this.trayOut = (0, _utils.getStringOption)(attributes.trayOut, [
              "auto",
              "delegate",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
        }
        class Message extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "message", true);
            this.id = attributes.id || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.text = new _xfa_object.XFAObjectArray();
          }
        }
        class NumericEdit extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "numericEdit", true);
            this.hScrollPolicy = (0, _utils.getStringOption)(
              attributes.hScrollPolicy,
              ["auto", "off", "on"]
            );
            this.id = attributes.id || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.border = null;
            this.comb = null;
            this.extras = null;
            this.margin = null;
          }
          [_symbol_utils.$toHTML](availableSpace) {
            const style = (0, _html_utils.toStyle)(
              this,
              "border",
              "font",
              "margin"
            );
            const field =
              this[_symbol_utils.$getParent]()[_symbol_utils.$getParent]();
            const html = {
              name: "input",
              attributes: {
                type: "text",
                fieldId: field[_symbol_utils.$uid],
                dataId:
                  field[_symbol_utils.$data]?.[_symbol_utils.$uid] ||
                  field[_symbol_utils.$uid],
                class: ["xfaTextfield"],
                style,
                "aria-label": ariaLabel(field),
                "aria-required": false,
              },
            };
            if (isRequired(field)) {
              html.attributes["aria-required"] = true;
              html.attributes.required = true;
            }
            return _utils.HTMLResult.success({
              name: "label",
              attributes: {
                class: ["xfaLabel"],
              },
              children: [html],
            });
          }
        }
        class Occur extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "occur", true);
            this.id = attributes.id || "";
            this.initial =
              attributes.initial !== ""
                ? (0, _utils.getInteger)({
                    data: attributes.initial,
                    defaultValue: "",
                    validate: (x) => true,
                  })
                : "";
            this.max =
              attributes.max !== ""
                ? (0, _utils.getInteger)({
                    data: attributes.max,
                    defaultValue: 1,
                    validate: (x) => true,
                  })
                : "";
            this.min =
              attributes.min !== ""
                ? (0, _utils.getInteger)({
                    data: attributes.min,
                    defaultValue: 1,
                    validate: (x) => true,
                  })
                : "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.extras = null;
          }
          [_symbol_utils.$clean]() {
            const parent = this[_symbol_utils.$getParent]();
            const originalMin = this.min;
            if (this.min === "") {
              this.min =
                parent instanceof PageArea || parent instanceof PageSet ? 0 : 1;
            }
            if (this.max === "") {
              if (originalMin === "") {
                this.max =
                  parent instanceof PageArea || parent instanceof PageSet
                    ? -1
                    : 1;
              } else {
                this.max = this.min;
              }
            }
            if (this.max !== -1 && this.max < this.min) {
              this.max = this.min;
            }
            if (this.initial === "") {
              this.initial = parent instanceof Template ? 1 : this.min;
            }
          }
        }
        class Oid extends _xfa_object.StringObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "oid");
            this.id = attributes.id || "";
            this.name = attributes.name || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
        }
        class Oids extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "oids", true);
            this.id = attributes.id || "";
            this.type = (0, _utils.getStringOption)(attributes.type, [
              "optional",
              "required",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.oid = new _xfa_object.XFAObjectArray();
          }
        }
        class Overflow extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "overflow");
            this.id = attributes.id || "";
            this.leader = attributes.leader || "";
            this.target = attributes.target || "";
            this.trailer = attributes.trailer || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
          [_symbol_utils.$getExtra]() {
            if (!this[_symbol_utils.$extra]) {
              const parent = this[_symbol_utils.$getParent]();
              const root = this[_symbol_utils.$getTemplateRoot]();
              const target = root[_symbol_utils.$searchNode](
                this.target,
                parent
              );
              const leader = root[_symbol_utils.$searchNode](
                this.leader,
                parent
              );
              const trailer = root[_symbol_utils.$searchNode](
                this.trailer,
                parent
              );
              this[_symbol_utils.$extra] = {
                target: target?.[0] || null,
                leader: leader?.[0] || null,
                trailer: trailer?.[0] || null,
                addLeader: false,
                addTrailer: false,
              };
            }
            return this[_symbol_utils.$extra];
          }
        }
        class PageArea extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "pageArea", true);
            this.blankOrNotBlank = (0, _utils.getStringOption)(
              attributes.blankOrNotBlank,
              ["any", "blank", "notBlank"]
            );
            this.id = attributes.id || "";
            this.initialNumber = (0, _utils.getInteger)({
              data: attributes.initialNumber,
              defaultValue: 1,
              validate: (x) => true,
            });
            this.name = attributes.name || "";
            this.numbered = (0, _utils.getInteger)({
              data: attributes.numbered,
              defaultValue: 1,
              validate: (x) => true,
            });
            this.oddOrEven = (0, _utils.getStringOption)(attributes.oddOrEven, [
              "any",
              "even",
              "odd",
            ]);
            this.pagePosition = (0, _utils.getStringOption)(
              attributes.pagePosition,
              ["any", "first", "last", "only", "rest"]
            );
            this.relevant = (0, _utils.getRelevant)(attributes.relevant);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.desc = null;
            this.extras = null;
            this.medium = null;
            this.occur = null;
            this.area = new _xfa_object.XFAObjectArray();
            this.contentArea = new _xfa_object.XFAObjectArray();
            this.draw = new _xfa_object.XFAObjectArray();
            this.exclGroup = new _xfa_object.XFAObjectArray();
            this.field = new _xfa_object.XFAObjectArray();
            this.subform = new _xfa_object.XFAObjectArray();
          }
          [_symbol_utils.$isUsable]() {
            if (!this[_symbol_utils.$extra]) {
              this[_symbol_utils.$extra] = {
                numberOfUse: 0,
              };
              return true;
            }
            return (
              !this.occur ||
              this.occur.max === -1 ||
              this[_symbol_utils.$extra].numberOfUse < this.occur.max
            );
          }
          [_symbol_utils.$cleanPage]() {
            delete this[_symbol_utils.$extra];
          }
          [_symbol_utils.$getNextPage]() {
            if (!this[_symbol_utils.$extra]) {
              this[_symbol_utils.$extra] = {
                numberOfUse: 0,
              };
            }
            const parent = this[_symbol_utils.$getParent]();
            if (parent.relation === "orderedOccurrence") {
              if (this[_symbol_utils.$isUsable]()) {
                this[_symbol_utils.$extra].numberOfUse += 1;
                return this;
              }
            }
            return parent[_symbol_utils.$getNextPage]();
          }
          [_symbol_utils.$getAvailableSpace]() {
            return (
              this[_symbol_utils.$extra].space || {
                width: 0,
                height: 0,
              }
            );
          }
          [_symbol_utils.$toHTML]() {
            if (!this[_symbol_utils.$extra]) {
              this[_symbol_utils.$extra] = {
                numberOfUse: 1,
              };
            }
            const children = [];
            this[_symbol_utils.$extra].children = children;
            const style = Object.create(null);
            if (this.medium && this.medium.short && this.medium.long) {
              style.width = (0, _html_utils.measureToString)(this.medium.short);
              style.height = (0, _html_utils.measureToString)(this.medium.long);
              this[_symbol_utils.$extra].space = {
                width: this.medium.short,
                height: this.medium.long,
              };
              if (this.medium.orientation === "landscape") {
                const x = style.width;
                style.width = style.height;
                style.height = x;
                this[_symbol_utils.$extra].space = {
                  width: this.medium.long,
                  height: this.medium.short,
                };
              }
            } else {
              (0, _util.warn)(
                "XFA - No medium specified in pageArea: please file a bug."
              );
            }
            this[_symbol_utils.$childrenToHTML]({
              filter: new Set(["area", "draw", "field", "subform"]),
              include: true,
            });
            this[_symbol_utils.$childrenToHTML]({
              filter: new Set(["contentArea"]),
              include: true,
            });
            return _utils.HTMLResult.success({
              name: "div",
              children,
              attributes: {
                class: ["xfaPage"],
                id: this[_symbol_utils.$uid],
                style,
                xfaName: this.name,
              },
            });
          }
        }
        class PageSet extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "pageSet", true);
            this.duplexImposition = (0, _utils.getStringOption)(
              attributes.duplexImposition,
              ["longEdge", "shortEdge"]
            );
            this.id = attributes.id || "";
            this.name = attributes.name || "";
            this.relation = (0, _utils.getStringOption)(attributes.relation, [
              "orderedOccurrence",
              "duplexPaginated",
              "simplexPaginated",
            ]);
            this.relevant = (0, _utils.getRelevant)(attributes.relevant);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.extras = null;
            this.occur = null;
            this.pageArea = new _xfa_object.XFAObjectArray();
            this.pageSet = new _xfa_object.XFAObjectArray();
          }
          [_symbol_utils.$cleanPage]() {
            for (const page of this.pageArea.children) {
              page[_symbol_utils.$cleanPage]();
            }
            for (const page of this.pageSet.children) {
              page[_symbol_utils.$cleanPage]();
            }
          }
          [_symbol_utils.$isUsable]() {
            return (
              !this.occur ||
              this.occur.max === -1 ||
              this[_symbol_utils.$extra].numberOfUse < this.occur.max
            );
          }
          [_symbol_utils.$getNextPage]() {
            if (!this[_symbol_utils.$extra]) {
              this[_symbol_utils.$extra] = {
                numberOfUse: 1,
                pageIndex: -1,
                pageSetIndex: -1,
              };
            }
            if (this.relation === "orderedOccurrence") {
              if (
                this[_symbol_utils.$extra].pageIndex + 1 <
                this.pageArea.children.length
              ) {
                this[_symbol_utils.$extra].pageIndex += 1;
                const pageArea =
                  this.pageArea.children[this[_symbol_utils.$extra].pageIndex];
                return pageArea[_symbol_utils.$getNextPage]();
              }
              if (
                this[_symbol_utils.$extra].pageSetIndex + 1 <
                this.pageSet.children.length
              ) {
                this[_symbol_utils.$extra].pageSetIndex += 1;
                return this.pageSet.children[
                  this[_symbol_utils.$extra].pageSetIndex
                ][_symbol_utils.$getNextPage]();
              }
              if (this[_symbol_utils.$isUsable]()) {
                this[_symbol_utils.$extra].numberOfUse += 1;
                this[_symbol_utils.$extra].pageIndex = -1;
                this[_symbol_utils.$extra].pageSetIndex = -1;
                return this[_symbol_utils.$getNextPage]();
              }
              const parent = this[_symbol_utils.$getParent]();
              if (parent instanceof PageSet) {
                return parent[_symbol_utils.$getNextPage]();
              }
              this[_symbol_utils.$cleanPage]();
              return this[_symbol_utils.$getNextPage]();
            }
            const pageNumber =
              this[_symbol_utils.$getTemplateRoot]()[_symbol_utils.$extra]
                .pageNumber;
            const parity = pageNumber % 2 === 0 ? "even" : "odd";
            const position = pageNumber === 0 ? "first" : "rest";
            let page = this.pageArea.children.find(
              (p) => p.oddOrEven === parity && p.pagePosition === position
            );
            if (page) {
              return page;
            }
            page = this.pageArea.children.find(
              (p) => p.oddOrEven === "any" && p.pagePosition === position
            );
            if (page) {
              return page;
            }
            page = this.pageArea.children.find(
              (p) => p.oddOrEven === "any" && p.pagePosition === "any"
            );
            if (page) {
              return page;
            }
            return this.pageArea.children[0];
          }
        }
        class Para extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "para", true);
            this.hAlign = (0, _utils.getStringOption)(attributes.hAlign, [
              "left",
              "center",
              "justify",
              "justifyAll",
              "radix",
              "right",
            ]);
            this.id = attributes.id || "";
            this.lineHeight = attributes.lineHeight
              ? (0, _utils.getMeasurement)(attributes.lineHeight, "0pt")
              : "";
            this.marginLeft = attributes.marginLeft
              ? (0, _utils.getMeasurement)(attributes.marginLeft, "0pt")
              : "";
            this.marginRight = attributes.marginRight
              ? (0, _utils.getMeasurement)(attributes.marginRight, "0pt")
              : "";
            this.orphans = (0, _utils.getInteger)({
              data: attributes.orphans,
              defaultValue: 0,
              validate: (x) => x >= 0,
            });
            this.preserve = attributes.preserve || "";
            this.radixOffset = attributes.radixOffset
              ? (0, _utils.getMeasurement)(attributes.radixOffset, "0pt")
              : "";
            this.spaceAbove = attributes.spaceAbove
              ? (0, _utils.getMeasurement)(attributes.spaceAbove, "0pt")
              : "";
            this.spaceBelow = attributes.spaceBelow
              ? (0, _utils.getMeasurement)(attributes.spaceBelow, "0pt")
              : "";
            this.tabDefault = attributes.tabDefault
              ? (0, _utils.getMeasurement)(this.tabDefault)
              : "";
            this.tabStops = (attributes.tabStops || "")
              .trim()
              .split(/\s+/)
              .map((x, i) => (i % 2 === 1 ? (0, _utils.getMeasurement)(x) : x));
            this.textIndent = attributes.textIndent
              ? (0, _utils.getMeasurement)(attributes.textIndent, "0pt")
              : "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.vAlign = (0, _utils.getStringOption)(attributes.vAlign, [
              "top",
              "bottom",
              "middle",
            ]);
            this.widows = (0, _utils.getInteger)({
              data: attributes.widows,
              defaultValue: 0,
              validate: (x) => x >= 0,
            });
            this.hyphenation = null;
          }
          [_symbol_utils.$toStyle]() {
            const style = (0, _html_utils.toStyle)(this, "hAlign");
            if (this.marginLeft !== "") {
              style.paddingLeft = (0, _html_utils.measureToString)(
                this.marginLeft
              );
            }
            if (this.marginRight !== "") {
              style.paddingight = (0, _html_utils.measureToString)(
                this.marginRight
              );
            }
            if (this.spaceAbove !== "") {
              style.paddingTop = (0, _html_utils.measureToString)(
                this.spaceAbove
              );
            }
            if (this.spaceBelow !== "") {
              style.paddingBottom = (0, _html_utils.measureToString)(
                this.spaceBelow
              );
            }
            if (this.textIndent !== "") {
              style.textIndent = (0, _html_utils.measureToString)(
                this.textIndent
              );
              (0, _html_utils.fixTextIndent)(style);
            }
            if (this.lineHeight > 0) {
              style.lineHeight = (0, _html_utils.measureToString)(
                this.lineHeight
              );
            }
            if (this.tabDefault !== "") {
              style.tabSize = (0, _html_utils.measureToString)(this.tabDefault);
            }
            if (this.tabStops.length > 0) {
            }
            if (this.hyphenatation) {
              Object.assign(
                style,
                this.hyphenatation[_symbol_utils.$toStyle]()
              );
            }
            return style;
          }
        }
        class PasswordEdit extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "passwordEdit", true);
            this.hScrollPolicy = (0, _utils.getStringOption)(
              attributes.hScrollPolicy,
              ["auto", "off", "on"]
            );
            this.id = attributes.id || "";
            this.passwordChar = attributes.passwordChar || "*";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.border = null;
            this.extras = null;
            this.margin = null;
          }
        }
        class Pattern extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "pattern", true);
            this.id = attributes.id || "";
            this.type = (0, _utils.getStringOption)(attributes.type, [
              "crossHatch",
              "crossDiagonal",
              "diagonalLeft",
              "diagonalRight",
              "horizontal",
              "vertical",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.color = null;
            this.extras = null;
          }
          [_symbol_utils.$toStyle](startColor) {
            startColor = startColor
              ? startColor[_symbol_utils.$toStyle]()
              : "#FFFFFF";
            const endColor = this.color
              ? this.color[_symbol_utils.$toStyle]()
              : "#000000";
            const width = 5;
            const cmd = "repeating-linear-gradient";
            const colors = `${startColor},${startColor} ${width}px,${endColor} ${width}px,${endColor} ${
              2 * width
            }px`;
            switch (this.type) {
              case "crossHatch":
                return `${cmd}(to top,${colors}) ${cmd}(to right,${colors})`;
              case "crossDiagonal":
                return `${cmd}(45deg,${colors}) ${cmd}(-45deg,${colors})`;
              case "diagonalLeft":
                return `${cmd}(45deg,${colors})`;
              case "diagonalRight":
                return `${cmd}(-45deg,${colors})`;
              case "horizontal":
                return `${cmd}(to top,${colors})`;
              case "vertical":
                return `${cmd}(to right,${colors})`;
            }
            return "";
          }
        }
        class Picture extends _xfa_object.StringObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "picture");
            this.id = attributes.id || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
        }
        class Proto extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "proto", true);
            this.appearanceFilter = new _xfa_object.XFAObjectArray();
            this.arc = new _xfa_object.XFAObjectArray();
            this.area = new _xfa_object.XFAObjectArray();
            this.assist = new _xfa_object.XFAObjectArray();
            this.barcode = new _xfa_object.XFAObjectArray();
            this.bindItems = new _xfa_object.XFAObjectArray();
            this.bookend = new _xfa_object.XFAObjectArray();
            this.boolean = new _xfa_object.XFAObjectArray();
            this.border = new _xfa_object.XFAObjectArray();
            this.break = new _xfa_object.XFAObjectArray();
            this.breakAfter = new _xfa_object.XFAObjectArray();
            this.breakBefore = new _xfa_object.XFAObjectArray();
            this.button = new _xfa_object.XFAObjectArray();
            this.calculate = new _xfa_object.XFAObjectArray();
            this.caption = new _xfa_object.XFAObjectArray();
            this.certificate = new _xfa_object.XFAObjectArray();
            this.certificates = new _xfa_object.XFAObjectArray();
            this.checkButton = new _xfa_object.XFAObjectArray();
            this.choiceList = new _xfa_object.XFAObjectArray();
            this.color = new _xfa_object.XFAObjectArray();
            this.comb = new _xfa_object.XFAObjectArray();
            this.connect = new _xfa_object.XFAObjectArray();
            this.contentArea = new _xfa_object.XFAObjectArray();
            this.corner = new _xfa_object.XFAObjectArray();
            this.date = new _xfa_object.XFAObjectArray();
            this.dateTime = new _xfa_object.XFAObjectArray();
            this.dateTimeEdit = new _xfa_object.XFAObjectArray();
            this.decimal = new _xfa_object.XFAObjectArray();
            this.defaultUi = new _xfa_object.XFAObjectArray();
            this.desc = new _xfa_object.XFAObjectArray();
            this.digestMethod = new _xfa_object.XFAObjectArray();
            this.digestMethods = new _xfa_object.XFAObjectArray();
            this.draw = new _xfa_object.XFAObjectArray();
            this.edge = new _xfa_object.XFAObjectArray();
            this.encoding = new _xfa_object.XFAObjectArray();
            this.encodings = new _xfa_object.XFAObjectArray();
            this.encrypt = new _xfa_object.XFAObjectArray();
            this.encryptData = new _xfa_object.XFAObjectArray();
            this.encryption = new _xfa_object.XFAObjectArray();
            this.encryptionMethod = new _xfa_object.XFAObjectArray();
            this.encryptionMethods = new _xfa_object.XFAObjectArray();
            this.event = new _xfa_object.XFAObjectArray();
            this.exData = new _xfa_object.XFAObjectArray();
            this.exObject = new _xfa_object.XFAObjectArray();
            this.exclGroup = new _xfa_object.XFAObjectArray();
            this.execute = new _xfa_object.XFAObjectArray();
            this.extras = new _xfa_object.XFAObjectArray();
            this.field = new _xfa_object.XFAObjectArray();
            this.fill = new _xfa_object.XFAObjectArray();
            this.filter = new _xfa_object.XFAObjectArray();
            this.float = new _xfa_object.XFAObjectArray();
            this.font = new _xfa_object.XFAObjectArray();
            this.format = new _xfa_object.XFAObjectArray();
            this.handler = new _xfa_object.XFAObjectArray();
            this.hyphenation = new _xfa_object.XFAObjectArray();
            this.image = new _xfa_object.XFAObjectArray();
            this.imageEdit = new _xfa_object.XFAObjectArray();
            this.integer = new _xfa_object.XFAObjectArray();
            this.issuers = new _xfa_object.XFAObjectArray();
            this.items = new _xfa_object.XFAObjectArray();
            this.keep = new _xfa_object.XFAObjectArray();
            this.keyUsage = new _xfa_object.XFAObjectArray();
            this.line = new _xfa_object.XFAObjectArray();
            this.linear = new _xfa_object.XFAObjectArray();
            this.lockDocument = new _xfa_object.XFAObjectArray();
            this.manifest = new _xfa_object.XFAObjectArray();
            this.margin = new _xfa_object.XFAObjectArray();
            this.mdp = new _xfa_object.XFAObjectArray();
            this.medium = new _xfa_object.XFAObjectArray();
            this.message = new _xfa_object.XFAObjectArray();
            this.numericEdit = new _xfa_object.XFAObjectArray();
            this.occur = new _xfa_object.XFAObjectArray();
            this.oid = new _xfa_object.XFAObjectArray();
            this.oids = new _xfa_object.XFAObjectArray();
            this.overflow = new _xfa_object.XFAObjectArray();
            this.pageArea = new _xfa_object.XFAObjectArray();
            this.pageSet = new _xfa_object.XFAObjectArray();
            this.para = new _xfa_object.XFAObjectArray();
            this.passwordEdit = new _xfa_object.XFAObjectArray();
            this.pattern = new _xfa_object.XFAObjectArray();
            this.picture = new _xfa_object.XFAObjectArray();
            this.radial = new _xfa_object.XFAObjectArray();
            this.reason = new _xfa_object.XFAObjectArray();
            this.reasons = new _xfa_object.XFAObjectArray();
            this.rectangle = new _xfa_object.XFAObjectArray();
            this.ref = new _xfa_object.XFAObjectArray();
            this.script = new _xfa_object.XFAObjectArray();
            this.setProperty = new _xfa_object.XFAObjectArray();
            this.signData = new _xfa_object.XFAObjectArray();
            this.signature = new _xfa_object.XFAObjectArray();
            this.signing = new _xfa_object.XFAObjectArray();
            this.solid = new _xfa_object.XFAObjectArray();
            this.speak = new _xfa_object.XFAObjectArray();
            this.stipple = new _xfa_object.XFAObjectArray();
            this.subform = new _xfa_object.XFAObjectArray();
            this.subformSet = new _xfa_object.XFAObjectArray();
            this.subjectDN = new _xfa_object.XFAObjectArray();
            this.subjectDNs = new _xfa_object.XFAObjectArray();
            this.submit = new _xfa_object.XFAObjectArray();
            this.text = new _xfa_object.XFAObjectArray();
            this.textEdit = new _xfa_object.XFAObjectArray();
            this.time = new _xfa_object.XFAObjectArray();
            this.timeStamp = new _xfa_object.XFAObjectArray();
            this.toolTip = new _xfa_object.XFAObjectArray();
            this.traversal = new _xfa_object.XFAObjectArray();
            this.traverse = new _xfa_object.XFAObjectArray();
            this.ui = new _xfa_object.XFAObjectArray();
            this.validate = new _xfa_object.XFAObjectArray();
            this.value = new _xfa_object.XFAObjectArray();
            this.variables = new _xfa_object.XFAObjectArray();
          }
        }
        class Radial extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "radial", true);
            this.id = attributes.id || "";
            this.type = (0, _utils.getStringOption)(attributes.type, [
              "toEdge",
              "toCenter",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.color = null;
            this.extras = null;
          }
          [_symbol_utils.$toStyle](startColor) {
            startColor = startColor
              ? startColor[_symbol_utils.$toStyle]()
              : "#FFFFFF";
            const endColor = this.color
              ? this.color[_symbol_utils.$toStyle]()
              : "#000000";
            const colors =
              this.type === "toEdge"
                ? `${startColor},${endColor}`
                : `${endColor},${startColor}`;
            return `radial-gradient(circle at center, ${colors})`;
          }
        }
        class Reason extends _xfa_object.StringObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "reason");
            this.id = attributes.id || "";
            this.name = attributes.name || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
        }
        class Reasons extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "reasons", true);
            this.id = attributes.id || "";
            this.type = (0, _utils.getStringOption)(attributes.type, [
              "optional",
              "required",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.reason = new _xfa_object.XFAObjectArray();
          }
        }
        class Rectangle extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "rectangle", true);
            this.hand = (0, _utils.getStringOption)(attributes.hand, [
              "even",
              "left",
              "right",
            ]);
            this.id = attributes.id || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.corner = new _xfa_object.XFAObjectArray(4);
            this.edge = new _xfa_object.XFAObjectArray(4);
            this.fill = null;
          }
          [_symbol_utils.$toHTML]() {
            const edge = this.edge.children.length
              ? this.edge.children[0]
              : new Edge({});
            const edgeStyle = edge[_symbol_utils.$toStyle]();
            const style = Object.create(null);
            if (this.fill?.presence === "visible") {
              Object.assign(style, this.fill[_symbol_utils.$toStyle]());
            } else {
              style.fill = "transparent";
            }
            style.strokeWidth = (0, _html_utils.measureToString)(
              edge.presence === "visible" ? edge.thickness : 0
            );
            style.stroke = edgeStyle.color;
            const corner = this.corner.children.length
              ? this.corner.children[0]
              : new Corner({});
            const cornerStyle = corner[_symbol_utils.$toStyle]();
            const rect = {
              name: "rect",
              attributes: {
                xmlns: SVG_NS,
                width: "100%",
                height: "100%",
                x: 0,
                y: 0,
                rx: cornerStyle.radius,
                ry: cornerStyle.radius,
                style,
              },
            };
            const svg = {
              name: "svg",
              children: [rect],
              attributes: {
                xmlns: SVG_NS,
                style: {
                  overflow: "visible",
                },
                width: "100%",
                height: "100%",
              },
            };
            const parent =
              this[_symbol_utils.$getParent]()[_symbol_utils.$getParent]();
            if (hasMargin(parent)) {
              return _utils.HTMLResult.success({
                name: "div",
                attributes: {
                  style: {
                    display: "inline",
                    width: "100%",
                    height: "100%",
                  },
                },
                children: [svg],
              });
            }
            svg.attributes.style.position = "absolute";
            return _utils.HTMLResult.success(svg);
          }
        }
        class RefElement extends _xfa_object.StringObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "ref");
            this.id = attributes.id || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
        }
        class Script extends _xfa_object.StringObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "script");
            this.binding = attributes.binding || "";
            this.contentType = attributes.contentType || "";
            this.id = attributes.id || "";
            this.name = attributes.name || "";
            this.runAt = (0, _utils.getStringOption)(attributes.runAt, [
              "client",
              "both",
              "server",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
        }
        class SetProperty extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "setProperty");
            this.connection = attributes.connection || "";
            this.ref = attributes.ref || "";
            this.target = attributes.target || "";
          }
        }
        exports.SetProperty = SetProperty;
        class SignData extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "signData", true);
            this.id = attributes.id || "";
            this.operation = (0, _utils.getStringOption)(attributes.operation, [
              "sign",
              "clear",
              "verify",
            ]);
            this.ref = attributes.ref || "";
            this.target = attributes.target || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.filter = null;
            this.manifest = null;
          }
        }
        class Signature extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "signature", true);
            this.id = attributes.id || "";
            this.type = (0, _utils.getStringOption)(attributes.type, [
              "PDF1.3",
              "PDF1.6",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.border = null;
            this.extras = null;
            this.filter = null;
            this.manifest = null;
            this.margin = null;
          }
        }
        class Signing extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "signing", true);
            this.id = attributes.id || "";
            this.type = (0, _utils.getStringOption)(attributes.type, [
              "optional",
              "required",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.certificate = new _xfa_object.XFAObjectArray();
          }
        }
        class Solid extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "solid", true);
            this.id = attributes.id || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.extras = null;
          }
          [_symbol_utils.$toStyle](startColor) {
            return startColor
              ? startColor[_symbol_utils.$toStyle]()
              : "#FFFFFF";
          }
        }
        class Speak extends _xfa_object.StringObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "speak");
            this.disable = (0, _utils.getInteger)({
              data: attributes.disable,
              defaultValue: 0,
              validate: (x) => x === 1,
            });
            this.id = attributes.id || "";
            this.priority = (0, _utils.getStringOption)(attributes.priority, [
              "custom",
              "caption",
              "name",
              "toolTip",
            ]);
            this.rid = attributes.rid || "";
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
          }
        }
        class Stipple extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "stipple", true);
            this.id = attributes.id || "";
            this.rate = (0, _utils.getInteger)({
              data: attributes.rate,
              defaultValue: 50,
              validate: (x) => x >= 0 && x <= 100,
            });
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.color = null;
            this.extras = null;
          }
          [_symbol_utils.$toStyle](bgColor) {
            const alpha = this.rate / 100;
            return _util.Util.makeHexColor(
              Math.round(bgColor.value.r * (1 - alpha) + this.value.r * alpha),
              Math.round(bgColor.value.g * (1 - alpha) + this.value.g * alpha),
              Math.round(bgColor.value.b * (1 - alpha) + this.value.b * alpha)
            );
          }
        }
        class Subform extends _xfa_object.XFAObject {
          constructor(attributes) {
            super(TEMPLATE_NS_ID, "subform", true);
            this.access = (0, _utils.getStringOption)(attributes.access, [
              "open",
              "nonInteractive",
              "protected",
              "readOnly",
            ]);
            this.allowMacro = (0, _utils.getInteger)({
              data: attributes.allowMacro,
              defaultValue: 0,
              validate: (x) => x === 1,
            });
            this.anchorType = (0, _utils.getStringOption)(
              attributes.anchorType,
              [
                "topLeft",
                "bottomCenter",
                "bottomLeft",
                "bottomRight",
                "middleCenter",
                "middleLeft",
                "middleRight",
                "topCenter",
                "topRight",
              ]
            );
            this.colSpan = (0, _utils.getInteger)({
              data: attributes.colSpan,
              defaultValue: 1,
              validate: (n) => n >= 1 || n === -1,
            });
            this.columnWidths = (attributes.columnWidths || "")
              .trim()
              .split(/\s+/)
              .map((x) => (x === "-1" ? -1 : (0, _utils.getMeasurement)(x)));
            this.h = attributes.h
              ? (0, _utils.getMeasurement)(attributes.h)
              : "";
            this.hAlign = (0, _utils.getStringOption)(attributes.hAlign, [
              "left",
              "center",
              "justify",
              "justifyAll",
              "radix",
              "right",
            ]);
            this.id = attributes.id || "";
            this.layout = (0, _utils.getStringOption)(attributes.layout, [
              "position",
              "lr-tb",
              "rl-row",
              "rl-tb",
              "row",
              "table",
              "tb",
            ]);
            this.locale = attributes.locale || "";
            this.maxH = (0, _utils.getMeasurement)(attributes.maxH, "0pt");
            this.maxW = (0, _utils.getMeasurement)(attributes.maxW, "0pt");
            this.mergeMode = (0, _utils.getStringOption)(attributes.mergeMode, [
              "consumeData",
              "matchTemplate",
            ]);
            this.minH = (0, _utils.getMeasurement)(attributes.minH, "0pt");
            this.minW = (0, _utils.getMeasurement)(attributes.minW, "0pt");
            this.name = attributes.name || "";
            this.presence = (0, _utils.getStringOption)(attributes.presence, [
              "visible",
              "hidden",
              "inactive",
              "invisible",
            ]);
            this.relevant = (0, _utils.getRelevant)(attributes.relevant);
            this.restoreState = (0, _utils.getStringOption)(
              attributes.restoreState,
              ["manual", "auto"]
            );
            this.scope = (0, _utils.getStringOption)(attributes.scope, [
              "name",
              "none",
            ]);
            this.use = attributes.use || "";
            this.usehref = attributes.usehref || "";
            this.w = attributes.w
              ? (0, _utils.getMeasurement)(attributes.w)
              : "";
            this.x = (0, _utils.getMeasurement)(attributes.x, "0pt");
            this.y = (0, _utils.getMeasurement)(attributes.y, "0pt");
            this.assist = null;
            this.bind = null;
            this.bookend = null;
            this.border = null;
            this.break = null;
            this.calculate = null;
            this.desc = null;
            this.extras = null;
            this.keep = null;
            this.margin = null;
            this.occur = null;
            this.overflow = null;
            this.pageSet = null;
            this.para = null;
            this.traversal = null;
            this.validate = null;
            this.variables = null;
            this.area = new _xfa_object.XFAObjectArray();
            this.breakAfter = new _xfa_object.XFAObjectArray();
            this.breakBefore = new _xfa_object.XFAObjectArray();
            this.connect = new _xfa_object.XFAObjectArray();
            this.draw = new _xfa_object.XFAObjectArray();
            this.event = new _xfa_object.XFAObjectArray();
            this.exObject = new _xfa_object.XFAObjectArray();
            this.exclGroup = new _xfa_object.XFAObjectArray();
            this.field = new _xfa_object.XFAObjectArray();
            this.proto = new _xfa_object.XFAObjectArray();
            this.setProperty = new _xfa_object.XFAObjectArray();
            this.subform = new _xfa_object.XFAObjectArray();
            this.subformSet = new _xfa_object.XFAObjectArray();
          }
          [_symbol_utils.$getSubformParent]() {
            const parent = this[_symbol_utils.$getParent]();
            if (parent instanceof SubformSet) {
              return parent[_symbol_utils.$getSubformParent]();
            }
            return parent;
          }
          [_symbol_utils.$isBindable]() {
            return true;
          }
          [_symbol_utils.$isThereMoreWidth]() {
            return (
              (this.layout.endsWith("-tb") &&
                this[_symbol_utils.$extra].attempt === 0 &&
                this[_symbol_utils.$extra].numberInLine > 0) ||
              this[_symbol_utils.$getParent]()[
                _symbol_utils.$isThereMoreWidth
              ]()
            );
          }
          *[_symbol_utils.$getContainedChildren]() {
            yield* getContainedChildren(this);
          }
          [_symbol_utils.$flushHTML]() {
            return (0, _layout.flushHTML)(this);
          }
          [_symbol_utils.$addHTML](html, bbox) {
            (0, _layout.addHTML)(this, html, bbox);
          }
          [_symbol_utils.$getAvailableSpace]() {
            return (0, _layout.getAvailableSpace)(this);
          }
          [_symbol_utils.$isSplittable]() {
            const parent = this[_symbol_utils.$getSubformParent]();
            if (!parent[_symbol_utils.$isSplittable]()) {
              return false;
            }
            if (this[_symbol_utils.$extra]._isSplittable !== undefined) {
              return this[_symbol_utils.$extra]._isSplittable;
            }
            if (this.layout === "position" || this.layout.includes("row")) {
              this[_symbol_utils.$extra]._isSplittable = false;
              return false;
            }
            if (this.keep && this.keep.intact !== "none") {
              this[_symbol_utils.$extra]._isSplittable = false;
              return false;
            }
            if (
              parent.layout?.endsWith("-tb") &&
              parent[_symbol_utils.$extra].numberInLine !== 0
            ) {
              return false;
            }
            this[_symbol_utils.$extra]._isSplittable = true;
            return true;
          }
          [_symbol_utils.$toHTML](availableSpace) {
            setTabIndex(this);
            if (this.break) {
              if (
                this.break.after !== "auto" ||
                this.break.afterTarget !== ""
              ) {
                const node = new BreakAfter({
                  targetType: this.break.after,
                  target: this.break.afterTarget,
                  startNew: this.break.startNew.toString(),
                });
                node[_symbol_utils.$globalData] =
                  this[_symbol_utils.$globalData];
                this[_symbol_utils.$appendChild](node);
                this.breakAfter.push(node);
              }
              if (
                this.break.before !== "auto" ||
                this.break.beforeTarget !== ""
              ) {
                const node = new BreakBefore({
                  targetType: this.break.before,
                  target: this.break.beforeTarget,
                  startNew: this.break.startNew.toString(),
                });
                node[_symbol_utils.$globalData] =
                  this[_symbol_utils.$globalData];
                this[_symbol_utils.$appendChild](node);
                this.breakBefore.push(node);
              }
              if (this.break.overflowTarget !== "") {
                const node = new Overflow({
                  target: this.break.overflowTarget,
                  leader: this.break.overflowLeader,
                  trailer: this.break.overflowTrailer,
                });
                node[_symbol_utils.$globalData] =
                  this[_symbol_utils.$globalData];
                this[_symbol_utils.$appendChild](node);
                this.overflow.push(node);
              }
              this[_symbol_utils.$removeChild](this.break);
              this.break = null;
            }
            if (this.presence === "hidden" || this.presence === "inactive") {
              return _utils.HTMLResult.EMPTY;
            }
            if (
              this.breakBefore.children.length > 1 ||
              this.breakAfter.children.length > 1
            ) {
              (0, _util.warn)(
                "XFA - Several breakBefore or breakAfter in subforms: please file a bug."
              );
            }
            if (this.breakBefore.children.length >= 1) {
              const breakBefore = this.breakBefore.children[0];
              if (handleBreak(breakBefore)) {
                return _utils.HTMLResult.breakNode(breakBefore);
              }
            }
            if (this[_symbol_utils.$extra]?.afterBreakAfter) {
              return _utils.HTMLResult.EMPTY;
            }
            (0, _html_utils.fixDimensions)(this);
            const children = [];
            const attributes = {
              id: this[_symbol_utils.$uid],
              class: [],
            };
            (0, _html_utils.setAccess)(this, attributes.class);
            if (!this[_symbol_utils.$extra]) {
              this[_symbol_utils.$extra] = Object.create(null);
            }
            Object.assign(this[_symbol_utils.$extra], {
              children,
              line: null,
              attributes,
              attempt: 0,
              numberInLine: 0,
              availableSpace: {
                width: Math.min(this.w || Infinity, availableSpace.width),
                height: Math.min(this.h || Infinity, availableSpace.height),
              },
              width: 0,
              height: 0,
              prevHeight: 0,
              currentWidth: 0,
            });
            const root = this[_symbol_utils.$getTemplateRoot]();
            const savedNoLayoutFailure =
              root[_symbol_utils.$extra].noLayoutFailure;
            const isSplittable = this[_symbol_utils.$isSplittable]();
            if (!isSplittable) {
              setFirstUnsplittable(this);
            }
            if (!(0, _layout.checkDimensions)(this, availableSpace)) {
              return _utils.HTMLResult.FAILURE;
            }
            const filter = new Set([
              "area",
              "draw",
              "exclGroup",
              "field",
              "subform",
              "subformSet",
            ]);
            if (this.layout.includes("row")) {
              const columnWidths =
                this[_symbol_utils.$getSubformParent]().columnWidths;
              if (Array.isArray(columnWidths) && columnWidths.length > 0) {
                this[_symbol_utils.$extra].columnWidths = columnWidths;
                this[_symbol_utils.$extra].currentColumn = 0;
              }
            }
            const style = (0, _html_utils.toStyle)(
              this,
              "anchorType",
              "dimensions",
              "position",
              "presence",
              "border",
              "margin",
              "hAlign"
            );
            const classNames = ["xfaSubform"];
            const cl = (0, _html_utils.layoutClass)(this);
            if (cl) {
              classNames.push(cl);
            }
            attributes.style = style;
            attributes.class = classNames;
            if (this.name) {
              attributes.xfaName = this.name;
            }
            if (this.overflow) {
              const overflowExtra = this.overflow[_symbol_utils.$getExtra]();
              if (overflowExtra.addLeader) {
                overflowExtra.addLeader = false;
                handleOverflow(this, overflowExtra.leader, availableSpace);
              }
            }
            this[_symbol_utils.$pushPara]();
            const isLrTb = this.layout === "lr-tb" || this.layout === "rl-tb";
            const maxRun = isLrTb ? MAX_ATTEMPTS_FOR_LRTB_LAYOUT : 1;
            for (
              ;
              this[_symbol_utils.$extra].attempt < maxRun;
              this[_symbol_utils.$extra].attempt++
            ) {
              if (
                isLrTb &&
                this[_symbol_utils.$extra].attempt ===
                  MAX_ATTEMPTS_FOR_LRTB_LAYOUT - 1
              ) {
                this[_symbol_utils.$extra].numberInLine = 0;
              }
              const result = this[_symbol_utils.$childrenToHTML]({
                filter,
                include: true,
              });
              if (result.success) {
                break;
              }
              if (result.isBreak()) {
                this[_symbol_utils.$popPara]();
                return result;
              }
              if (
                isLrTb &&
                this[
